openapi: 3.0.1
info:
  description: This is the API of the Software Description Ontology at [https://w3id.org/okn/o/sdm](https://w3id.org/okn/o/sdm)
  title: Model Catalog
  version: v1.8.0
externalDocs:
  description: Model Catalog
  url: https://w3id.org/okn/o/sdm
servers:
- url: https://api.models.mint.isi.edu/v1.8.0
- url: http://localhost:8080/v1.8.0
- url: https://api.models.wifire.mint.isi.edu/v1.8.0
paths:
  /catalogidentifiers:
    get:
      description: Gets a list of all instances of CatalogIdentifier (more information
        in https://w3id.org/okn/o/sd#CatalogIdentifier)
      operationId: catalogidentifiers_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CatalogIdentifier'
                type: array
          description: Successful response - returns an array with the instances of
            CatalogIdentifier.
      summary: List all instances of CatalogIdentifier
      tags:
      - CatalogIdentifier
      x-openapi-router-controller: openapi_server.controllers.catalog_identifier_controller
    post:
      description: Create a new instance of CatalogIdentifier (more information in
        https://w3id.org/okn/o/sd#CatalogIdentifier)
      operationId: catalogidentifiers_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogIdentifier'
        description: Information about the CatalogIdentifierto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogIdentifier'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one CatalogIdentifier
      tags:
      - CatalogIdentifier
      x-openapi-router-controller: openapi_server.controllers.catalog_identifier_controller
  /catalogidentifiers/{id}:
    delete:
      description: Delete an existing CatalogIdentifier (more information in https://w3id.org/okn/o/sd#CatalogIdentifier)
      operationId: catalogidentifiers_id_delete
      parameters:
      - description: The ID of the CatalogIdentifier to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing CatalogIdentifier
      tags:
      - CatalogIdentifier
      x-openapi-router-controller: openapi_server.controllers.catalog_identifier_controller
    get:
      description: Gets the details of a given CatalogIdentifier (more information
        in https://w3id.org/okn/o/sd#CatalogIdentifier)
      operationId: catalogidentifiers_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the CatalogIdentifier to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogIdentifier'
          description: Gets the details of a given CatalogIdentifier
      summary: Get a single CatalogIdentifier by its id
      tags:
      - CatalogIdentifier
      x-openapi-router-controller: openapi_server.controllers.catalog_identifier_controller
    put:
      description: Updates an existing CatalogIdentifier (more information in https://w3id.org/okn/o/sd#CatalogIdentifier)
      operationId: catalogidentifiers_id_put
      parameters:
      - description: The ID of the CatalogIdentifier to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogIdentifier'
        description: An old CatalogIdentifierto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogIdentifier'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing CatalogIdentifier
      tags:
      - CatalogIdentifier
      x-openapi-router-controller: openapi_server.controllers.catalog_identifier_controller
  /causaldiagrams:
    get:
      description: Gets a list of all instances of CausalDiagram (more information
        in https://w3id.org/okn/o/sdm#CausalDiagram)
      operationId: causaldiagrams_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CausalDiagram'
                type: array
          description: Successful response - returns an array with the instances of
            CausalDiagram.
      summary: List all instances of CausalDiagram
      tags:
      - CausalDiagram
      x-openapi-router-controller: openapi_server.controllers.causal_diagram_controller
    post:
      description: Create a new instance of CausalDiagram (more information in https://w3id.org/okn/o/sdm#CausalDiagram)
      operationId: causaldiagrams_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CausalDiagram'
        description: Information about the CausalDiagramto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CausalDiagram'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one CausalDiagram
      tags:
      - CausalDiagram
      x-openapi-router-controller: openapi_server.controllers.causal_diagram_controller
  /causaldiagrams/{id}:
    delete:
      description: Delete an existing CausalDiagram (more information in https://w3id.org/okn/o/sdm#CausalDiagram)
      operationId: causaldiagrams_id_delete
      parameters:
      - description: The ID of the CausalDiagram to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing CausalDiagram
      tags:
      - CausalDiagram
      x-openapi-router-controller: openapi_server.controllers.causal_diagram_controller
    get:
      description: Gets the details of a given CausalDiagram (more information in
        https://w3id.org/okn/o/sdm#CausalDiagram)
      operationId: causaldiagrams_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the CausalDiagram to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CausalDiagram'
          description: Gets the details of a given CausalDiagram
      summary: Get a single CausalDiagram by its id
      tags:
      - CausalDiagram
      x-openapi-router-controller: openapi_server.controllers.causal_diagram_controller
    put:
      description: Updates an existing CausalDiagram (more information in https://w3id.org/okn/o/sdm#CausalDiagram)
      operationId: causaldiagrams_id_put
      parameters:
      - description: The ID of the CausalDiagram to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CausalDiagram'
        description: An old CausalDiagramto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CausalDiagram'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing CausalDiagram
      tags:
      - CausalDiagram
      x-openapi-router-controller: openapi_server.controllers.causal_diagram_controller
  /configurationsetups:
    get:
      description: Gets a list of all instances of ConfigurationSetup (more information
        in https://w3id.org/okn/o/sd#ConfigurationSetup)
      operationId: configurationsetups_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ConfigurationSetup'
                type: array
          description: Successful response - returns an array with the instances of
            ConfigurationSetup.
      summary: List all instances of ConfigurationSetup
      tags:
      - ConfigurationSetup
      x-openapi-router-controller: openapi_server.controllers.configuration_setup_controller
    post:
      description: Create a new instance of ConfigurationSetup (more information in
        https://w3id.org/okn/o/sd#ConfigurationSetup)
      operationId: configurationsetups_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationSetup'
        description: Information about the ConfigurationSetupto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationSetup'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one ConfigurationSetup
      tags:
      - ConfigurationSetup
      x-openapi-router-controller: openapi_server.controllers.configuration_setup_controller
  /configurationsetups/{id}:
    delete:
      description: Delete an existing ConfigurationSetup (more information in https://w3id.org/okn/o/sd#ConfigurationSetup)
      operationId: configurationsetups_id_delete
      parameters:
      - description: The ID of the ConfigurationSetup to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing ConfigurationSetup
      tags:
      - ConfigurationSetup
      x-openapi-router-controller: openapi_server.controllers.configuration_setup_controller
    get:
      description: Gets the details of a given ConfigurationSetup (more information
        in https://w3id.org/okn/o/sd#ConfigurationSetup)
      operationId: configurationsetups_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the ConfigurationSetup to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationSetup'
          description: Gets the details of a given ConfigurationSetup
      summary: Get a single ConfigurationSetup by its id
      tags:
      - ConfigurationSetup
      x-openapi-router-controller: openapi_server.controllers.configuration_setup_controller
    put:
      description: Updates an existing ConfigurationSetup (more information in https://w3id.org/okn/o/sd#ConfigurationSetup)
      operationId: configurationsetups_id_put
      parameters:
      - description: The ID of the ConfigurationSetup to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationSetup'
        description: An old ConfigurationSetupto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationSetup'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing ConfigurationSetup
      tags:
      - ConfigurationSetup
      x-openapi-router-controller: openapi_server.controllers.configuration_setup_controller
  /constraints:
    get:
      description: Gets a list of all instances of Constraint (more information in
        https://w3id.org/okn/o/sd#Constraint)
      operationId: constraints_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Constraint'
                type: array
          description: Successful response - returns an array with the instances of
            Constraint.
      summary: List all instances of Constraint
      tags:
      - Constraint
      x-openapi-router-controller: openapi_server.controllers.constraint_controller
    post:
      description: Create a new instance of Constraint (more information in https://w3id.org/okn/o/sd#Constraint)
      operationId: constraints_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Constraint'
        description: Information about the Constraintto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Constraint'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one Constraint
      tags:
      - Constraint
      x-openapi-router-controller: openapi_server.controllers.constraint_controller
  /constraints/{id}:
    delete:
      description: Delete an existing Constraint (more information in https://w3id.org/okn/o/sd#Constraint)
      operationId: constraints_id_delete
      parameters:
      - description: The ID of the Constraint to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing Constraint
      tags:
      - Constraint
      x-openapi-router-controller: openapi_server.controllers.constraint_controller
    get:
      description: Gets the details of a given Constraint (more information in https://w3id.org/okn/o/sd#Constraint)
      operationId: constraints_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the Constraint to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Constraint'
          description: Gets the details of a given Constraint
      summary: Get a single Constraint by its id
      tags:
      - Constraint
      x-openapi-router-controller: openapi_server.controllers.constraint_controller
    put:
      description: Updates an existing Constraint (more information in https://w3id.org/okn/o/sd#Constraint)
      operationId: constraints_id_put
      parameters:
      - description: The ID of the Constraint to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Constraint'
        description: An old Constraintto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Constraint'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing Constraint
      tags:
      - Constraint
      x-openapi-router-controller: openapi_server.controllers.constraint_controller
  /coupledmodels:
    get:
      description: Gets a list of all instances of CoupledModel (more information
        in https://w3id.org/okn/o/sdm#CoupledModel)
      operationId: coupledmodels_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CoupledModel'
                type: array
          description: Successful response - returns an array with the instances of
            CoupledModel.
      summary: List all instances of CoupledModel
      tags:
      - CoupledModel
      x-openapi-router-controller: openapi_server.controllers.coupled_model_controller
    post:
      description: Create a new instance of CoupledModel (more information in https://w3id.org/okn/o/sdm#CoupledModel)
      operationId: coupledmodels_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoupledModel'
        description: Information about the CoupledModelto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoupledModel'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one CoupledModel
      tags:
      - CoupledModel
      x-openapi-router-controller: openapi_server.controllers.coupled_model_controller
  /coupledmodels/{id}:
    delete:
      description: Delete an existing CoupledModel (more information in https://w3id.org/okn/o/sdm#CoupledModel)
      operationId: coupledmodels_id_delete
      parameters:
      - description: The ID of the CoupledModel to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing CoupledModel
      tags:
      - CoupledModel
      x-openapi-router-controller: openapi_server.controllers.coupled_model_controller
    get:
      description: Gets the details of a given CoupledModel (more information in https://w3id.org/okn/o/sdm#CoupledModel)
      operationId: coupledmodels_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the CoupledModel to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoupledModel'
          description: Gets the details of a given CoupledModel
      summary: Get a single CoupledModel by its id
      tags:
      - CoupledModel
      x-openapi-router-controller: openapi_server.controllers.coupled_model_controller
    put:
      description: Updates an existing CoupledModel (more information in https://w3id.org/okn/o/sdm#CoupledModel)
      operationId: coupledmodels_id_put
      parameters:
      - description: The ID of the CoupledModel to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoupledModel'
        description: An old CoupledModelto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoupledModel'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing CoupledModel
      tags:
      - CoupledModel
      x-openapi-router-controller: openapi_server.controllers.coupled_model_controller
  /custom/configuration/{id}/inputs:
    get:
      description: Gets all inputs of a configuration
      operationId: custom_configuration_id_inputs_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the custom query
        explode: true
        in: query
        name: custom_query_name
        required: false
        schema:
          default: search_datasetspecification_by_configurationid
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DatasetSpecification'
                type: array
          description: Gets all inputs of a configuration
      summary: Gets all inputs of a configuration
      tags:
      - DatasetSpecification
      x-openapi-router-controller: openapi_server.controllers.dataset_specification_controller
    x-oba-custom: true
  /custom/configurationsetups/{id}:
    get:
      description: Gets the details of a single instance of a ModelConfigurationSetup
      operationId: custom_configurationsetups_id_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the custom query
        explode: true
        in: query
        name: custom_query_name
        required: false
        schema:
          default: custom_configurationsetups
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelConfigurationSetup'
          description: Gets the details of a single instance of  ModelConfigurationSetup
      summary: Get a ModelConfigurationSetup
      tags:
      - ConfigurationSetup
      x-openapi-router-controller: openapi_server.controllers.configuration_setup_controller
    x-oba-custom: true
  /custom/datasetspecifications:
    get:
      description: Gets all inputs of a configuration
      operationId: custom_datasetspecifications_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the configuration
        explode: true
        in: query
        name: configurationid
        required: true
        schema:
          type: string
        style: form
      - description: Name of the custom query
        explode: true
        in: query
        name: custom_query_name
        required: false
        schema:
          default: custom_allinputs
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DatasetSpecification'
                type: array
          description: Gets all inputs of a configuration
      summary: Gets all inputs of a configuration
      tags:
      - DatasetSpecification
      x-openapi-router-controller: openapi_server.controllers.dataset_specification_controller
    x-oba-custom: true
  /custom/datasetspecifications/{id}/datatransformations:
    get:
      description: Gets a list of data transformations related a dataset
      operationId: custom_datasetspecifications_id_datatransformations_get
      parameters:
      - description: Name of the custom query
        explode: true
        in: query
        name: custom_query_name
        required: false
        schema:
          default: custom_datatransformations
          type: string
        style: form
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the dataspecification
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataTransformation'
                type: array
          description: Gets a list of data transformations filter related a dataset.
      summary: Gets a list of data transformations related a dataset
      tags:
      - DataTransformation
      x-openapi-router-controller: openapi_server.controllers.data_transformation_controller
    x-oba-custom: true
  /custom/model/index:
    get:
      description: Gets the details of a single instance of a Model
      operationId: custom_model_index_get
      parameters:
      - description: Name of the custom query
        explode: true
        in: query
        name: custom_query_name
        required: false
        schema:
          default: custom_model_index
          type: string
        style: form
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Label of NumericalIndex
        explode: true
        in: query
        name: label
        required: true
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Model'
                type: array
          description: Gets the details of a single instance of Model
      summary: Get a Model
      tags:
      - Model
      x-openapi-router-controller: openapi_server.controllers.model_controller
    x-oba-custom: true
  /custom/model/intervention:
    get:
      description: Gets the details of a single instance of a Model
      operationId: custom_model_intervention_get
      parameters:
      - description: Name of the custom query
        explode: true
        in: query
        name: custom_query_name
        required: false
        schema:
          default: custom_model_intervetion
          type: string
        style: form
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Label of intervation
        explode: true
        in: query
        name: label
        required: true
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Model'
                type: array
          description: Gets the details of a single instance of Model
      summary: Get a Model
      tags:
      - Model
      x-openapi-router-controller: openapi_server.controllers.model_controller
    x-oba-custom: true
  /custom/model/region:
    get:
      description: Gets the details of a single instance of a Model
      operationId: custom_model_region_get
      parameters:
      - description: Name of the custom query
        explode: true
        in: query
        name: custom_query_name
        required: false
        schema:
          default: custom_model_region
          type: string
        style: form
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: region to search
        explode: true
        in: query
        name: label
        required: true
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Model'
                type: array
          description: Gets the details of a single instance of Model
      summary: Get a Model
      tags:
      - Model
      x-openapi-router-controller: openapi_server.controllers.model_controller
    x-oba-custom: true
  /custom/modelconfigurations/{id}:
    get:
      description: Gets the details of a single instance of a ModelConfiguration
      operationId: custom_modelconfigurations_id_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the custom query
        explode: true
        in: query
        name: custom_query_name
        required: false
        schema:
          default: custom_modelconfigurations
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelConfiguration'
          description: Gets the details of a single instance of ModelConfiguration
      summary: Get a ModelConfiguration
      tags:
      - ModelConfiguration
      x-openapi-router-controller: openapi_server.controllers.model_configuration_controller
    x-oba-custom: true
  /custom/modelconfigurationsetups/variable:
    get:
      description: Get model configurations by variable name
      operationId: custom_modelconfigurationsetups_variable_get
      parameters:
      - description: Name of the custom query
        explode: true
        in: query
        name: custom_query_name
        required: false
        schema:
          default: custom_modelconfigurationsetups_variable
          type: string
        style: form
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: variable to search
        explode: true
        in: query
        name: label
        required: true
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelConfigurationSetup'
                type: array
          description: Gets a list of instance of ModelConfigurationSetup
      summary: Get a list  Model
      tags:
      - ModelConfigurationSetup
      x-openapi-router-controller: openapi_server.controllers.model_configuration_setup_controller
    x-oba-custom: true
  /custom/modelconfigurationsetups/{id}:
    get:
      description: Gets the details of a single instance of a ModelConfigurationSetup
      operationId: custom_modelconfigurationsetups_id_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the custom query
        explode: true
        in: query
        name: custom_query_name
        required: false
        schema:
          default: custom_modelconfigurationsetups
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelConfigurationSetup'
          description: Gets the details of a single instance of  ModelConfigurationSetup
      summary: Get a ModelConfigurationSetup
      tags:
      - ModelConfigurationSetup
      x-openapi-router-controller: openapi_server.controllers.model_configuration_setup_controller
    x-oba-custom: true
  /custom/models/standard_variable:
    get:
      description: Gets a list of model filter by the label of a standard variable
      operationId: custom_models_standard_variable_get
      parameters:
      - description: Name of the custom query
        explode: true
        in: query
        name: custom_query_name
        required: false
        schema:
          default: custom_model_standard_variable
          type: string
        style: form
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: standard variable name
        explode: true
        in: query
        name: label
        required: true
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Model'
                type: array
          description: Gets a list of models
      summary: Get a list of models
      tags:
      - Model
      x-openapi-router-controller: openapi_server.controllers.model_controller
    x-oba-custom: true
  /custom/models/variable:
    get:
      description: Get models by variable name
      operationId: custom_models_variable_get
      parameters:
      - description: Name of the custom query
        explode: true
        in: query
        name: custom_query_name
        required: false
        schema:
          default: custom_models_variable
          type: string
        style: form
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: variable to search
        explode: true
        in: query
        name: label
        required: true
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Model'
                type: array
          description: Gets a list of instance of Model
      summary: Get a list of Model
      tags:
      - Model
      x-openapi-router-controller: openapi_server.controllers.model_controller
    x-oba-custom: true
  /datasetspecifications:
    get:
      description: Gets a list of all instances of DatasetSpecification (more information
        in https://w3id.org/okn/o/sd#DatasetSpecification)
      operationId: datasetspecifications_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DatasetSpecification'
                type: array
          description: Successful response - returns an array with the instances of
            DatasetSpecification.
      summary: List all instances of DatasetSpecification
      tags:
      - DatasetSpecification
      x-openapi-router-controller: openapi_server.controllers.dataset_specification_controller
    post:
      description: Create a new instance of DatasetSpecification (more information
        in https://w3id.org/okn/o/sd#DatasetSpecification)
      operationId: datasetspecifications_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetSpecification'
        description: Information about the DatasetSpecificationto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetSpecification'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one DatasetSpecification
      tags:
      - DatasetSpecification
      x-openapi-router-controller: openapi_server.controllers.dataset_specification_controller
  /datasetspecifications/{id}:
    delete:
      description: Delete an existing DatasetSpecification (more information in https://w3id.org/okn/o/sd#DatasetSpecification)
      operationId: datasetspecifications_id_delete
      parameters:
      - description: The ID of the DatasetSpecification to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing DatasetSpecification
      tags:
      - DatasetSpecification
      x-openapi-router-controller: openapi_server.controllers.dataset_specification_controller
    get:
      description: Gets the details of a given DatasetSpecification (more information
        in https://w3id.org/okn/o/sd#DatasetSpecification)
      operationId: datasetspecifications_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the DatasetSpecification to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetSpecification'
          description: Gets the details of a given DatasetSpecification
      summary: Get a single DatasetSpecification by its id
      tags:
      - DatasetSpecification
      x-openapi-router-controller: openapi_server.controllers.dataset_specification_controller
    put:
      description: Updates an existing DatasetSpecification (more information in https://w3id.org/okn/o/sd#DatasetSpecification)
      operationId: datasetspecifications_id_put
      parameters:
      - description: The ID of the DatasetSpecification to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetSpecification'
        description: An old DatasetSpecificationto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetSpecification'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing DatasetSpecification
      tags:
      - DatasetSpecification
      x-openapi-router-controller: openapi_server.controllers.dataset_specification_controller
  /datatransformations:
    get:
      description: Gets a list of all instances of DataTransformation (more information
        in https://w3id.org/okn/o/sd#DataTransformation)
      operationId: datatransformations_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataTransformation'
                type: array
          description: Successful response - returns an array with the instances of
            DataTransformation.
      summary: List all instances of DataTransformation
      tags:
      - DataTransformation
      x-openapi-router-controller: openapi_server.controllers.data_transformation_controller
    post:
      description: Create a new instance of DataTransformation (more information in
        https://w3id.org/okn/o/sd#DataTransformation)
      operationId: datatransformations_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataTransformation'
        description: Information about the DataTransformationto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTransformation'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one DataTransformation
      tags:
      - DataTransformation
      x-openapi-router-controller: openapi_server.controllers.data_transformation_controller
  /datatransformations/{id}:
    delete:
      description: Delete an existing DataTransformation (more information in https://w3id.org/okn/o/sd#DataTransformation)
      operationId: datatransformations_id_delete
      parameters:
      - description: The ID of the DataTransformation to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing DataTransformation
      tags:
      - DataTransformation
      x-openapi-router-controller: openapi_server.controllers.data_transformation_controller
    get:
      description: Gets the details of a given DataTransformation (more information
        in https://w3id.org/okn/o/sd#DataTransformation)
      operationId: datatransformations_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the DataTransformation to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTransformation'
          description: Gets the details of a given DataTransformation
      summary: Get a single DataTransformation by its id
      tags:
      - DataTransformation
      x-openapi-router-controller: openapi_server.controllers.data_transformation_controller
    put:
      description: Updates an existing DataTransformation (more information in https://w3id.org/okn/o/sd#DataTransformation)
      operationId: datatransformations_id_put
      parameters:
      - description: The ID of the DataTransformation to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataTransformation'
        description: An old DataTransformationto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTransformation'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing DataTransformation
      tags:
      - DataTransformation
      x-openapi-router-controller: openapi_server.controllers.data_transformation_controller
  /datatransformationsetups:
    get:
      description: Gets a list of all instances of DataTransformationSetup (more information
        in https://w3id.org/okn/o/sd#DataTransformationSetup)
      operationId: datatransformationsetups_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataTransformationSetup'
                type: array
          description: Successful response - returns an array with the instances of
            DataTransformationSetup.
      summary: List all instances of DataTransformationSetup
      tags:
      - DataTransformationSetup
      x-openapi-router-controller: openapi_server.controllers.data_transformation_setup_controller
    post:
      description: Create a new instance of DataTransformationSetup (more information
        in https://w3id.org/okn/o/sd#DataTransformationSetup)
      operationId: datatransformationsetups_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataTransformationSetup'
        description: Information about the DataTransformationSetupto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTransformationSetup'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one DataTransformationSetup
      tags:
      - DataTransformationSetup
      x-openapi-router-controller: openapi_server.controllers.data_transformation_setup_controller
  /datatransformationsetups/{id}:
    delete:
      description: Delete an existing DataTransformationSetup (more information in
        https://w3id.org/okn/o/sd#DataTransformationSetup)
      operationId: datatransformationsetups_id_delete
      parameters:
      - description: The ID of the DataTransformationSetup to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing DataTransformationSetup
      tags:
      - DataTransformationSetup
      x-openapi-router-controller: openapi_server.controllers.data_transformation_setup_controller
    get:
      description: Gets the details of a given DataTransformationSetup (more information
        in https://w3id.org/okn/o/sd#DataTransformationSetup)
      operationId: datatransformationsetups_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the DataTransformationSetup to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTransformationSetup'
          description: Gets the details of a given DataTransformationSetup
      summary: Get a single DataTransformationSetup by its id
      tags:
      - DataTransformationSetup
      x-openapi-router-controller: openapi_server.controllers.data_transformation_setup_controller
    put:
      description: Updates an existing DataTransformationSetup (more information in
        https://w3id.org/okn/o/sd#DataTransformationSetup)
      operationId: datatransformationsetups_id_put
      parameters:
      - description: The ID of the DataTransformationSetup to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataTransformationSetup'
        description: An old DataTransformationSetupto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTransformationSetup'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing DataTransformationSetup
      tags:
      - DataTransformationSetup
      x-openapi-router-controller: openapi_server.controllers.data_transformation_setup_controller
  /empiricalmodels:
    get:
      description: Gets a list of all instances of EmpiricalModel (more information
        in https://w3id.org/okn/o/sdm#EmpiricalModel)
      operationId: empiricalmodels_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EmpiricalModel'
                type: array
          description: Successful response - returns an array with the instances of
            EmpiricalModel.
      summary: List all instances of EmpiricalModel
      tags:
      - EmpiricalModel
      x-openapi-router-controller: openapi_server.controllers.empirical_model_controller
    post:
      description: Create a new instance of EmpiricalModel (more information in https://w3id.org/okn/o/sdm#EmpiricalModel)
      operationId: empiricalmodels_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmpiricalModel'
        description: Information about the EmpiricalModelto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmpiricalModel'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one EmpiricalModel
      tags:
      - EmpiricalModel
      x-openapi-router-controller: openapi_server.controllers.empirical_model_controller
  /empiricalmodels/{id}:
    delete:
      description: Delete an existing EmpiricalModel (more information in https://w3id.org/okn/o/sdm#EmpiricalModel)
      operationId: empiricalmodels_id_delete
      parameters:
      - description: The ID of the EmpiricalModel to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing EmpiricalModel
      tags:
      - EmpiricalModel
      x-openapi-router-controller: openapi_server.controllers.empirical_model_controller
    get:
      description: Gets the details of a given EmpiricalModel (more information in
        https://w3id.org/okn/o/sdm#EmpiricalModel)
      operationId: empiricalmodels_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the EmpiricalModel to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmpiricalModel'
          description: Gets the details of a given EmpiricalModel
      summary: Get a single EmpiricalModel by its id
      tags:
      - EmpiricalModel
      x-openapi-router-controller: openapi_server.controllers.empirical_model_controller
    put:
      description: Updates an existing EmpiricalModel (more information in https://w3id.org/okn/o/sdm#EmpiricalModel)
      operationId: empiricalmodels_id_put
      parameters:
      - description: The ID of the EmpiricalModel to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmpiricalModel'
        description: An old EmpiricalModelto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmpiricalModel'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing EmpiricalModel
      tags:
      - EmpiricalModel
      x-openapi-router-controller: openapi_server.controllers.empirical_model_controller
  /emulators:
    get:
      description: Gets a list of all instances of Emulator (more information in https://w3id.org/okn/o/sdm#Emulator)
      operationId: emulators_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Emulator'
                type: array
          description: Successful response - returns an array with the instances of
            Emulator.
      summary: List all instances of Emulator
      tags:
      - Emulator
      x-openapi-router-controller: openapi_server.controllers.emulator_controller
    post:
      description: Create a new instance of Emulator (more information in https://w3id.org/okn/o/sdm#Emulator)
      operationId: emulators_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Emulator'
        description: Information about the Emulatorto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Emulator'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one Emulator
      tags:
      - Emulator
      x-openapi-router-controller: openapi_server.controllers.emulator_controller
  /emulators/{id}:
    delete:
      description: Delete an existing Emulator (more information in https://w3id.org/okn/o/sdm#Emulator)
      operationId: emulators_id_delete
      parameters:
      - description: The ID of the Emulator to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing Emulator
      tags:
      - Emulator
      x-openapi-router-controller: openapi_server.controllers.emulator_controller
    get:
      description: Gets the details of a given Emulator (more information in https://w3id.org/okn/o/sdm#Emulator)
      operationId: emulators_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the Emulator to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Emulator'
          description: Gets the details of a given Emulator
      summary: Get a single Emulator by its id
      tags:
      - Emulator
      x-openapi-router-controller: openapi_server.controllers.emulator_controller
    put:
      description: Updates an existing Emulator (more information in https://w3id.org/okn/o/sdm#Emulator)
      operationId: emulators_id_put
      parameters:
      - description: The ID of the Emulator to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Emulator'
        description: An old Emulatorto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Emulator'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing Emulator
      tags:
      - Emulator
      x-openapi-router-controller: openapi_server.controllers.emulator_controller
  /equations:
    get:
      description: Gets a list of all instances of Equation (more information in https://w3id.org/okn/o/sdm#Equation)
      operationId: equations_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Equation'
                type: array
          description: Successful response - returns an array with the instances of
            Equation.
      summary: List all instances of Equation
      tags:
      - Equation
      x-openapi-router-controller: openapi_server.controllers.equation_controller
    post:
      description: Create a new instance of Equation (more information in https://w3id.org/okn/o/sdm#Equation)
      operationId: equations_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Equation'
        description: Information about the Equationto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equation'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one Equation
      tags:
      - Equation
      x-openapi-router-controller: openapi_server.controllers.equation_controller
  /equations/{id}:
    delete:
      description: Delete an existing Equation (more information in https://w3id.org/okn/o/sdm#Equation)
      operationId: equations_id_delete
      parameters:
      - description: The ID of the Equation to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing Equation
      tags:
      - Equation
      x-openapi-router-controller: openapi_server.controllers.equation_controller
    get:
      description: Gets the details of a given Equation (more information in https://w3id.org/okn/o/sdm#Equation)
      operationId: equations_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the Equation to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equation'
          description: Gets the details of a given Equation
      summary: Get a single Equation by its id
      tags:
      - Equation
      x-openapi-router-controller: openapi_server.controllers.equation_controller
    put:
      description: Updates an existing Equation (more information in https://w3id.org/okn/o/sdm#Equation)
      operationId: equations_id_put
      parameters:
      - description: The ID of the Equation to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Equation'
        description: An old Equationto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equation'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing Equation
      tags:
      - Equation
      x-openapi-router-controller: openapi_server.controllers.equation_controller
  /fundinginformations:
    get:
      description: Gets a list of all instances of FundingInformation (more information
        in https://w3id.org/okn/o/sd#FundingInformation)
      operationId: fundinginformations_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FundingInformation'
                type: array
          description: Successful response - returns an array with the instances of
            FundingInformation.
      summary: List all instances of FundingInformation
      tags:
      - FundingInformation
      x-openapi-router-controller: openapi_server.controllers.funding_information_controller
    post:
      description: Create a new instance of FundingInformation (more information in
        https://w3id.org/okn/o/sd#FundingInformation)
      operationId: fundinginformations_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FundingInformation'
        description: Information about the FundingInformationto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundingInformation'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one FundingInformation
      tags:
      - FundingInformation
      x-openapi-router-controller: openapi_server.controllers.funding_information_controller
  /fundinginformations/{id}:
    delete:
      description: Delete an existing FundingInformation (more information in https://w3id.org/okn/o/sd#FundingInformation)
      operationId: fundinginformations_id_delete
      parameters:
      - description: The ID of the FundingInformation to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing FundingInformation
      tags:
      - FundingInformation
      x-openapi-router-controller: openapi_server.controllers.funding_information_controller
    get:
      description: Gets the details of a given FundingInformation (more information
        in https://w3id.org/okn/o/sd#FundingInformation)
      operationId: fundinginformations_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the FundingInformation to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundingInformation'
          description: Gets the details of a given FundingInformation
      summary: Get a single FundingInformation by its id
      tags:
      - FundingInformation
      x-openapi-router-controller: openapi_server.controllers.funding_information_controller
    put:
      description: Updates an existing FundingInformation (more information in https://w3id.org/okn/o/sd#FundingInformation)
      operationId: fundinginformations_id_put
      parameters:
      - description: The ID of the FundingInformation to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FundingInformation'
        description: An old FundingInformationto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundingInformation'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing FundingInformation
      tags:
      - FundingInformation
      x-openapi-router-controller: openapi_server.controllers.funding_information_controller
  /geocoordinatess:
    get:
      description: Gets a list of all instances of GeoCoordinates (more information
        in https://w3id.org/okn/o/sdm#GeoCoordinates)
      operationId: geocoordinatess_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GeoCoordinates'
                type: array
          description: Successful response - returns an array with the instances of
            GeoCoordinates.
      summary: List all instances of GeoCoordinates
      tags:
      - GeoCoordinates
      x-openapi-router-controller: openapi_server.controllers.geo_coordinates_controller
    post:
      description: Create a new instance of GeoCoordinates (more information in https://w3id.org/okn/o/sdm#GeoCoordinates)
      operationId: geocoordinatess_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeoCoordinates'
        description: Information about the GeoCoordinatesto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoCoordinates'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one GeoCoordinates
      tags:
      - GeoCoordinates
      x-openapi-router-controller: openapi_server.controllers.geo_coordinates_controller
  /geocoordinatess/{id}:
    delete:
      description: Delete an existing GeoCoordinates (more information in https://w3id.org/okn/o/sdm#GeoCoordinates)
      operationId: geocoordinatess_id_delete
      parameters:
      - description: The ID of the GeoCoordinates to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing GeoCoordinates
      tags:
      - GeoCoordinates
      x-openapi-router-controller: openapi_server.controllers.geo_coordinates_controller
    get:
      description: Gets the details of a given GeoCoordinates (more information in
        https://w3id.org/okn/o/sdm#GeoCoordinates)
      operationId: geocoordinatess_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the GeoCoordinates to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoCoordinates'
          description: Gets the details of a given GeoCoordinates
      summary: Get a single GeoCoordinates by its id
      tags:
      - GeoCoordinates
      x-openapi-router-controller: openapi_server.controllers.geo_coordinates_controller
    put:
      description: Updates an existing GeoCoordinates (more information in https://w3id.org/okn/o/sdm#GeoCoordinates)
      operationId: geocoordinatess_id_put
      parameters:
      - description: The ID of the GeoCoordinates to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeoCoordinates'
        description: An old GeoCoordinatesto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoCoordinates'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing GeoCoordinates
      tags:
      - GeoCoordinates
      x-openapi-router-controller: openapi_server.controllers.geo_coordinates_controller
  /geoshapes:
    get:
      description: Gets a list of all instances of GeoShape (more information in https://w3id.org/okn/o/sdm#GeoShape)
      operationId: geoshapes_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GeoShape'
                type: array
          description: Successful response - returns an array with the instances of
            GeoShape.
      summary: List all instances of GeoShape
      tags:
      - GeoShape
      x-openapi-router-controller: openapi_server.controllers.geo_shape_controller
    post:
      description: Create a new instance of GeoShape (more information in https://w3id.org/okn/o/sdm#GeoShape)
      operationId: geoshapes_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeoShape'
        description: Information about the GeoShapeto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoShape'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one GeoShape
      tags:
      - GeoShape
      x-openapi-router-controller: openapi_server.controllers.geo_shape_controller
  /geoshapes/{id}:
    delete:
      description: Delete an existing GeoShape (more information in https://w3id.org/okn/o/sdm#GeoShape)
      operationId: geoshapes_id_delete
      parameters:
      - description: The ID of the GeoShape to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing GeoShape
      tags:
      - GeoShape
      x-openapi-router-controller: openapi_server.controllers.geo_shape_controller
    get:
      description: Gets the details of a given GeoShape (more information in https://w3id.org/okn/o/sdm#GeoShape)
      operationId: geoshapes_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the GeoShape to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoShape'
          description: Gets the details of a given GeoShape
      summary: Get a single GeoShape by its id
      tags:
      - GeoShape
      x-openapi-router-controller: openapi_server.controllers.geo_shape_controller
    put:
      description: Updates an existing GeoShape (more information in https://w3id.org/okn/o/sdm#GeoShape)
      operationId: geoshapes_id_put
      parameters:
      - description: The ID of the GeoShape to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeoShape'
        description: An old GeoShapeto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoShape'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing GeoShape
      tags:
      - GeoShape
      x-openapi-router-controller: openapi_server.controllers.geo_shape_controller
  /grids:
    get:
      description: Gets a list of all instances of Grid (more information in https://w3id.org/okn/o/sdm#Grid)
      operationId: grids_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Grid'
                type: array
          description: Successful response - returns an array with the instances of
            Grid.
      summary: List all instances of Grid
      tags:
      - Grid
      x-openapi-router-controller: openapi_server.controllers.grid_controller
    post:
      description: Create a new instance of Grid (more information in https://w3id.org/okn/o/sdm#Grid)
      operationId: grids_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Grid'
        description: Information about the Gridto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grid'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one Grid
      tags:
      - Grid
      x-openapi-router-controller: openapi_server.controllers.grid_controller
  /grids/{id}:
    delete:
      description: Delete an existing Grid (more information in https://w3id.org/okn/o/sdm#Grid)
      operationId: grids_id_delete
      parameters:
      - description: The ID of the Grid to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing Grid
      tags:
      - Grid
      x-openapi-router-controller: openapi_server.controllers.grid_controller
    get:
      description: Gets the details of a given Grid (more information in https://w3id.org/okn/o/sdm#Grid)
      operationId: grids_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the Grid to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grid'
          description: Gets the details of a given Grid
      summary: Get a single Grid by its id
      tags:
      - Grid
      x-openapi-router-controller: openapi_server.controllers.grid_controller
    put:
      description: Updates an existing Grid (more information in https://w3id.org/okn/o/sdm#Grid)
      operationId: grids_id_put
      parameters:
      - description: The ID of the Grid to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Grid'
        description: An old Gridto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grid'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing Grid
      tags:
      - Grid
      x-openapi-router-controller: openapi_server.controllers.grid_controller
  /hybridmodels:
    get:
      description: Gets a list of all instances of HybridModel (more information in
        https://w3id.org/okn/o/sdm#HybridModel)
      operationId: hybridmodels_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/HybridModel'
                type: array
          description: Successful response - returns an array with the instances of
            HybridModel.
      summary: List all instances of HybridModel
      tags:
      - HybridModel
      x-openapi-router-controller: openapi_server.controllers.hybrid_model_controller
    post:
      description: Create a new instance of HybridModel (more information in https://w3id.org/okn/o/sdm#HybridModel)
      operationId: hybridmodels_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HybridModel'
        description: Information about the HybridModelto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HybridModel'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one HybridModel
      tags:
      - HybridModel
      x-openapi-router-controller: openapi_server.controllers.hybrid_model_controller
  /hybridmodels/{id}:
    delete:
      description: Delete an existing HybridModel (more information in https://w3id.org/okn/o/sdm#HybridModel)
      operationId: hybridmodels_id_delete
      parameters:
      - description: The ID of the HybridModel to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing HybridModel
      tags:
      - HybridModel
      x-openapi-router-controller: openapi_server.controllers.hybrid_model_controller
    get:
      description: Gets the details of a given HybridModel (more information in https://w3id.org/okn/o/sdm#HybridModel)
      operationId: hybridmodels_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the HybridModel to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HybridModel'
          description: Gets the details of a given HybridModel
      summary: Get a single HybridModel by its id
      tags:
      - HybridModel
      x-openapi-router-controller: openapi_server.controllers.hybrid_model_controller
    put:
      description: Updates an existing HybridModel (more information in https://w3id.org/okn/o/sdm#HybridModel)
      operationId: hybridmodels_id_put
      parameters:
      - description: The ID of the HybridModel to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HybridModel'
        description: An old HybridModelto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HybridModel'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing HybridModel
      tags:
      - HybridModel
      x-openapi-router-controller: openapi_server.controllers.hybrid_model_controller
  /images:
    get:
      description: Gets a list of all instances of Image (more information in https://w3id.org/okn/o/sd#Image)
      operationId: images_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Image'
                type: array
          description: Successful response - returns an array with the instances of
            Image.
      summary: List all instances of Image
      tags:
      - Image
      x-openapi-router-controller: openapi_server.controllers.image_controller
    post:
      description: Create a new instance of Image (more information in https://w3id.org/okn/o/sd#Image)
      operationId: images_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
        description: Information about the Imageto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one Image
      tags:
      - Image
      x-openapi-router-controller: openapi_server.controllers.image_controller
  /images/{id}:
    delete:
      description: Delete an existing Image (more information in https://w3id.org/okn/o/sd#Image)
      operationId: images_id_delete
      parameters:
      - description: The ID of the Image to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing Image
      tags:
      - Image
      x-openapi-router-controller: openapi_server.controllers.image_controller
    get:
      description: Gets the details of a given Image (more information in https://w3id.org/okn/o/sd#Image)
      operationId: images_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the Image to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: Gets the details of a given Image
      summary: Get a single Image by its id
      tags:
      - Image
      x-openapi-router-controller: openapi_server.controllers.image_controller
    put:
      description: Updates an existing Image (more information in https://w3id.org/okn/o/sd#Image)
      operationId: images_id_put
      parameters:
      - description: The ID of the Image to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
        description: An old Imageto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing Image
      tags:
      - Image
      x-openapi-router-controller: openapi_server.controllers.image_controller
  /interventions:
    get:
      description: Gets a list of all instances of Intervention (more information
        in https://w3id.org/okn/o/sdm#Intervention)
      operationId: interventions_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Intervention'
                type: array
          description: Successful response - returns an array with the instances of
            Intervention.
      summary: List all instances of Intervention
      tags:
      - Intervention
      x-openapi-router-controller: openapi_server.controllers.intervention_controller
    post:
      description: Create a new instance of Intervention (more information in https://w3id.org/okn/o/sdm#Intervention)
      operationId: interventions_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Intervention'
        description: Information about the Interventionto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Intervention'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one Intervention
      tags:
      - Intervention
      x-openapi-router-controller: openapi_server.controllers.intervention_controller
  /interventions/{id}:
    delete:
      description: Delete an existing Intervention (more information in https://w3id.org/okn/o/sdm#Intervention)
      operationId: interventions_id_delete
      parameters:
      - description: The ID of the Intervention to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing Intervention
      tags:
      - Intervention
      x-openapi-router-controller: openapi_server.controllers.intervention_controller
    get:
      description: Gets the details of a given Intervention (more information in https://w3id.org/okn/o/sdm#Intervention)
      operationId: interventions_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the Intervention to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Intervention'
          description: Gets the details of a given Intervention
      summary: Get a single Intervention by its id
      tags:
      - Intervention
      x-openapi-router-controller: openapi_server.controllers.intervention_controller
    put:
      description: Updates an existing Intervention (more information in https://w3id.org/okn/o/sdm#Intervention)
      operationId: interventions_id_put
      parameters:
      - description: The ID of the Intervention to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Intervention'
        description: An old Interventionto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Intervention'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing Intervention
      tags:
      - Intervention
      x-openapi-router-controller: openapi_server.controllers.intervention_controller
  /modelcategorys:
    get:
      description: Gets a list of all instances of ModelCategory (more information
        in https://w3id.org/okn/o/sdm#ModelCategory)
      operationId: modelcategorys_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelCategory'
                type: array
          description: Successful response - returns an array with the instances of
            ModelCategory.
      summary: List all instances of ModelCategory
      tags:
      - ModelCategory
      x-openapi-router-controller: openapi_server.controllers.model_category_controller
    post:
      description: Create a new instance of ModelCategory (more information in https://w3id.org/okn/o/sdm#ModelCategory)
      operationId: modelcategorys_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelCategory'
        description: Information about the ModelCategoryto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelCategory'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one ModelCategory
      tags:
      - ModelCategory
      x-openapi-router-controller: openapi_server.controllers.model_category_controller
  /modelcategorys/{id}:
    delete:
      description: Delete an existing ModelCategory (more information in https://w3id.org/okn/o/sdm#ModelCategory)
      operationId: modelcategorys_id_delete
      parameters:
      - description: The ID of the ModelCategory to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing ModelCategory
      tags:
      - ModelCategory
      x-openapi-router-controller: openapi_server.controllers.model_category_controller
    get:
      description: Gets the details of a given ModelCategory (more information in
        https://w3id.org/okn/o/sdm#ModelCategory)
      operationId: modelcategorys_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the ModelCategory to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelCategory'
          description: Gets the details of a given ModelCategory
      summary: Get a single ModelCategory by its id
      tags:
      - ModelCategory
      x-openapi-router-controller: openapi_server.controllers.model_category_controller
    put:
      description: Updates an existing ModelCategory (more information in https://w3id.org/okn/o/sdm#ModelCategory)
      operationId: modelcategorys_id_put
      parameters:
      - description: The ID of the ModelCategory to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelCategory'
        description: An old ModelCategoryto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelCategory'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing ModelCategory
      tags:
      - ModelCategory
      x-openapi-router-controller: openapi_server.controllers.model_category_controller
  /modelconfigurations:
    get:
      description: Gets a list of all instances of ModelConfiguration (more information
        in https://w3id.org/okn/o/sdm#ModelConfiguration)
      operationId: modelconfigurations_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelConfiguration'
                type: array
          description: Successful response - returns an array with the instances of
            ModelConfiguration.
      summary: List all instances of ModelConfiguration
      tags:
      - ModelConfiguration
      x-openapi-router-controller: openapi_server.controllers.model_configuration_controller
    post:
      description: Create a new instance of ModelConfiguration (more information in
        https://w3id.org/okn/o/sdm#ModelConfiguration)
      operationId: modelconfigurations_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelConfiguration'
        description: Information about the ModelConfigurationto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelConfiguration'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one ModelConfiguration
      tags:
      - ModelConfiguration
      x-openapi-router-controller: openapi_server.controllers.model_configuration_controller
  /modelconfigurations/{id}:
    delete:
      description: Delete an existing ModelConfiguration (more information in https://w3id.org/okn/o/sdm#ModelConfiguration)
      operationId: modelconfigurations_id_delete
      parameters:
      - description: The ID of the ModelConfiguration to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing ModelConfiguration
      tags:
      - ModelConfiguration
      x-openapi-router-controller: openapi_server.controllers.model_configuration_controller
    get:
      description: Gets the details of a given ModelConfiguration (more information
        in https://w3id.org/okn/o/sdm#ModelConfiguration)
      operationId: modelconfigurations_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the ModelConfiguration to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelConfiguration'
          description: Gets the details of a given ModelConfiguration
      summary: Get a single ModelConfiguration by its id
      tags:
      - ModelConfiguration
      x-openapi-router-controller: openapi_server.controllers.model_configuration_controller
    put:
      description: Updates an existing ModelConfiguration (more information in https://w3id.org/okn/o/sdm#ModelConfiguration)
      operationId: modelconfigurations_id_put
      parameters:
      - description: The ID of the ModelConfiguration to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelConfiguration'
        description: An old ModelConfigurationto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelConfiguration'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing ModelConfiguration
      tags:
      - ModelConfiguration
      x-openapi-router-controller: openapi_server.controllers.model_configuration_controller
  /modelconfigurationsetups:
    get:
      description: Gets a list of all instances of ModelConfigurationSetup (more information
        in https://w3id.org/okn/o/sdm#ModelConfigurationSetup)
      operationId: modelconfigurationsetups_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelConfigurationSetup'
                type: array
          description: Successful response - returns an array with the instances of
            ModelConfigurationSetup.
      summary: List all instances of ModelConfigurationSetup
      tags:
      - ModelConfigurationSetup
      x-openapi-router-controller: openapi_server.controllers.model_configuration_setup_controller
    post:
      description: Create a new instance of ModelConfigurationSetup (more information
        in https://w3id.org/okn/o/sdm#ModelConfigurationSetup)
      operationId: modelconfigurationsetups_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelConfigurationSetup'
        description: Information about the ModelConfigurationSetupto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelConfigurationSetup'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one ModelConfigurationSetup
      tags:
      - ModelConfigurationSetup
      x-openapi-router-controller: openapi_server.controllers.model_configuration_setup_controller
  /modelconfigurationsetups/{id}:
    delete:
      description: Delete an existing ModelConfigurationSetup (more information in
        https://w3id.org/okn/o/sdm#ModelConfigurationSetup)
      operationId: modelconfigurationsetups_id_delete
      parameters:
      - description: The ID of the ModelConfigurationSetup to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing ModelConfigurationSetup
      tags:
      - ModelConfigurationSetup
      x-openapi-router-controller: openapi_server.controllers.model_configuration_setup_controller
    get:
      description: Gets the details of a given ModelConfigurationSetup (more information
        in https://w3id.org/okn/o/sdm#ModelConfigurationSetup)
      operationId: modelconfigurationsetups_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the ModelConfigurationSetup to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelConfigurationSetup'
          description: Gets the details of a given ModelConfigurationSetup
      summary: Get a single ModelConfigurationSetup by its id
      tags:
      - ModelConfigurationSetup
      x-openapi-router-controller: openapi_server.controllers.model_configuration_setup_controller
    put:
      description: Updates an existing ModelConfigurationSetup (more information in
        https://w3id.org/okn/o/sdm#ModelConfigurationSetup)
      operationId: modelconfigurationsetups_id_put
      parameters:
      - description: The ID of the ModelConfigurationSetup to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelConfigurationSetup'
        description: An old ModelConfigurationSetupto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelConfigurationSetup'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing ModelConfigurationSetup
      tags:
      - ModelConfigurationSetup
      x-openapi-router-controller: openapi_server.controllers.model_configuration_setup_controller
  /models:
    get:
      description: Gets a list of all instances of Model (more information in https://w3id.org/okn/o/sdm#Model)
      operationId: models_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Model'
                type: array
          description: Successful response - returns an array with the instances of
            Model.
      summary: List all instances of Model
      tags:
      - Model
      x-openapi-router-controller: openapi_server.controllers.model_controller
    post:
      description: Create a new instance of Model (more information in https://w3id.org/okn/o/sdm#Model)
      operationId: models_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Model'
        description: Information about the Modelto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one Model
      tags:
      - Model
      x-openapi-router-controller: openapi_server.controllers.model_controller
  /models/{id}:
    delete:
      description: Delete an existing Model (more information in https://w3id.org/okn/o/sdm#Model)
      operationId: models_id_delete
      parameters:
      - description: The ID of the Model to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing Model
      tags:
      - Model
      x-openapi-router-controller: openapi_server.controllers.model_controller
    get:
      description: Gets the details of a given Model (more information in https://w3id.org/okn/o/sdm#Model)
      operationId: models_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the Model to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: Gets the details of a given Model
      summary: Get a single Model by its id
      tags:
      - Model
      x-openapi-router-controller: openapi_server.controllers.model_controller
    put:
      description: Updates an existing Model (more information in https://w3id.org/okn/o/sdm#Model)
      operationId: models_id_put
      parameters:
      - description: The ID of the Model to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Model'
        description: An old Modelto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing Model
      tags:
      - Model
      x-openapi-router-controller: openapi_server.controllers.model_controller
  /numericalindexs:
    get:
      description: Gets a list of all instances of NumericalIndex (more information
        in https://w3id.org/okn/o/sd#NumericalIndex)
      operationId: numericalindexs_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NumericalIndex'
                type: array
          description: Successful response - returns an array with the instances of
            NumericalIndex.
      summary: List all instances of NumericalIndex
      tags:
      - NumericalIndex
      x-openapi-router-controller: openapi_server.controllers.numerical_index_controller
    post:
      description: Create a new instance of NumericalIndex (more information in https://w3id.org/okn/o/sd#NumericalIndex)
      operationId: numericalindexs_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NumericalIndex'
        description: Information about the NumericalIndexto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NumericalIndex'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one NumericalIndex
      tags:
      - NumericalIndex
      x-openapi-router-controller: openapi_server.controllers.numerical_index_controller
  /numericalindexs/{id}:
    delete:
      description: Delete an existing NumericalIndex (more information in https://w3id.org/okn/o/sd#NumericalIndex)
      operationId: numericalindexs_id_delete
      parameters:
      - description: The ID of the NumericalIndex to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing NumericalIndex
      tags:
      - NumericalIndex
      x-openapi-router-controller: openapi_server.controllers.numerical_index_controller
    get:
      description: Gets the details of a given NumericalIndex (more information in
        https://w3id.org/okn/o/sd#NumericalIndex)
      operationId: numericalindexs_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the NumericalIndex to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NumericalIndex'
          description: Gets the details of a given NumericalIndex
      summary: Get a single NumericalIndex by its id
      tags:
      - NumericalIndex
      x-openapi-router-controller: openapi_server.controllers.numerical_index_controller
    put:
      description: Updates an existing NumericalIndex (more information in https://w3id.org/okn/o/sd#NumericalIndex)
      operationId: numericalindexs_id_put
      parameters:
      - description: The ID of the NumericalIndex to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NumericalIndex'
        description: An old NumericalIndexto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NumericalIndex'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing NumericalIndex
      tags:
      - NumericalIndex
      x-openapi-router-controller: openapi_server.controllers.numerical_index_controller
  /organizations:
    get:
      description: Gets a list of all instances of Organization (more information
        in https://w3id.org/okn/o/sd#Organization)
      operationId: organizations_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Organization'
                type: array
          description: Successful response - returns an array with the instances of
            Organization.
      summary: List all instances of Organization
      tags:
      - Organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
    post:
      description: Create a new instance of Organization (more information in https://w3id.org/okn/o/sd#Organization)
      operationId: organizations_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
        description: Information about the Organizationto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one Organization
      tags:
      - Organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
  /organizations/{id}:
    delete:
      description: Delete an existing Organization (more information in https://w3id.org/okn/o/sd#Organization)
      operationId: organizations_id_delete
      parameters:
      - description: The ID of the Organization to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing Organization
      tags:
      - Organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
    get:
      description: Gets the details of a given Organization (more information in https://w3id.org/okn/o/sd#Organization)
      operationId: organizations_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the Organization to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Gets the details of a given Organization
      summary: Get a single Organization by its id
      tags:
      - Organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
    put:
      description: Updates an existing Organization (more information in https://w3id.org/okn/o/sd#Organization)
      operationId: organizations_id_put
      parameters:
      - description: The ID of the Organization to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
        description: An old Organizationto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing Organization
      tags:
      - Organization
      x-openapi-router-controller: openapi_server.controllers.organization_controller
  /parameters:
    get:
      description: Gets a list of all instances of Parameter (more information in
        https://w3id.org/okn/o/sd#Parameter)
      operationId: parameters_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Parameter'
                type: array
          description: Successful response - returns an array with the instances of
            Parameter.
      summary: List all instances of Parameter
      tags:
      - Parameter
      x-openapi-router-controller: openapi_server.controllers.parameter_controller
    post:
      description: Create a new instance of Parameter (more information in https://w3id.org/okn/o/sd#Parameter)
      operationId: parameters_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parameter'
        description: Information about the Parameterto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parameter'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one Parameter
      tags:
      - Parameter
      x-openapi-router-controller: openapi_server.controllers.parameter_controller
  /parameters/{id}:
    delete:
      description: Delete an existing Parameter (more information in https://w3id.org/okn/o/sd#Parameter)
      operationId: parameters_id_delete
      parameters:
      - description: The ID of the Parameter to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing Parameter
      tags:
      - Parameter
      x-openapi-router-controller: openapi_server.controllers.parameter_controller
    get:
      description: Gets the details of a given Parameter (more information in https://w3id.org/okn/o/sd#Parameter)
      operationId: parameters_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the Parameter to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parameter'
          description: Gets the details of a given Parameter
      summary: Get a single Parameter by its id
      tags:
      - Parameter
      x-openapi-router-controller: openapi_server.controllers.parameter_controller
    put:
      description: Updates an existing Parameter (more information in https://w3id.org/okn/o/sd#Parameter)
      operationId: parameters_id_put
      parameters:
      - description: The ID of the Parameter to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parameter'
        description: An old Parameterto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parameter'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing Parameter
      tags:
      - Parameter
      x-openapi-router-controller: openapi_server.controllers.parameter_controller
  /persons:
    get:
      description: Gets a list of all instances of Person (more information in https://w3id.org/okn/o/sd#Person)
      operationId: persons_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Person'
                type: array
          description: Successful response - returns an array with the instances of
            Person.
      summary: List all instances of Person
      tags:
      - Person
      x-openapi-router-controller: openapi_server.controllers.person_controller
    post:
      description: Create a new instance of Person (more information in https://w3id.org/okn/o/sd#Person)
      operationId: persons_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        description: Information about the Personto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one Person
      tags:
      - Person
      x-openapi-router-controller: openapi_server.controllers.person_controller
  /persons/{id}:
    delete:
      description: Delete an existing Person (more information in https://w3id.org/okn/o/sd#Person)
      operationId: persons_id_delete
      parameters:
      - description: The ID of the Person to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing Person
      tags:
      - Person
      x-openapi-router-controller: openapi_server.controllers.person_controller
    get:
      description: Gets the details of a given Person (more information in https://w3id.org/okn/o/sd#Person)
      operationId: persons_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the Person to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: Gets the details of a given Person
      summary: Get a single Person by its id
      tags:
      - Person
      x-openapi-router-controller: openapi_server.controllers.person_controller
    put:
      description: Updates an existing Person (more information in https://w3id.org/okn/o/sd#Person)
      operationId: persons_id_put
      parameters:
      - description: The ID of the Person to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        description: An old Personto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing Person
      tags:
      - Person
      x-openapi-router-controller: openapi_server.controllers.person_controller
  /pointbasedgrids:
    get:
      description: Gets a list of all instances of PointBasedGrid (more information
        in https://w3id.org/okn/o/sdm#PointBasedGrid)
      operationId: pointbasedgrids_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PointBasedGrid'
                type: array
          description: Successful response - returns an array with the instances of
            PointBasedGrid.
      summary: List all instances of PointBasedGrid
      tags:
      - PointBasedGrid
      x-openapi-router-controller: openapi_server.controllers.point_based_grid_controller
    post:
      description: Create a new instance of PointBasedGrid (more information in https://w3id.org/okn/o/sdm#PointBasedGrid)
      operationId: pointbasedgrids_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PointBasedGrid'
        description: Information about the PointBasedGridto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointBasedGrid'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one PointBasedGrid
      tags:
      - PointBasedGrid
      x-openapi-router-controller: openapi_server.controllers.point_based_grid_controller
  /pointbasedgrids/{id}:
    delete:
      description: Delete an existing PointBasedGrid (more information in https://w3id.org/okn/o/sdm#PointBasedGrid)
      operationId: pointbasedgrids_id_delete
      parameters:
      - description: The ID of the PointBasedGrid to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing PointBasedGrid
      tags:
      - PointBasedGrid
      x-openapi-router-controller: openapi_server.controllers.point_based_grid_controller
    get:
      description: Gets the details of a given PointBasedGrid (more information in
        https://w3id.org/okn/o/sdm#PointBasedGrid)
      operationId: pointbasedgrids_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the PointBasedGrid to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointBasedGrid'
          description: Gets the details of a given PointBasedGrid
      summary: Get a single PointBasedGrid by its id
      tags:
      - PointBasedGrid
      x-openapi-router-controller: openapi_server.controllers.point_based_grid_controller
    put:
      description: Updates an existing PointBasedGrid (more information in https://w3id.org/okn/o/sdm#PointBasedGrid)
      operationId: pointbasedgrids_id_put
      parameters:
      - description: The ID of the PointBasedGrid to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PointBasedGrid'
        description: An old PointBasedGridto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointBasedGrid'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing PointBasedGrid
      tags:
      - PointBasedGrid
      x-openapi-router-controller: openapi_server.controllers.point_based_grid_controller
  /processs:
    get:
      description: Gets a list of all instances of Process (more information in https://w3id.org/okn/o/sdm#Process)
      operationId: processs_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Process'
                type: array
          description: Successful response - returns an array with the instances of
            Process.
      summary: List all instances of Process
      tags:
      - Process
      x-openapi-router-controller: openapi_server.controllers.process_controller
    post:
      description: Create a new instance of Process (more information in https://w3id.org/okn/o/sdm#Process)
      operationId: processs_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Process'
        description: Information about the Processto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one Process
      tags:
      - Process
      x-openapi-router-controller: openapi_server.controllers.process_controller
  /processs/{id}:
    delete:
      description: Delete an existing Process (more information in https://w3id.org/okn/o/sdm#Process)
      operationId: processs_id_delete
      parameters:
      - description: The ID of the Process to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing Process
      tags:
      - Process
      x-openapi-router-controller: openapi_server.controllers.process_controller
    get:
      description: Gets the details of a given Process (more information in https://w3id.org/okn/o/sdm#Process)
      operationId: processs_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the Process to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
          description: Gets the details of a given Process
      summary: Get a single Process by its id
      tags:
      - Process
      x-openapi-router-controller: openapi_server.controllers.process_controller
    put:
      description: Updates an existing Process (more information in https://w3id.org/okn/o/sdm#Process)
      operationId: processs_id_put
      parameters:
      - description: The ID of the Process to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Process'
        description: An old Processto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing Process
      tags:
      - Process
      x-openapi-router-controller: openapi_server.controllers.process_controller
  /regions:
    get:
      description: Gets a list of all instances of Region (more information in https://w3id.org/okn/o/sdm#Region)
      operationId: regions_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Region'
                type: array
          description: Successful response - returns an array with the instances of
            Region.
      summary: List all instances of Region
      tags:
      - Region
      x-openapi-router-controller: openapi_server.controllers.region_controller
    post:
      description: Create a new instance of Region (more information in https://w3id.org/okn/o/sdm#Region)
      operationId: regions_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
        description: Information about the Regionto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one Region
      tags:
      - Region
      x-openapi-router-controller: openapi_server.controllers.region_controller
  /regions/{id}:
    delete:
      description: Delete an existing Region (more information in https://w3id.org/okn/o/sdm#Region)
      operationId: regions_id_delete
      parameters:
      - description: The ID of the Region to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing Region
      tags:
      - Region
      x-openapi-router-controller: openapi_server.controllers.region_controller
    get:
      description: Gets the details of a given Region (more information in https://w3id.org/okn/o/sdm#Region)
      operationId: regions_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the Region to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: Gets the details of a given Region
      summary: Get a single Region by its id
      tags:
      - Region
      x-openapi-router-controller: openapi_server.controllers.region_controller
    put:
      description: Updates an existing Region (more information in https://w3id.org/okn/o/sdm#Region)
      operationId: regions_id_put
      parameters:
      - description: The ID of the Region to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
        description: An old Regionto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing Region
      tags:
      - Region
      x-openapi-router-controller: openapi_server.controllers.region_controller
  /samplecollections:
    get:
      description: Gets a list of all instances of SampleCollection (more information
        in https://w3id.org/okn/o/sd#SampleCollection)
      operationId: samplecollections_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SampleCollection'
                type: array
          description: Successful response - returns an array with the instances of
            SampleCollection.
      summary: List all instances of SampleCollection
      tags:
      - SampleCollection
      x-openapi-router-controller: openapi_server.controllers.sample_collection_controller
    post:
      description: Create a new instance of SampleCollection (more information in
        https://w3id.org/okn/o/sd#SampleCollection)
      operationId: samplecollections_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SampleCollection'
        description: Information about the SampleCollectionto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleCollection'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one SampleCollection
      tags:
      - SampleCollection
      x-openapi-router-controller: openapi_server.controllers.sample_collection_controller
  /samplecollections/{id}:
    delete:
      description: Delete an existing SampleCollection (more information in https://w3id.org/okn/o/sd#SampleCollection)
      operationId: samplecollections_id_delete
      parameters:
      - description: The ID of the SampleCollection to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing SampleCollection
      tags:
      - SampleCollection
      x-openapi-router-controller: openapi_server.controllers.sample_collection_controller
    get:
      description: Gets the details of a given SampleCollection (more information
        in https://w3id.org/okn/o/sd#SampleCollection)
      operationId: samplecollections_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the SampleCollection to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleCollection'
          description: Gets the details of a given SampleCollection
      summary: Get a single SampleCollection by its id
      tags:
      - SampleCollection
      x-openapi-router-controller: openapi_server.controllers.sample_collection_controller
    put:
      description: Updates an existing SampleCollection (more information in https://w3id.org/okn/o/sd#SampleCollection)
      operationId: samplecollections_id_put
      parameters:
      - description: The ID of the SampleCollection to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SampleCollection'
        description: An old SampleCollectionto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleCollection'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing SampleCollection
      tags:
      - SampleCollection
      x-openapi-router-controller: openapi_server.controllers.sample_collection_controller
  /sampleexecutions:
    get:
      description: Gets a list of all instances of SampleExecution (more information
        in https://w3id.org/okn/o/sd#SampleExecution)
      operationId: sampleexecutions_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SampleExecution'
                type: array
          description: Successful response - returns an array with the instances of
            SampleExecution.
      summary: List all instances of SampleExecution
      tags:
      - SampleExecution
      x-openapi-router-controller: openapi_server.controllers.sample_execution_controller
    post:
      description: Create a new instance of SampleExecution (more information in https://w3id.org/okn/o/sd#SampleExecution)
      operationId: sampleexecutions_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SampleExecution'
        description: Information about the SampleExecutionto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleExecution'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one SampleExecution
      tags:
      - SampleExecution
      x-openapi-router-controller: openapi_server.controllers.sample_execution_controller
  /sampleexecutions/{id}:
    delete:
      description: Delete an existing SampleExecution (more information in https://w3id.org/okn/o/sd#SampleExecution)
      operationId: sampleexecutions_id_delete
      parameters:
      - description: The ID of the SampleExecution to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing SampleExecution
      tags:
      - SampleExecution
      x-openapi-router-controller: openapi_server.controllers.sample_execution_controller
    get:
      description: Gets the details of a given SampleExecution (more information in
        https://w3id.org/okn/o/sd#SampleExecution)
      operationId: sampleexecutions_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the SampleExecution to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleExecution'
          description: Gets the details of a given SampleExecution
      summary: Get a single SampleExecution by its id
      tags:
      - SampleExecution
      x-openapi-router-controller: openapi_server.controllers.sample_execution_controller
    put:
      description: Updates an existing SampleExecution (more information in https://w3id.org/okn/o/sd#SampleExecution)
      operationId: sampleexecutions_id_put
      parameters:
      - description: The ID of the SampleExecution to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SampleExecution'
        description: An old SampleExecutionto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleExecution'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing SampleExecution
      tags:
      - SampleExecution
      x-openapi-router-controller: openapi_server.controllers.sample_execution_controller
  /sampleresources:
    get:
      description: Gets a list of all instances of SampleResource (more information
        in https://w3id.org/okn/o/sd#SampleResource)
      operationId: sampleresources_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SampleResource'
                type: array
          description: Successful response - returns an array with the instances of
            SampleResource.
      summary: List all instances of SampleResource
      tags:
      - SampleResource
      x-openapi-router-controller: openapi_server.controllers.sample_resource_controller
    post:
      description: Create a new instance of SampleResource (more information in https://w3id.org/okn/o/sd#SampleResource)
      operationId: sampleresources_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SampleResource'
        description: Information about the SampleResourceto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleResource'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one SampleResource
      tags:
      - SampleResource
      x-openapi-router-controller: openapi_server.controllers.sample_resource_controller
  /sampleresources/{id}:
    delete:
      description: Delete an existing SampleResource (more information in https://w3id.org/okn/o/sd#SampleResource)
      operationId: sampleresources_id_delete
      parameters:
      - description: The ID of the SampleResource to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing SampleResource
      tags:
      - SampleResource
      x-openapi-router-controller: openapi_server.controllers.sample_resource_controller
    get:
      description: Gets the details of a given SampleResource (more information in
        https://w3id.org/okn/o/sd#SampleResource)
      operationId: sampleresources_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the SampleResource to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleResource'
          description: Gets the details of a given SampleResource
      summary: Get a single SampleResource by its id
      tags:
      - SampleResource
      x-openapi-router-controller: openapi_server.controllers.sample_resource_controller
    put:
      description: Updates an existing SampleResource (more information in https://w3id.org/okn/o/sd#SampleResource)
      operationId: sampleresources_id_put
      parameters:
      - description: The ID of the SampleResource to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SampleResource'
        description: An old SampleResourceto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleResource'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing SampleResource
      tags:
      - SampleResource
      x-openapi-router-controller: openapi_server.controllers.sample_resource_controller
  /softwareconfigurations:
    get:
      description: Gets a list of all instances of SoftwareConfiguration (more information
        in https://w3id.org/okn/o/sd#SoftwareConfiguration)
      operationId: softwareconfigurations_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SoftwareConfiguration'
                type: array
          description: Successful response - returns an array with the instances of
            SoftwareConfiguration.
      summary: List all instances of SoftwareConfiguration
      tags:
      - SoftwareConfiguration
      x-openapi-router-controller: openapi_server.controllers.software_configuration_controller
    post:
      description: Create a new instance of SoftwareConfiguration (more information
        in https://w3id.org/okn/o/sd#SoftwareConfiguration)
      operationId: softwareconfigurations_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SoftwareConfiguration'
        description: Information about the SoftwareConfigurationto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareConfiguration'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one SoftwareConfiguration
      tags:
      - SoftwareConfiguration
      x-openapi-router-controller: openapi_server.controllers.software_configuration_controller
  /softwareconfigurations/{id}:
    delete:
      description: Delete an existing SoftwareConfiguration (more information in https://w3id.org/okn/o/sd#SoftwareConfiguration)
      operationId: softwareconfigurations_id_delete
      parameters:
      - description: The ID of the SoftwareConfiguration to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing SoftwareConfiguration
      tags:
      - SoftwareConfiguration
      x-openapi-router-controller: openapi_server.controllers.software_configuration_controller
    get:
      description: Gets the details of a given SoftwareConfiguration (more information
        in https://w3id.org/okn/o/sd#SoftwareConfiguration)
      operationId: softwareconfigurations_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the SoftwareConfiguration to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareConfiguration'
          description: Gets the details of a given SoftwareConfiguration
      summary: Get a single SoftwareConfiguration by its id
      tags:
      - SoftwareConfiguration
      x-openapi-router-controller: openapi_server.controllers.software_configuration_controller
    put:
      description: Updates an existing SoftwareConfiguration (more information in
        https://w3id.org/okn/o/sd#SoftwareConfiguration)
      operationId: softwareconfigurations_id_put
      parameters:
      - description: The ID of the SoftwareConfiguration to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SoftwareConfiguration'
        description: An old SoftwareConfigurationto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareConfiguration'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing SoftwareConfiguration
      tags:
      - SoftwareConfiguration
      x-openapi-router-controller: openapi_server.controllers.software_configuration_controller
  /softwareimages:
    get:
      description: Gets a list of all instances of SoftwareImage (more information
        in https://w3id.org/okn/o/sd#SoftwareImage)
      operationId: softwareimages_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SoftwareImage'
                type: array
          description: Successful response - returns an array with the instances of
            SoftwareImage.
      summary: List all instances of SoftwareImage
      tags:
      - SoftwareImage
      x-openapi-router-controller: openapi_server.controllers.software_image_controller
    post:
      description: Create a new instance of SoftwareImage (more information in https://w3id.org/okn/o/sd#SoftwareImage)
      operationId: softwareimages_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SoftwareImage'
        description: Information about the SoftwareImageto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareImage'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one SoftwareImage
      tags:
      - SoftwareImage
      x-openapi-router-controller: openapi_server.controllers.software_image_controller
  /softwareimages/{id}:
    delete:
      description: Delete an existing SoftwareImage (more information in https://w3id.org/okn/o/sd#SoftwareImage)
      operationId: softwareimages_id_delete
      parameters:
      - description: The ID of the SoftwareImage to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing SoftwareImage
      tags:
      - SoftwareImage
      x-openapi-router-controller: openapi_server.controllers.software_image_controller
    get:
      description: Gets the details of a given SoftwareImage (more information in
        https://w3id.org/okn/o/sd#SoftwareImage)
      operationId: softwareimages_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the SoftwareImage to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareImage'
          description: Gets the details of a given SoftwareImage
      summary: Get a single SoftwareImage by its id
      tags:
      - SoftwareImage
      x-openapi-router-controller: openapi_server.controllers.software_image_controller
    put:
      description: Updates an existing SoftwareImage (more information in https://w3id.org/okn/o/sd#SoftwareImage)
      operationId: softwareimages_id_put
      parameters:
      - description: The ID of the SoftwareImage to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SoftwareImage'
        description: An old SoftwareImageto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareImage'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing SoftwareImage
      tags:
      - SoftwareImage
      x-openapi-router-controller: openapi_server.controllers.software_image_controller
  /softwares:
    get:
      description: Gets a list of all instances of Software (more information in https://w3id.org/okn/o/sd#Software)
      operationId: softwares_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Software'
                type: array
          description: Successful response - returns an array with the instances of
            Software.
      summary: List all instances of Software
      tags:
      - Software
      x-openapi-router-controller: openapi_server.controllers.software_controller
    post:
      description: Create a new instance of Software (more information in https://w3id.org/okn/o/sd#Software)
      operationId: softwares_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Software'
        description: Information about the Softwareto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Software'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one Software
      tags:
      - Software
      x-openapi-router-controller: openapi_server.controllers.software_controller
  /softwares/{id}:
    delete:
      description: Delete an existing Software (more information in https://w3id.org/okn/o/sd#Software)
      operationId: softwares_id_delete
      parameters:
      - description: The ID of the Software to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing Software
      tags:
      - Software
      x-openapi-router-controller: openapi_server.controllers.software_controller
    get:
      description: Gets the details of a given Software (more information in https://w3id.org/okn/o/sd#Software)
      operationId: softwares_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the Software to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Software'
          description: Gets the details of a given Software
      summary: Get a single Software by its id
      tags:
      - Software
      x-openapi-router-controller: openapi_server.controllers.software_controller
    put:
      description: Updates an existing Software (more information in https://w3id.org/okn/o/sd#Software)
      operationId: softwares_id_put
      parameters:
      - description: The ID of the Software to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Software'
        description: An old Softwareto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Software'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing Software
      tags:
      - Software
      x-openapi-router-controller: openapi_server.controllers.software_controller
  /softwareversions:
    get:
      description: Gets a list of all instances of SoftwareVersion (more information
        in https://w3id.org/okn/o/sd#SoftwareVersion)
      operationId: softwareversions_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SoftwareVersion'
                type: array
          description: Successful response - returns an array with the instances of
            SoftwareVersion.
      summary: List all instances of SoftwareVersion
      tags:
      - SoftwareVersion
      x-openapi-router-controller: openapi_server.controllers.software_version_controller
    post:
      description: Create a new instance of SoftwareVersion (more information in https://w3id.org/okn/o/sd#SoftwareVersion)
      operationId: softwareversions_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SoftwareVersion'
        description: Information about the SoftwareVersionto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareVersion'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one SoftwareVersion
      tags:
      - SoftwareVersion
      x-openapi-router-controller: openapi_server.controllers.software_version_controller
  /softwareversions/{id}:
    delete:
      description: Delete an existing SoftwareVersion (more information in https://w3id.org/okn/o/sd#SoftwareVersion)
      operationId: softwareversions_id_delete
      parameters:
      - description: The ID of the SoftwareVersion to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing SoftwareVersion
      tags:
      - SoftwareVersion
      x-openapi-router-controller: openapi_server.controllers.software_version_controller
    get:
      description: Gets the details of a given SoftwareVersion (more information in
        https://w3id.org/okn/o/sd#SoftwareVersion)
      operationId: softwareversions_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the SoftwareVersion to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareVersion'
          description: Gets the details of a given SoftwareVersion
      summary: Get a single SoftwareVersion by its id
      tags:
      - SoftwareVersion
      x-openapi-router-controller: openapi_server.controllers.software_version_controller
    put:
      description: Updates an existing SoftwareVersion (more information in https://w3id.org/okn/o/sd#SoftwareVersion)
      operationId: softwareversions_id_put
      parameters:
      - description: The ID of the SoftwareVersion to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SoftwareVersion'
        description: An old SoftwareVersionto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareVersion'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing SoftwareVersion
      tags:
      - SoftwareVersion
      x-openapi-router-controller: openapi_server.controllers.software_version_controller
  /sourcecodes:
    get:
      description: Gets a list of all instances of SourceCode (more information in
        https://w3id.org/okn/o/sd#SourceCode)
      operationId: sourcecodes_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SourceCode'
                type: array
          description: Successful response - returns an array with the instances of
            SourceCode.
      summary: List all instances of SourceCode
      tags:
      - SourceCode
      x-openapi-router-controller: openapi_server.controllers.source_code_controller
    post:
      description: Create a new instance of SourceCode (more information in https://w3id.org/okn/o/sd#SourceCode)
      operationId: sourcecodes_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceCode'
        description: Information about the SourceCodeto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceCode'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one SourceCode
      tags:
      - SourceCode
      x-openapi-router-controller: openapi_server.controllers.source_code_controller
  /sourcecodes/{id}:
    delete:
      description: Delete an existing SourceCode (more information in https://w3id.org/okn/o/sd#SourceCode)
      operationId: sourcecodes_id_delete
      parameters:
      - description: The ID of the SourceCode to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing SourceCode
      tags:
      - SourceCode
      x-openapi-router-controller: openapi_server.controllers.source_code_controller
    get:
      description: Gets the details of a given SourceCode (more information in https://w3id.org/okn/o/sd#SourceCode)
      operationId: sourcecodes_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the SourceCode to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceCode'
          description: Gets the details of a given SourceCode
      summary: Get a single SourceCode by its id
      tags:
      - SourceCode
      x-openapi-router-controller: openapi_server.controllers.source_code_controller
    put:
      description: Updates an existing SourceCode (more information in https://w3id.org/okn/o/sd#SourceCode)
      operationId: sourcecodes_id_put
      parameters:
      - description: The ID of the SourceCode to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceCode'
        description: An old SourceCodeto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceCode'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing SourceCode
      tags:
      - SourceCode
      x-openapi-router-controller: openapi_server.controllers.source_code_controller
  /spatiallydistributedgrids:
    get:
      description: Gets a list of all instances of SpatiallyDistributedGrid (more
        information in https://w3id.org/okn/o/sdm#SpatiallyDistributedGrid)
      operationId: spatiallydistributedgrids_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SpatiallyDistributedGrid'
                type: array
          description: Successful response - returns an array with the instances of
            SpatiallyDistributedGrid.
      summary: List all instances of SpatiallyDistributedGrid
      tags:
      - SpatiallyDistributedGrid
      x-openapi-router-controller: openapi_server.controllers.spatially_distributed_grid_controller
    post:
      description: Create a new instance of SpatiallyDistributedGrid (more information
        in https://w3id.org/okn/o/sdm#SpatiallyDistributedGrid)
      operationId: spatiallydistributedgrids_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpatiallyDistributedGrid'
        description: Information about the SpatiallyDistributedGridto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpatiallyDistributedGrid'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one SpatiallyDistributedGrid
      tags:
      - SpatiallyDistributedGrid
      x-openapi-router-controller: openapi_server.controllers.spatially_distributed_grid_controller
  /spatiallydistributedgrids/{id}:
    delete:
      description: Delete an existing SpatiallyDistributedGrid (more information in
        https://w3id.org/okn/o/sdm#SpatiallyDistributedGrid)
      operationId: spatiallydistributedgrids_id_delete
      parameters:
      - description: The ID of the SpatiallyDistributedGrid to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing SpatiallyDistributedGrid
      tags:
      - SpatiallyDistributedGrid
      x-openapi-router-controller: openapi_server.controllers.spatially_distributed_grid_controller
    get:
      description: Gets the details of a given SpatiallyDistributedGrid (more information
        in https://w3id.org/okn/o/sdm#SpatiallyDistributedGrid)
      operationId: spatiallydistributedgrids_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the SpatiallyDistributedGrid to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpatiallyDistributedGrid'
          description: Gets the details of a given SpatiallyDistributedGrid
      summary: Get a single SpatiallyDistributedGrid by its id
      tags:
      - SpatiallyDistributedGrid
      x-openapi-router-controller: openapi_server.controllers.spatially_distributed_grid_controller
    put:
      description: Updates an existing SpatiallyDistributedGrid (more information
        in https://w3id.org/okn/o/sdm#SpatiallyDistributedGrid)
      operationId: spatiallydistributedgrids_id_put
      parameters:
      - description: The ID of the SpatiallyDistributedGrid to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpatiallyDistributedGrid'
        description: An old SpatiallyDistributedGridto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpatiallyDistributedGrid'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing SpatiallyDistributedGrid
      tags:
      - SpatiallyDistributedGrid
      x-openapi-router-controller: openapi_server.controllers.spatially_distributed_grid_controller
  /spatialresolutions:
    get:
      description: Gets a list of all instances of SpatialResolution (more information
        in https://w3id.org/okn/o/sdm#SpatialResolution)
      operationId: spatialresolutions_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SpatialResolution'
                type: array
          description: Successful response - returns an array with the instances of
            SpatialResolution.
      summary: List all instances of SpatialResolution
      tags:
      - SpatialResolution
      x-openapi-router-controller: openapi_server.controllers.spatial_resolution_controller
    post:
      description: Create a new instance of SpatialResolution (more information in
        https://w3id.org/okn/o/sdm#SpatialResolution)
      operationId: spatialresolutions_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpatialResolution'
        description: Information about the SpatialResolutionto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpatialResolution'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one SpatialResolution
      tags:
      - SpatialResolution
      x-openapi-router-controller: openapi_server.controllers.spatial_resolution_controller
  /spatialresolutions/{id}:
    delete:
      description: Delete an existing SpatialResolution (more information in https://w3id.org/okn/o/sdm#SpatialResolution)
      operationId: spatialresolutions_id_delete
      parameters:
      - description: The ID of the SpatialResolution to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing SpatialResolution
      tags:
      - SpatialResolution
      x-openapi-router-controller: openapi_server.controllers.spatial_resolution_controller
    get:
      description: Gets the details of a given SpatialResolution (more information
        in https://w3id.org/okn/o/sdm#SpatialResolution)
      operationId: spatialresolutions_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the SpatialResolution to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpatialResolution'
          description: Gets the details of a given SpatialResolution
      summary: Get a single SpatialResolution by its id
      tags:
      - SpatialResolution
      x-openapi-router-controller: openapi_server.controllers.spatial_resolution_controller
    put:
      description: Updates an existing SpatialResolution (more information in https://w3id.org/okn/o/sdm#SpatialResolution)
      operationId: spatialresolutions_id_put
      parameters:
      - description: The ID of the SpatialResolution to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpatialResolution'
        description: An old SpatialResolutionto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpatialResolution'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing SpatialResolution
      tags:
      - SpatialResolution
      x-openapi-router-controller: openapi_server.controllers.spatial_resolution_controller
  /standardvariables:
    get:
      description: Gets a list of all instances of StandardVariable (more information
        in https://w3id.org/okn/o/sd#StandardVariable)
      operationId: standardvariables_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StandardVariable'
                type: array
          description: Successful response - returns an array with the instances of
            StandardVariable.
      summary: List all instances of StandardVariable
      tags:
      - StandardVariable
      x-openapi-router-controller: openapi_server.controllers.standard_variable_controller
    post:
      description: Create a new instance of StandardVariable (more information in
        https://w3id.org/okn/o/sd#StandardVariable)
      operationId: standardvariables_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StandardVariable'
        description: Information about the StandardVariableto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardVariable'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one StandardVariable
      tags:
      - StandardVariable
      x-openapi-router-controller: openapi_server.controllers.standard_variable_controller
  /standardvariables/{id}:
    delete:
      description: Delete an existing StandardVariable (more information in https://w3id.org/okn/o/sd#StandardVariable)
      operationId: standardvariables_id_delete
      parameters:
      - description: The ID of the StandardVariable to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing StandardVariable
      tags:
      - StandardVariable
      x-openapi-router-controller: openapi_server.controllers.standard_variable_controller
    get:
      description: Gets the details of a given StandardVariable (more information
        in https://w3id.org/okn/o/sd#StandardVariable)
      operationId: standardvariables_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the StandardVariable to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardVariable'
          description: Gets the details of a given StandardVariable
      summary: Get a single StandardVariable by its id
      tags:
      - StandardVariable
      x-openapi-router-controller: openapi_server.controllers.standard_variable_controller
    put:
      description: Updates an existing StandardVariable (more information in https://w3id.org/okn/o/sd#StandardVariable)
      operationId: standardvariables_id_put
      parameters:
      - description: The ID of the StandardVariable to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StandardVariable'
        description: An old StandardVariableto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardVariable'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing StandardVariable
      tags:
      - StandardVariable
      x-openapi-router-controller: openapi_server.controllers.standard_variable_controller
  /theory-guidedmodels:
    get:
      description: Gets a list of all instances of Theory-GuidedModel (more information
        in https://w3id.org/okn/o/sdm#Theory-GuidedModel)
      operationId: theory_guidedmodels_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Theory-GuidedModel'
                type: array
          description: Successful response - returns an array with the instances of
            Theory-GuidedModel.
      summary: List all instances of Theory-GuidedModel
      tags:
      - Theory-GuidedModel
      x-openapi-router-controller: openapi_server.controllers.theory_guided_model_controller
    post:
      description: Create a new instance of Theory-GuidedModel (more information in
        https://w3id.org/okn/o/sdm#Theory-GuidedModel)
      operationId: theory_guidedmodels_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Theory-GuidedModel'
        description: Information about the Theory-GuidedModelto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Theory-GuidedModel'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one Theory-GuidedModel
      tags:
      - Theory-GuidedModel
      x-openapi-router-controller: openapi_server.controllers.theory_guided_model_controller
  /theory-guidedmodels/{id}:
    delete:
      description: Delete an existing Theory-GuidedModel (more information in https://w3id.org/okn/o/sdm#Theory-GuidedModel)
      operationId: theory_guidedmodels_id_delete
      parameters:
      - description: The ID of the Theory-GuidedModel to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing Theory-GuidedModel
      tags:
      - Theory-GuidedModel
      x-openapi-router-controller: openapi_server.controllers.theory_guided_model_controller
    get:
      description: Gets the details of a given Theory-GuidedModel (more information
        in https://w3id.org/okn/o/sdm#Theory-GuidedModel)
      operationId: theory_guidedmodels_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the Theory-GuidedModel to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Theory-GuidedModel'
          description: Gets the details of a given Theory-GuidedModel
      summary: Get a single Theory-GuidedModel by its id
      tags:
      - Theory-GuidedModel
      x-openapi-router-controller: openapi_server.controllers.theory_guided_model_controller
    put:
      description: Updates an existing Theory-GuidedModel (more information in https://w3id.org/okn/o/sdm#Theory-GuidedModel)
      operationId: theory_guidedmodels_id_put
      parameters:
      - description: The ID of the Theory-GuidedModel to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Theory-GuidedModel'
        description: An old Theory-GuidedModelto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Theory-GuidedModel'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing Theory-GuidedModel
      tags:
      - Theory-GuidedModel
      x-openapi-router-controller: openapi_server.controllers.theory_guided_model_controller
  /timeintervals:
    get:
      description: Gets a list of all instances of TimeInterval (more information
        in https://w3id.org/okn/o/sdm#TimeInterval)
      operationId: timeintervals_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TimeInterval'
                type: array
          description: Successful response - returns an array with the instances of
            TimeInterval.
      summary: List all instances of TimeInterval
      tags:
      - TimeInterval
      x-openapi-router-controller: openapi_server.controllers.time_interval_controller
    post:
      description: Create a new instance of TimeInterval (more information in https://w3id.org/okn/o/sdm#TimeInterval)
      operationId: timeintervals_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeInterval'
        description: Information about the TimeIntervalto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeInterval'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one TimeInterval
      tags:
      - TimeInterval
      x-openapi-router-controller: openapi_server.controllers.time_interval_controller
  /timeintervals/{id}:
    delete:
      description: Delete an existing TimeInterval (more information in https://w3id.org/okn/o/sdm#TimeInterval)
      operationId: timeintervals_id_delete
      parameters:
      - description: The ID of the TimeInterval to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing TimeInterval
      tags:
      - TimeInterval
      x-openapi-router-controller: openapi_server.controllers.time_interval_controller
    get:
      description: Gets the details of a given TimeInterval (more information in https://w3id.org/okn/o/sdm#TimeInterval)
      operationId: timeintervals_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the TimeInterval to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeInterval'
          description: Gets the details of a given TimeInterval
      summary: Get a single TimeInterval by its id
      tags:
      - TimeInterval
      x-openapi-router-controller: openapi_server.controllers.time_interval_controller
    put:
      description: Updates an existing TimeInterval (more information in https://w3id.org/okn/o/sdm#TimeInterval)
      operationId: timeintervals_id_put
      parameters:
      - description: The ID of the TimeInterval to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeInterval'
        description: An old TimeIntervalto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeInterval'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing TimeInterval
      tags:
      - TimeInterval
      x-openapi-router-controller: openapi_server.controllers.time_interval_controller
  /units:
    get:
      description: Gets a list of all instances of Unit (more information in https://w3id.org/okn/o/sd#Unit)
      operationId: units_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Unit'
                type: array
          description: Successful response - returns an array with the instances of
            Unit.
      summary: List all instances of Unit
      tags:
      - Unit
      x-openapi-router-controller: openapi_server.controllers.unit_controller
    post:
      description: Create a new instance of Unit (more information in https://w3id.org/okn/o/sd#Unit)
      operationId: units_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Unit'
        description: Information about the Unitto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one Unit
      tags:
      - Unit
      x-openapi-router-controller: openapi_server.controllers.unit_controller
  /units/{id}:
    delete:
      description: Delete an existing Unit (more information in https://w3id.org/okn/o/sd#Unit)
      operationId: units_id_delete
      parameters:
      - description: The ID of the Unit to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing Unit
      tags:
      - Unit
      x-openapi-router-controller: openapi_server.controllers.unit_controller
    get:
      description: Gets the details of a given Unit (more information in https://w3id.org/okn/o/sd#Unit)
      operationId: units_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the Unit to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: Gets the details of a given Unit
      summary: Get a single Unit by its id
      tags:
      - Unit
      x-openapi-router-controller: openapi_server.controllers.unit_controller
    put:
      description: Updates an existing Unit (more information in https://w3id.org/okn/o/sd#Unit)
      operationId: units_id_put
      parameters:
      - description: The ID of the Unit to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Unit'
        description: An old Unitto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing Unit
      tags:
      - Unit
      x-openapi-router-controller: openapi_server.controllers.unit_controller
  /user/login:
    post:
      description: Login the user
      operationId: user_login_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: User credentials
      responses:
        200:
          content:
            application/json:
              schema:
                type: string
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              explode: false
              schema:
                format: int32
                type: integer
              style: simple
            X-Expires-After:
              description: date in UTC when token expires
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                type: string
          description: unsuccessful operation
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /variablepresentations:
    get:
      description: Gets a list of all instances of VariablePresentation (more information
        in https://w3id.org/okn/o/sd#VariablePresentation)
      operationId: variablepresentations_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VariablePresentation'
                type: array
          description: Successful response - returns an array with the instances of
            VariablePresentation.
      summary: List all instances of VariablePresentation
      tags:
      - VariablePresentation
      x-openapi-router-controller: openapi_server.controllers.variable_presentation_controller
    post:
      description: Create a new instance of VariablePresentation (more information
        in https://w3id.org/okn/o/sd#VariablePresentation)
      operationId: variablepresentations_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariablePresentation'
        description: Information about the VariablePresentationto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariablePresentation'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one VariablePresentation
      tags:
      - VariablePresentation
      x-openapi-router-controller: openapi_server.controllers.variable_presentation_controller
  /variablepresentations/{id}:
    delete:
      description: Delete an existing VariablePresentation (more information in https://w3id.org/okn/o/sd#VariablePresentation)
      operationId: variablepresentations_id_delete
      parameters:
      - description: The ID of the VariablePresentation to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing VariablePresentation
      tags:
      - VariablePresentation
      x-openapi-router-controller: openapi_server.controllers.variable_presentation_controller
    get:
      description: Gets the details of a given VariablePresentation (more information
        in https://w3id.org/okn/o/sd#VariablePresentation)
      operationId: variablepresentations_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the VariablePresentation to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariablePresentation'
          description: Gets the details of a given VariablePresentation
      summary: Get a single VariablePresentation by its id
      tags:
      - VariablePresentation
      x-openapi-router-controller: openapi_server.controllers.variable_presentation_controller
    put:
      description: Updates an existing VariablePresentation (more information in https://w3id.org/okn/o/sd#VariablePresentation)
      operationId: variablepresentations_id_put
      parameters:
      - description: The ID of the VariablePresentation to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariablePresentation'
        description: An old VariablePresentationto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariablePresentation'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing VariablePresentation
      tags:
      - VariablePresentation
      x-openapi-router-controller: openapi_server.controllers.variable_presentation_controller
  /variables:
    get:
      description: Gets a list of all instances of Variable (more information in https://w3id.org/okn/o/sd#Variable)
      operationId: variables_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Variable'
                type: array
          description: Successful response - returns an array with the instances of
            Variable.
      summary: List all instances of Variable
      tags:
      - Variable
      x-openapi-router-controller: openapi_server.controllers.variable_controller
    post:
      description: Create a new instance of Variable (more information in https://w3id.org/okn/o/sd#Variable)
      operationId: variables_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Variable'
        description: Information about the Variableto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one Variable
      tags:
      - Variable
      x-openapi-router-controller: openapi_server.controllers.variable_controller
  /variables/{id}:
    delete:
      description: Delete an existing Variable (more information in https://w3id.org/okn/o/sd#Variable)
      operationId: variables_id_delete
      parameters:
      - description: The ID of the Variable to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing Variable
      tags:
      - Variable
      x-openapi-router-controller: openapi_server.controllers.variable_controller
    get:
      description: Gets the details of a given Variable (more information in https://w3id.org/okn/o/sd#Variable)
      operationId: variables_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the Variable to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
          description: Gets the details of a given Variable
      summary: Get a single Variable by its id
      tags:
      - Variable
      x-openapi-router-controller: openapi_server.controllers.variable_controller
    put:
      description: Updates an existing Variable (more information in https://w3id.org/okn/o/sd#Variable)
      operationId: variables_id_put
      parameters:
      - description: The ID of the Variable to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Variable'
        description: An old Variableto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing Variable
      tags:
      - Variable
      x-openapi-router-controller: openapi_server.controllers.variable_controller
  /visualizations:
    get:
      description: Gets a list of all instances of Visualization (more information
        in https://w3id.org/okn/o/sd#Visualization)
      operationId: visualizations_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Filter by label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: Items per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          format: int32
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Visualization'
                type: array
          description: Successful response - returns an array with the instances of
            Visualization.
      summary: List all instances of Visualization
      tags:
      - Visualization
      x-openapi-router-controller: openapi_server.controllers.visualization_controller
    post:
      description: Create a new instance of Visualization (more information in https://w3id.org/okn/o/sd#Visualization)
      operationId: visualizations_post
      parameters:
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Visualization'
        description: Information about the Visualizationto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visualization'
          description: Created
      security:
      - BearerAuth: []
      summary: Create one Visualization
      tags:
      - Visualization
      x-openapi-router-controller: openapi_server.controllers.visualization_controller
  /visualizations/{id}:
    delete:
      description: Delete an existing Visualization (more information in https://w3id.org/okn/o/sd#Visualization)
      operationId: visualizations_id_delete
      parameters:
      - description: The ID of the Visualization to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete an existing Visualization
      tags:
      - Visualization
      x-openapi-router-controller: openapi_server.controllers.visualization_controller
    get:
      description: Gets the details of a given Visualization (more information in
        https://w3id.org/okn/o/sd#Visualization)
      operationId: visualizations_id_get
      parameters:
      - description: Name of the user graph to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the Visualization to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visualization'
          description: Gets the details of a given Visualization
      summary: Get a single Visualization by its id
      tags:
      - Visualization
      x-openapi-router-controller: openapi_server.controllers.visualization_controller
    put:
      description: Updates an existing Visualization (more information in https://w3id.org/okn/o/sd#Visualization)
      operationId: visualizations_id_put
      parameters:
      - description: The ID of the Visualization to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Visualization'
        description: An old Visualizationto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visualization'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update an existing Visualization
      tags:
      - Visualization
      x-openapi-router-controller: openapi_server.controllers.visualization_controller
components:
  schemas:
    Intervention:
      description: Interference by a policy maker or modeler by modifying a variable
        or parameter of a model
      example:
        value:
          id: some_id
      properties:
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
      type: object
    Visualization:
      description: Class to represent any type of visualization related to a software.
        For example, a dynamic HTML page, a video, etc.
      example:
        value:
          id: some_id
      properties:
        hasFormat:
          description: Format followed by a file. For example, txt, nc, etc.
          items:
            type: string
          nullable: true
          type: array
        hadPrimarySource:
          description: Property to identify the original source of the information
            of the annotated resource. It could be a web page, an organization, a
            person, some experiment notes, etc.
          items:
            description: Property to identify the original source of the information
              of the annotated resource. It could be a web page, an organization,
              a person, some experiment notes, etc.
            type: object
          nullable: true
          type: array
        wasDerivedFromSoftware:
          description: Property that identifies the software used to create a visualization
          items:
            $ref: '#/components/schemas/Software'
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        value:
          description: Value associated to the described entity
          items:
            anyOf:
            - format: uri
              type: string
            - type: boolean
            - format: date-time
              type: string
            - format: float
              type: number
            - format: int32
              type: integer
            - type: string
          nullable: true
          type: array
      type: object
    SourceCode:
      description: Class representing the characteristics of the code associated with
        a  software component
      example:
        value:
          id: some_id
      properties:
        license:
          description: License of a software component or its source code
          items:
            type: string
          nullable: true
          type: array
        programmingLanguage:
          description: Language used to code a software component
          items:
            type: string
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        codeRepository:
          description: URL to the code repository of a software component
          items:
            type: string
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
      type: object
    Variable:
      description: A symbol that represents a quanity in a dataset or dataset specification
      example:
        value:
          id: some_id
      properties:
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
      type: object
    Organization:
      description: An organized body of people with a particular purpose
      example:
        value:
          id: some_id
      properties:
        identifier:
          description: Identifier of the resource being described
          items:
            type: string
          nullable: true
          type: array
        website:
          description: Website of the software
          items:
            type: string
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
      type: object
    User:
      example:
        password: password
        username: username
      properties:
        password:
          type: string
        username:
          type: string
      type: object
    Constraint:
      description: Data constraints of a configuration
      example:
        value:
          id: some_id
      properties:
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        hasRule:
          description: Rule that defines this constraint
          items:
            type: string
          nullable: true
          type: array
        hasVariable:
          description: Property that links a rule and the variable that will test
            it
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
      type: object
    GeoShape:
      description: Shape or polygon of a region in a map
      example:
        value:
          id: some_id
      properties:
        elevation:
          description: Elevation of a location (WGS84)
          items:
            type: string
          nullable: true
          type: array
        latitude:
          description: Latitude (coordinates) of a location (WGS84)
          items:
            type: string
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        box:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        longitude:
          description: Longitude (coordinates) of a location (WGS84)
          items:
            type: string
          nullable: true
          type: array
      type: object
    Grid:
      description: Class that represents the geospatial information associated with
        a model
      example:
        value:
          id: some_id
      properties:
        hasDimensionality:
          description: Description not available
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        hasFormat:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        pathLocation:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasFileStructure:
          description: Description not available
          items:
            description: Description not available
            type: object
          maxItems: 1
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        hasDataTransformation:
          description: Description not available
          items:
            $ref: '#/components/schemas/DataTransformation'
          nullable: true
          type: array
        hasPresentation:
          description: Description not available
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        hasFixedResource:
          description: Description not available
          items:
            $ref: '#/components/schemas/SampleResource'
          nullable: true
          type: array
        hasCoordinateSystem:
          description: Coordinate system used in a grid
          items:
            type: string
          maxItems: 1
          nullable: true
          type: array
        hasSpatialResolution:
          description: Spatial resolution of a grid (e.g., 50m)
          items:
            type: string
          nullable: true
          type: array
        isTransformedFrom:
          description: Description not available
          items:
            $ref: '#/components/schemas/DatasetSpecification'
          nullable: true
          type: array
        hasShape:
          description: 'Grids may be: rectangular, triangular, hexagonal, hybrid,
            unstructured, block structure, etc.'
          items:
            type: string
          nullable: true
          type: array
        hasDimension:
          description: Dimension of the grid (2D, 3D)
          items:
            type: string
          maxItems: 1
          nullable: true
          type: array
        hasDataTransformationSetup:
          description: Description not available
          items:
            $ref: '#/components/schemas/DataTransformationSetup'
          nullable: true
          type: array
        position:
          description: Description not available
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
      type: object
    Process:
      description: Description not available
      example:
        value:
          id: some_id
      properties:
        influences:
          description: Property that captures if a physical process influences another
            process
          items:
            $ref: '#/components/schemas/Process'
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
      type: object
    Emulator:
      description: Type of models that emulates the behavior of another model. For
        example, an emulator can be a machine learning model trained on the output
        runs of a hydrology model
      example:
        value:
          id: some_id
      properties:
        hasDownloadInstructions:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        keywords:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasDocumentation:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasGrid:
          description: Grid information about the model
          items:
            $ref: '#/components/schemas/Grid'
          nullable: true
          type: array
        softwareRequirements:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasDownloadURL:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        hasInstallationInstructions:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        compatibleVisualizationSoftware:
          description: Description not available
          items:
            $ref: '#/components/schemas/Software'
          nullable: true
          type: array
        copyrightHolder:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasFAQ:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        logo:
          description: Description not available
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasContactPerson:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        limitations:
          description: Known restrictions (i.e. cases where the model is known not
            to be reliable or shouldn't be used)
          items:
            type: string
          nullable: true
          type: array
        identifier:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        author:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasBuildFile:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        shortDescription:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        datePublished:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        theoreticalBasis:
          description: What is the theory behind the processes described in the model
          items:
            type: string
          nullable: true
          type: array
        license:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasSourceCode:
          description: Description not available
          items:
            $ref: '#/components/schemas/SourceCode'
          maxItems: 1
          nullable: true
          type: array
        hasExplanationDiagram:
          description: Diagram used to explain the behavior of the model
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasExample:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        publisher:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        runtimeEstimation:
          description: An estimate of the time required to run example codes or other
            known configurations
          items:
            type: string
          nullable: true
          type: array
        doi:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasFunding:
          description: Description not available
          items:
            $ref: '#/components/schemas/FundingInformation'
          nullable: true
          type: array
        hasProcess:
          description: Property that indicates which physical processes (if any) are
            associated with a model
          items:
            $ref: '#/components/schemas/Process'
          nullable: true
          type: array
        supportDetails:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasVersion:
          description: Description not available
          items:
            $ref: '#/components/schemas/SoftwareVersion'
          nullable: true
          type: array
        hasTypicalDataSource:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        referencePublication:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        screenshot:
          description: Description not available
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasModelCategory:
          description: Category associated with a model (e.g., Hydrology, etc.)
          items:
            $ref: '#/components/schemas/ModelCategory'
          nullable: true
          type: array
        hadPrimarySource:
          description: Description not available
          items:
            description: Description not available
            type: object
          nullable: true
          type: array
        issueTracker:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        dateCreated:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        contributor:
          description: Description not available
          items:
            $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasInputVariable:
          description: Variable that is used as input for this model
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
        hasPurpose:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasExecutableInstructions:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasSampleVisualization:
          description: Description not available
          items:
            $ref: '#/components/schemas/Visualization'
          nullable: true
          type: array
        memoryRequirements:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        website:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        citation:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        processorRequirements:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        parameterization:
          description: Were there any simplifications made to processes to make the
            model more efficient
          items:
            type: string
          nullable: true
          type: array
        hasUsageNotes:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        readme:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        hasAssumption:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        operatingSystems:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasExecutableNotebook:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasEquation:
          description: Equations used in the model
          items:
            $ref: '#/components/schemas/Equation'
          nullable: true
          type: array
        usefulForCalculatingIndex:
          description: Description not available
          items:
            $ref: '#/components/schemas/NumericalIndex'
          nullable: true
          type: array
        hasOutputVariable:
          description: Variable that is used as output for this model
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
      type: object
    Image:
      description: Description not available
      example:
        value:
          id: some_id
      properties:
        hasDimensionality:
          description: Property to indicate dimensionality of the input or output
            of a dataset specification
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        hasFormat:
          description: Format followed by a file. For example, txt, nc, etc.
          items:
            type: string
          nullable: true
          type: array
        pathLocation:
          description: "Property that indicates the relative path of an input or output\
            \ with respect to the folder structure of the executable. \n\nFor example,\
            \ let's assume we have an input that has to exist in the folder `/datasets`\
            \ or the executable will not work. This property ensures that this knowledge\
            \ is captured for a given software component execution.\n\nIn this case\
            \ the property would capture this as follows:\n\n```\n:input_prep a sd:DatasetSpecification\
            \ .\n:input_prep rdfs:label \"precipitation file\" .\n:input_precip sd:pathLocation\
            \ \"/datasets/\".\n```"
          items:
            type: string
          nullable: true
          type: array
        hasFileStructure:
          description: Relates a dataset specification to the data structure definition
          items:
            description: Relates a dataset specification to the data structure definition
            type: object
          maxItems: 1
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        hasDataTransformation:
          description: Property that associates an input/output with their corresponding
            data transformation.
          items:
            $ref: '#/components/schemas/DataTransformation'
          nullable: true
          type: array
        hasPresentation:
          description: Property that links an instance of a dataset (or a dataset
            specification) to the presentation of a variable contained (or expected
            to be contained) on it.
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        hasFixedResource:
          description: Property that links a parameter or an input to a fixed value.
            For example, in a given configuration a parameter with the planting date
            for a model could be fixed to avoid the user changing it for that region.
          items:
            $ref: '#/components/schemas/SampleResource'
          nullable: true
          type: array
        isTransformedFrom:
          description: Property that links a dataset specification from a model configuration
            or setup to the output from a target data transformation. This occurs
            when a data transformation produces several outputs, but only one of them
            is the one needed for a model
          items:
            $ref: '#/components/schemas/DatasetSpecification'
          nullable: true
          type: array
        hadPrimarySource:
          description: Property to identify the original source of the information
            of the annotated resource. It could be a web page, an organization, a
            person, some experiment notes, etc.
          items:
            description: Property to identify the original source of the information
              of the annotated resource. It could be a web page, an organization,
              a person, some experiment notes, etc.
            type: object
          nullable: true
          type: array
        hasDataTransformationSetup:
          description: Property to link an input/output dataset to the specific data
            transformation (with URLs
          items:
            $ref: '#/components/schemas/DataTransformationSetup'
          nullable: true
          type: array
        position:
          description: Position of the parameter or input/output in the model configuration.
            This property is needed to know how to organize the I/O of the component
            on execution
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        value:
          description: Value associated to the described entity
          items:
            anyOf:
            - format: uri
              type: string
            - type: boolean
            - format: date-time
              type: string
            - format: float
              type: number
            - format: int32
              type: integer
            - type: string
          nullable: true
          type: array
      type: object
    Unit:
      description: Description not available
      example:
        value:
          id: some_id
      properties:
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
      type: object
    StandardVariable:
      description: A standard variable, necessary to refer to all the variable using
        the same nomenclature in a domain ontology. For example, a standard variable
        may be a SVO variable (http://www.geoscienceontology.org/geo-upper#Variable)
      example:
        value:
          id: some_id
      properties:
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
      type: object
    DataTransformationSetup:
      description: Special type of data transformation where the inputs and parameters
        have some pre-selected values. For example, they may point to a particular
        dataset URL to be used in the transformation
      example:
        value:
          id: some_id
      properties:
        hasDownloadInstructions:
          description: Instructions needed to download a software component. The difference
            with `hasDownloadURL` is that this property captures the human readable
            instructions required to download software. For example, sometimes an
            authentication is needed, users need to fill in a form, etc.
          items:
            type: string
          nullable: true
          type: array
        keywords:
          description: Keywords associated with a software component
          items:
            type: string
          nullable: true
          type: array
        hasDocumentation:
          description: Pointer to the documentation of the model
          items:
            type: string
          nullable: true
          type: array
        hasImplementationScriptLocation:
          description: Property that points to the main runnable script for the current
            function
          items:
            type: string
          nullable: true
          type: array
        softwareRequirements:
          description: Software requirements needed to install a software component
          items:
            type: string
          nullable: true
          type: array
        hasDownloadURL:
          description: Download URL where to obtain the source/executable of the software
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        hasInstallationInstructions:
          description: Instructions required to install this particular piece of software.
            Installation instructions usually are available in a human-readable manner.
          items:
            type: string
          nullable: true
          type: array
        compatibleVisualizationSoftware:
          description: Property that links a software component to other useful software
            that canbe used to visualize its outputs
          items:
            $ref: '#/components/schemas/Software'
          nullable: true
          type: array
        copyrightHolder:
          description: Copyright holder for a software component
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasFAQ:
          description: Frequently asked questions about a software
          items:
            type: string
          nullable: true
          type: array
        logo:
          description: Property that links to the image used as logo for a software
            component
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasContactPerson:
          description: Contact person responsible for a software component
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        tag:
          description: 'Tag used to annotate a version or a software configuration.
            This annotation is useful to show which version is the latest, or which
            version is deprecated. Supported tags are: "latest", "deprecated"'
          items:
            type: string
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        identifier:
          description: Identifier of the resource being described
          items:
            type: string
          nullable: true
          type: array
        hasSampleExecution:
          description: Property pointing to a sample execution of a software configuration
          items:
            $ref: '#/components/schemas/SampleExecution'
          nullable: true
          type: array
        hasSampleResult:
          description: Property designed to link a software configuration to a sample
            resource resulting from its execution
          items:
            $ref: '#/components/schemas/SampleResource'
          nullable: true
          type: array
        author:
          description: The creator of a software component
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        wasDerivedFromSetup:
          description: Property that links a setup to a previous version of that setup.
            This property is needed (for example) when creating snapshots of setups.
          items:
            $ref: '#/components/schemas/ConfigurationSetup'
          nullable: true
          type: array
        hasConstraint:
          description: 'Constraint or rule associated to a software configuration.
            For example: "This model accepts only monthly data", or "all inputs of
            this model configuration must share the same location". More structured
            restrictions, such as Jena rules or SWRL rules may also be captured with
            this property'
          items:
            $ref: '#/components/schemas/Constraint'
          nullable: true
          type: array
        hasBuildFile:
          description: A file (e.g., Dockerfile) with executable instructions indicating
            how a Software Image or a Software component is built
          items:
            type: string
          nullable: true
          type: array
        shortDescription:
          description: A summarized description of the resource
          items:
            type: string
          nullable: true
          type: array
        hasExecutionCommand:
          description: Execution instructions on how to run the image
          items:
            type: string
          nullable: true
          type: array
        datePublished:
          description: Date when a software component was published
          items:
            type: string
          nullable: true
          type: array
        license:
          description: License of a software component or its source code
          items:
            type: string
          nullable: true
          type: array
        hasSourceCode:
          description: Property designed to link a software with its software source
            code (which may reside in a code repository such as GitHub)
          items:
            $ref: '#/components/schemas/SourceCode'
          maxItems: 1
          nullable: true
          type: array
        hasSetup:
          description: Property used to define configurations with some fixed resources
            and values. The rationale of this property is to allow predefined configurations
          items:
            $ref: '#/components/schemas/ConfigurationSetup'
          nullable: true
          type: array
        hasExample:
          description: An example explaining a scenario where the software component
            was used in plain language.
          items:
            type: string
          nullable: true
          type: array
        publisher:
          description: Publisher organization or person responsible for a software
            component
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasOutput:
          description: Property that expresses what are the outputs of a model
          items:
            $ref: '#/components/schemas/DatasetSpecification'
          nullable: true
          type: array
        status:
          description: Data property to indicate the status of a configuration setups.
            For example, to indicate that a setup has been executed in a platform,
            that the setup should notbe shown to users (it's an auxiliary setup),
            etc.
          items:
            type: string
          nullable: true
          type: array
        doi:
          description: Digital Object Identifier associated with a software component
          items:
            type: string
          nullable: true
          type: array
        hasFunding:
          description: Property that links a software project to its funding information
          items:
            $ref: '#/components/schemas/FundingInformation'
          nullable: true
          type: array
        hasComponentLocation:
          description: Location of the aggregation of all the files needed to execute
            the component. Usually a zip file including the run script and support
            scripts, including specification files
          items:
            type: string
          nullable: true
          type: array
        supportDetails:
          description: Property to link details, such as mailing lists in case a contact
            person is not provided
          items:
            type: string
          nullable: true
          type: array
        hasVersion:
          description: Property designed to link a software component with its corresponding
            versions
          items:
            $ref: '#/components/schemas/SoftwareVersion'
          nullable: true
          type: array
        hasTypicalDataSource:
          description: Typical data sources that are used by a software component
          items:
            type: string
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        referencePublication:
          description: Main publication to cite for this software component
          items:
            type: string
          nullable: true
          type: array
        screenshot:
          description: Image illustrating a snapshot of the target software
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hadPrimarySource:
          description: Property to identify the original source of the information
            of the annotated resource. It could be a web page, an organization, a
            person, some experiment notes, etc.
          items:
            description: Property to identify the original source of the information
              of the annotated resource. It could be a web page, an organization,
              a person, some experiment notes, etc.
            type: object
          nullable: true
          type: array
        issueTracker:
          description: Pointer to the issue tracker of a software component
          items:
            type: string
          nullable: true
          type: array
        hasSoftwareImage:
          description: Function to link a function with its corresponding container
          items:
            $ref: '#/components/schemas/SoftwareImage'
          maxItems: 1
          nullable: true
          type: array
        dateCreated:
          description: Date when a software component was created
          items:
            type: string
          nullable: true
          type: array
        contributor:
          description: Contributor to a software component
          items:
            $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasPurpose:
          description: Objective or main functionality that can be achieved by running
            this software
          items:
            type: string
          nullable: true
          type: array
        hasExecutableInstructions:
          description: Instructions that indicate how a software component should
            be executed. The difference with `hasExecutionCommand` is that the execution
            instructions aim to be human-readable, and have explanations between the
            different commands and instructions
          items:
            type: string
          nullable: true
          type: array
        hasSampleVisualization:
          description: A typical sample visualization of the softwware outputs
          items:
            $ref: '#/components/schemas/Visualization'
          nullable: true
          type: array
        memoryRequirements:
          description: Memory requirements of a software
          items:
            type: string
          nullable: true
          type: array
        website:
          description: Website of the software
          items:
            type: string
          nullable: true
          type: array
        citation:
          description: How to cite this software
          items:
            type: string
          nullable: true
          type: array
        processorRequirements:
          description: Processor requirements of a software component
          items:
            type: string
          nullable: true
          type: array
        adjustableParameter:
          description: Parameter that can be adjusted in a configuration setup
          items:
            $ref: '#/components/schemas/Parameter'
          nullable: true
          type: array
        hasUsageNotes:
          description: Property that describes the usage considerations of a particular
            software. These notes capture the rationale of for that software configuration,
            along with an explanation for sample inputs, things to consider when running
            the model with data, etc.
          items:
            type: string
          nullable: true
          type: array
        hasSupportScriptLocation:
          description: Property that links to the location of scripts that may be
            used from the main runnable script.
          items:
            type: string
          nullable: true
          type: array
        readme:
          description: URl to the readme file of a software component
          items:
            type: string
          nullable: true
          type: array
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        hasAssumption:
          description: Assumptions of a software, e.g. the solver being used for a
            particular model, the source of the data (e.g., all data must have a given
            resolution), etc.
          items:
            type: string
          nullable: true
          type: array
        hasParameter:
          description: Property that indicates the parameters of a model configuration
          items:
            $ref: '#/components/schemas/Parameter'
          nullable: true
          type: array
        operatingSystems:
          description: Operating systems under which a software component can operate
          items:
            type: string
          nullable: true
          type: array
        hasExecutableNotebook:
          description: Property that links a software component with an executable
            notebook (e.g., Jupyter notebook) that illustrates how to use it in an
            executable manner.
          items:
            type: string
          nullable: true
          type: array
        usefulForCalculatingIndex:
          description: Property that indicates that a software component (or any of
            its outputs) can be used to calculate a particular index. The rationale
            for this property is that indices are usually calculated by applying post-processing
            steps to the outputs of a software component.
          items:
            $ref: '#/components/schemas/NumericalIndex'
          nullable: true
          type: array
        hasInput:
          description: Property that links a model configuration to the input types
            expected by it.
          items:
            $ref: '#/components/schemas/DatasetSpecification'
          nullable: true
          type: array
      type: object
    ModelConfigurationSetup:
      description: Setup of a particular model, that may represent a calibration or
        a configuration with a set of values for a specific region.
      example:
        value:
          id: some_id
      properties:
        hasDownloadInstructions:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        keywords:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasDocumentation:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasGrid:
          description: Grid information about the model
          items:
            $ref: '#/components/schemas/Grid'
          nullable: true
          type: array
        hasImplementationScriptLocation:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        softwareRequirements:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasDownloadURL:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        calibratedVariable:
          description: Variable that was calibrated in this particular model configuration
            calibration
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
        hasInstallationInstructions:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        compatibleVisualizationSoftware:
          description: Description not available
          items:
            $ref: '#/components/schemas/Software'
          nullable: true
          type: array
        copyrightHolder:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        calibrationMethod:
          description: Calibration method used for a particular model configuration
            or setup
          items:
            type: string
          nullable: true
          type: array
        hasRegion:
          description: Property linking a region to a model configuration/calibration.
            This property implies that the described model configuration is prepared
            to execute in that target region
          items:
            $ref: '#/components/schemas/Region'
          nullable: true
          type: array
        hasFAQ:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        logo:
          description: Description not available
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasContactPerson:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        tag:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        limitations:
          description: Known restrictions (i.e. cases where the model is known not
            to be reliable or shouldn't be used)
          items:
            type: string
          nullable: true
          type: array
        identifier:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasSampleExecution:
          description: Description not available
          items:
            $ref: '#/components/schemas/SampleExecution'
          nullable: true
          type: array
        hasSampleResult:
          description: Description not available
          items:
            $ref: '#/components/schemas/SampleResource'
          nullable: true
          type: array
        author:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        wasDerivedFromSetup:
          description: Description not available
          items:
            $ref: '#/components/schemas/ConfigurationSetup'
          nullable: true
          type: array
        hasConstraint:
          description: Description not available
          items:
            $ref: '#/components/schemas/Constraint'
          nullable: true
          type: array
        hasBuildFile:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        shortDescription:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasExecutionCommand:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        datePublished:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        theoreticalBasis:
          description: What is the theory behind the processes described in the model
          items:
            type: string
          nullable: true
          type: array
        license:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasSourceCode:
          description: Description not available
          items:
            $ref: '#/components/schemas/SourceCode'
          maxItems: 1
          nullable: true
          type: array
        hasSetup:
          description: Description not available
          items:
            $ref: '#/components/schemas/ConfigurationSetup'
          nullable: true
          type: array
        hasExplanationDiagram:
          description: Diagram used to explain the behavior of the model
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasExample:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        calibrationInterval:
          description: Property that represents the temporal interval used to calibrate
            a model
          items:
            type: string
          nullable: true
          type: array
        publisher:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasOutput:
          description: Description not available
          items:
            $ref: '#/components/schemas/DatasetSpecification'
          nullable: true
          type: array
        runtimeEstimation:
          description: An estimate of the time required to run example codes or other
            known configurations
          items:
            type: string
          nullable: true
          type: array
        hasOutputTimeInterval:
          description: Time interval used in the model configuration
          items:
            $ref: '#/components/schemas/TimeInterval'
          nullable: true
          type: array
        status:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        doi:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        parameterAssignmentMethod:
          description: Property that indicates how have the parameters assigned in
            a model configuration (e.g., using an expert guess, by using calibration,
            etc.)
          items:
            type: string
          nullable: true
          type: array
        hasFunding:
          description: Description not available
          items:
            $ref: '#/components/schemas/FundingInformation'
          nullable: true
          type: array
        hasComponentLocation:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasProcess:
          description: Property that indicates which physical processes (if any) are
            associated with a model
          items:
            $ref: '#/components/schemas/Process'
          nullable: true
          type: array
        supportDetails:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasVersion:
          description: Description not available
          items:
            $ref: '#/components/schemas/SoftwareVersion'
          nullable: true
          type: array
        hasTypicalDataSource:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        referencePublication:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        screenshot:
          description: Description not available
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasModelCategory:
          description: Category associated with a model (e.g., Hydrology, etc.)
          items:
            $ref: '#/components/schemas/ModelCategory'
          nullable: true
          type: array
        hadPrimarySource:
          description: Description not available
          items:
            description: Description not available
            type: object
          nullable: true
          type: array
        issueTracker:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasSoftwareImage:
          description: Description not available
          items:
            $ref: '#/components/schemas/SoftwareImage'
          maxItems: 1
          nullable: true
          type: array
        dateCreated:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        contributor:
          description: Description not available
          items:
            $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasInputVariable:
          description: Variable that is used as input for this model
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
        hasModelResultTable:
          description: Sample result table associated with a model configuration
          items:
            type: string
          nullable: true
          type: array
        calibrationTargetVariable:
          description: Variable for which the model was calibrated for. For example,
            in a hydrology model one calibrate the predicted river width by varying
            hydrologic conductivity
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
        hasPurpose:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasExecutableInstructions:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasSampleVisualization:
          description: Description not available
          items:
            $ref: '#/components/schemas/Visualization'
          nullable: true
          type: array
        hasCausalDiagram:
          description: Diagram associated to a model configuration
          items:
            $ref: '#/components/schemas/CausalDiagram'
          nullable: true
          type: array
        memoryRequirements:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        website:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        citation:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        processorRequirements:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        parameterization:
          description: Were there any simplifications made to processes to make the
            model more efficient
          items:
            type: string
          nullable: true
          type: array
        adjustableParameter:
          description: Description not available
          items:
            $ref: '#/components/schemas/Parameter'
          nullable: true
          type: array
        hasUsageNotes:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasSupportScriptLocation:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        readme:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        hasAssumption:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasParameter:
          description: Description not available
          items:
            $ref: '#/components/schemas/Parameter'
          nullable: true
          type: array
        operatingSystems:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasExecutableNotebook:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        validUntil:
          description: Date until which the calibration of a model is valid. For example,
            a trained model with data from 2005-2010 may only be valid for predictions
            until 2015.
          items:
            format: date-time
            type: string
          nullable: true
          type: array
        hasEquation:
          description: Equations used in the model
          items:
            $ref: '#/components/schemas/Equation'
          nullable: true
          type: array
        usefulForCalculatingIndex:
          description: Description not available
          items:
            $ref: '#/components/schemas/NumericalIndex'
          nullable: true
          type: array
        hasInput:
          description: Description not available
          items:
            $ref: '#/components/schemas/DatasetSpecification'
          nullable: true
          type: array
        hasOutputVariable:
          description: Variable that is used as output for this model
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
      type: object
    Theory-GuidedModel:
      description: A model guided by mathematical equations that attempt to represent
        one or more natural processes.
      example:
        value:
          id: some_id
      properties:
        hasDownloadInstructions:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        keywords:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasDocumentation:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasGrid:
          description: Grid information about the model
          items:
            $ref: '#/components/schemas/Grid'
          nullable: true
          type: array
        softwareRequirements:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasDownloadURL:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        hasInstallationInstructions:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        compatibleVisualizationSoftware:
          description: Description not available
          items:
            $ref: '#/components/schemas/Software'
          nullable: true
          type: array
        copyrightHolder:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasFAQ:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        logo:
          description: Description not available
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasContactPerson:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        limitations:
          description: Known restrictions (i.e. cases where the model is known not
            to be reliable or shouldn't be used)
          items:
            type: string
          nullable: true
          type: array
        identifier:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        author:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasBuildFile:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        shortDescription:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        datePublished:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        theoreticalBasis:
          description: What is the theory behind the processes described in the model
          items:
            type: string
          nullable: true
          type: array
        license:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasSourceCode:
          description: Description not available
          items:
            $ref: '#/components/schemas/SourceCode'
          maxItems: 1
          nullable: true
          type: array
        hasExplanationDiagram:
          description: Diagram used to explain the behavior of the model
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasExample:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        publisher:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        runtimeEstimation:
          description: An estimate of the time required to run example codes or other
            known configurations
          items:
            type: string
          nullable: true
          type: array
        doi:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasFunding:
          description: Description not available
          items:
            $ref: '#/components/schemas/FundingInformation'
          nullable: true
          type: array
        hasProcess:
          description: Property that indicates which physical processes (if any) are
            associated with a model
          items:
            $ref: '#/components/schemas/Process'
          nullable: true
          type: array
        supportDetails:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasVersion:
          description: Description not available
          items:
            $ref: '#/components/schemas/SoftwareVersion'
          nullable: true
          type: array
        hasTypicalDataSource:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        referencePublication:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        screenshot:
          description: Description not available
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasModelCategory:
          description: Category associated with a model (e.g., Hydrology, etc.)
          items:
            $ref: '#/components/schemas/ModelCategory'
          nullable: true
          type: array
        hadPrimarySource:
          description: Description not available
          items:
            description: Description not available
            type: object
          nullable: true
          type: array
        issueTracker:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        dateCreated:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        contributor:
          description: Description not available
          items:
            $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasInputVariable:
          description: Variable that is used as input for this model
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
        hasPurpose:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasExecutableInstructions:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasSampleVisualization:
          description: Description not available
          items:
            $ref: '#/components/schemas/Visualization'
          nullable: true
          type: array
        memoryRequirements:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        website:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        citation:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        processorRequirements:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        parameterization:
          description: Were there any simplifications made to processes to make the
            model more efficient
          items:
            type: string
          nullable: true
          type: array
        hasUsageNotes:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        readme:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        hasAssumption:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        operatingSystems:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasExecutableNotebook:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasEquation:
          description: Equations used in the model
          items:
            $ref: '#/components/schemas/Equation'
          nullable: true
          type: array
        usefulForCalculatingIndex:
          description: Description not available
          items:
            $ref: '#/components/schemas/NumericalIndex'
          nullable: true
          type: array
        hasOutputVariable:
          description: Variable that is used as output for this model
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
      type: object
    CoupledModel:
      description: Model that incorporates the coupling of two or more existing models
      example:
        value:
          id: some_id
      properties:
        hasDownloadInstructions:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        keywords:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasDocumentation:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasGrid:
          description: Grid information about the model
          items:
            $ref: '#/components/schemas/Grid'
          nullable: true
          type: array
        softwareRequirements:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasDownloadURL:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        hasInstallationInstructions:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        compatibleVisualizationSoftware:
          description: Description not available
          items:
            $ref: '#/components/schemas/Software'
          nullable: true
          type: array
        copyrightHolder:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasFAQ:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        logo:
          description: Description not available
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasContactPerson:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        limitations:
          description: Known restrictions (i.e. cases where the model is known not
            to be reliable or shouldn't be used)
          items:
            type: string
          nullable: true
          type: array
        identifier:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        author:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasBuildFile:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        shortDescription:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        datePublished:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        theoreticalBasis:
          description: What is the theory behind the processes described in the model
          items:
            type: string
          nullable: true
          type: array
        license:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasSourceCode:
          description: Description not available
          items:
            $ref: '#/components/schemas/SourceCode'
          maxItems: 1
          nullable: true
          type: array
        hasExplanationDiagram:
          description: Diagram used to explain the behavior of the model
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasExample:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        publisher:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        runtimeEstimation:
          description: An estimate of the time required to run example codes or other
            known configurations
          items:
            type: string
          nullable: true
          type: array
        doi:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasFunding:
          description: Description not available
          items:
            $ref: '#/components/schemas/FundingInformation'
          nullable: true
          type: array
        hasProcess:
          description: Property that indicates which physical processes (if any) are
            associated with a model
          items:
            $ref: '#/components/schemas/Process'
          nullable: true
          type: array
        supportDetails:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasVersion:
          description: Description not available
          items:
            $ref: '#/components/schemas/SoftwareVersion'
          nullable: true
          type: array
        hasTypicalDataSource:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        referencePublication:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        screenshot:
          description: Description not available
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        usesModel:
          description: Property that describes which models are used by a coupled
            model
          items:
            $ref: '#/components/schemas/Model'
          nullable: true
          type: array
        hasModelCategory:
          description: Category associated with a model (e.g., Hydrology, etc.)
          items:
            $ref: '#/components/schemas/ModelCategory'
          nullable: true
          type: array
        hadPrimarySource:
          description: Description not available
          items:
            description: Description not available
            type: object
          nullable: true
          type: array
        issueTracker:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        dateCreated:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        contributor:
          description: Description not available
          items:
            $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasInputVariable:
          description: Variable that is used as input for this model
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
        hasPurpose:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasExecutableInstructions:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasSampleVisualization:
          description: Description not available
          items:
            $ref: '#/components/schemas/Visualization'
          nullable: true
          type: array
        memoryRequirements:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        website:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        citation:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        processorRequirements:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        parameterization:
          description: Were there any simplifications made to processes to make the
            model more efficient
          items:
            type: string
          nullable: true
          type: array
        hasUsageNotes:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        readme:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        hasAssumption:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        operatingSystems:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasExecutableNotebook:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasEquation:
          description: Equations used in the model
          items:
            $ref: '#/components/schemas/Equation'
          nullable: true
          type: array
        usefulForCalculatingIndex:
          description: Description not available
          items:
            $ref: '#/components/schemas/NumericalIndex'
          nullable: true
          type: array
        hasOutputVariable:
          description: Variable that is used as output for this model
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
      type: object
    CatalogIdentifier:
      description: Class to identify that a parameter is a catalog identifier. The
        rationale for this type of parameter is that in some cases datasets may be
        downloaded in the software component itself, rather than exposed as an input
      example:
        value:
          id: some_id
      properties:
        hasDefaultValue:
          description: Default accepted value of a variable presentation (or a parameter)
          items:
            anyOf:
            - format: uri
              type: string
            - type: boolean
            - format: date-time
              type: string
            - format: float
              type: number
            - format: int32
              type: integer
            - type: string
          nullable: true
          type: array
        hasMaximumAcceptedValue:
          description: Maximum accepted value of a variable presentation (or a parameter)
          items:
            anyOf:
            - format: date-time
              type: string
            - format: float
              type: number
            - format: int32
              type: integer
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        hasDataType:
          description: Property that indicates the data type of a parameter
          items:
            type: string
          nullable: true
          type: array
        hasFixedValue:
          description: Value of a parameter in a software setup.
          items:
            anyOf:
            - format: uri
              type: string
            - type: boolean
            - format: date-time
              type: string
            - format: float
              type: number
            - format: int32
              type: integer
            - type: string
          nullable: true
          type: array
        hasPresentation:
          description: Property that links an instance of a dataset (or a dataset
            specification) to the presentation of a variable contained (or expected
            to be contained) on it.
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        recommendedIncrement:
          description: Value that represents how a parameter should be incremented
            on each iteration of a software component execution. This value is important
            when preparing execution ensembles automatically, e.g., simulating crop
            production varying the parameter "fertilizer amount" in increments of
            10%.
          items:
            type: number
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        hasMinimumAcceptedValue:
          description: Minimum accepted value of a variable presentation (or a parameter)
          items:
            anyOf:
            - format: date-time
              type: string
            - format: float
              type: number
            - format: int32
              type: integer
          nullable: true
          type: array
        hasAcceptedValues:
          description: Property that constraints which values are accepted for a parameter.
            For example, the name of a crop can only be "Maize" or "Sorghum"
          items:
            type: string
          nullable: true
          type: array
        adjustsVariable:
          description: Property that links parameter with the variable they adjust.
            This property can be used when parameters quantify variables without directly
            representing them. For example, a "fertilizer percentage adjustment" parameter
            can quantify a "fertilizer price" variable
          items:
            $ref: '#/components/schemas/Variable'
          maxItems: 1
          nullable: true
          type: array
        relevantForIntervention:
          description: Description not available
          items:
            $ref: '#/components/schemas/Intervention'
          nullable: true
          type: array
        position:
          description: Position of the parameter or input/output in the model configuration.
            This property is needed to know how to organize the I/O of the component
            on execution
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        usesUnit:
          description: Property used to link a variable presentation or time interval
            to the unit they are represented in
          items:
            $ref: '#/components/schemas/Unit'
          maxItems: 1
          nullable: true
          type: array
        hasStepSize:
          description: 'Property that determines what are the increments (step size)
            that are commonly used to vary a parameter. This is commonly used for
            automatically setting up software tests. For example, if I want to set
            up a model and try 30 reasonable values on a parameter, I may use the
            default value and the step size to create the appropriate increments.
            If the step size is 0.1 and the default value is 0, then I will will be
            able to create setups: 0, 0.1, 0.2...2.9,3'
          items:
            type: number
          nullable: true
          type: array
      type: object
    EmpiricalModel:
      description: Model based on observations.
      example:
        value:
          id: some_id
      properties:
        hasDownloadInstructions:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        keywords:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasDocumentation:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasGrid:
          description: Grid information about the model
          items:
            $ref: '#/components/schemas/Grid'
          nullable: true
          type: array
        softwareRequirements:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasDownloadURL:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        hasInstallationInstructions:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        compatibleVisualizationSoftware:
          description: Description not available
          items:
            $ref: '#/components/schemas/Software'
          nullable: true
          type: array
        copyrightHolder:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasFAQ:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        logo:
          description: Description not available
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasContactPerson:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        limitations:
          description: Known restrictions (i.e. cases where the model is known not
            to be reliable or shouldn't be used)
          items:
            type: string
          nullable: true
          type: array
        identifier:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        author:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasBuildFile:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        shortDescription:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        datePublished:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        theoreticalBasis:
          description: What is the theory behind the processes described in the model
          items:
            type: string
          nullable: true
          type: array
        license:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasSourceCode:
          description: Description not available
          items:
            $ref: '#/components/schemas/SourceCode'
          maxItems: 1
          nullable: true
          type: array
        hasExplanationDiagram:
          description: Diagram used to explain the behavior of the model
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasExample:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        publisher:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        runtimeEstimation:
          description: An estimate of the time required to run example codes or other
            known configurations
          items:
            type: string
          nullable: true
          type: array
        doi:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasFunding:
          description: Description not available
          items:
            $ref: '#/components/schemas/FundingInformation'
          nullable: true
          type: array
        hasProcess:
          description: Property that indicates which physical processes (if any) are
            associated with a model
          items:
            $ref: '#/components/schemas/Process'
          nullable: true
          type: array
        supportDetails:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasVersion:
          description: Description not available
          items:
            $ref: '#/components/schemas/SoftwareVersion'
          nullable: true
          type: array
        hasTypicalDataSource:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        referencePublication:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        screenshot:
          description: Description not available
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasModelCategory:
          description: Category associated with a model (e.g., Hydrology, etc.)
          items:
            $ref: '#/components/schemas/ModelCategory'
          nullable: true
          type: array
        hadPrimarySource:
          description: Description not available
          items:
            description: Description not available
            type: object
          nullable: true
          type: array
        issueTracker:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        dateCreated:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        contributor:
          description: Description not available
          items:
            $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasInputVariable:
          description: Variable that is used as input for this model
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
        hasPurpose:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasExecutableInstructions:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasSampleVisualization:
          description: Description not available
          items:
            $ref: '#/components/schemas/Visualization'
          nullable: true
          type: array
        memoryRequirements:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        website:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        citation:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        processorRequirements:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        parameterization:
          description: Were there any simplifications made to processes to make the
            model more efficient
          items:
            type: string
          nullable: true
          type: array
        hasUsageNotes:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        readme:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        hasAssumption:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        operatingSystems:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasExecutableNotebook:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasEquation:
          description: Equations used in the model
          items:
            $ref: '#/components/schemas/Equation'
          nullable: true
          type: array
        usefulForCalculatingIndex:
          description: Description not available
          items:
            $ref: '#/components/schemas/NumericalIndex'
          nullable: true
          type: array
        hasOutputVariable:
          description: Variable that is used as output for this model
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
      type: object
    ModelConfiguration:
      description: A model configuration is a way of exposing a particular functionality
        of a model.
      example:
        value:
          id: some_id
      properties:
        hasDownloadInstructions:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        keywords:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasDocumentation:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasGrid:
          description: Grid information about the model
          items:
            $ref: '#/components/schemas/Grid'
          nullable: true
          type: array
        hasImplementationScriptLocation:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        softwareRequirements:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasDownloadURL:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        hasInstallationInstructions:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        compatibleVisualizationSoftware:
          description: Description not available
          items:
            $ref: '#/components/schemas/Software'
          nullable: true
          type: array
        copyrightHolder:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasRegion:
          description: Property linking a region to a model configuration/calibration.
            This property implies that the described model configuration is prepared
            to execute in that target region
          items:
            $ref: '#/components/schemas/Region'
          nullable: true
          type: array
        hasFAQ:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        logo:
          description: Description not available
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasContactPerson:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        tag:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        limitations:
          description: Known restrictions (i.e. cases where the model is known not
            to be reliable or shouldn't be used)
          items:
            type: string
          nullable: true
          type: array
        identifier:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasSampleExecution:
          description: Description not available
          items:
            $ref: '#/components/schemas/SampleExecution'
          nullable: true
          type: array
        hasSampleResult:
          description: Description not available
          items:
            $ref: '#/components/schemas/SampleResource'
          nullable: true
          type: array
        author:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasConstraint:
          description: Description not available
          items:
            $ref: '#/components/schemas/Constraint'
          nullable: true
          type: array
        hasBuildFile:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        shortDescription:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasExecutionCommand:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        datePublished:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        theoreticalBasis:
          description: What is the theory behind the processes described in the model
          items:
            type: string
          nullable: true
          type: array
        license:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasSourceCode:
          description: Description not available
          items:
            $ref: '#/components/schemas/SourceCode'
          maxItems: 1
          nullable: true
          type: array
        hasSetup:
          description: Description not available
          items:
            $ref: '#/components/schemas/ConfigurationSetup'
          nullable: true
          type: array
        hasExplanationDiagram:
          description: Diagram used to explain the behavior of the model
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasExample:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        publisher:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasOutput:
          description: Description not available
          items:
            $ref: '#/components/schemas/DatasetSpecification'
          nullable: true
          type: array
        runtimeEstimation:
          description: An estimate of the time required to run example codes or other
            known configurations
          items:
            type: string
          nullable: true
          type: array
        hasOutputTimeInterval:
          description: Time interval used in the model configuration
          items:
            $ref: '#/components/schemas/TimeInterval'
          nullable: true
          type: array
        doi:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasFunding:
          description: Description not available
          items:
            $ref: '#/components/schemas/FundingInformation'
          nullable: true
          type: array
        hasComponentLocation:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasProcess:
          description: Property that indicates which physical processes (if any) are
            associated with a model
          items:
            $ref: '#/components/schemas/Process'
          nullable: true
          type: array
        supportDetails:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasVersion:
          description: Description not available
          items:
            $ref: '#/components/schemas/SoftwareVersion'
          nullable: true
          type: array
        hasTypicalDataSource:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        referencePublication:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        screenshot:
          description: Description not available
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasModelCategory:
          description: Category associated with a model (e.g., Hydrology, etc.)
          items:
            $ref: '#/components/schemas/ModelCategory'
          nullable: true
          type: array
        hadPrimarySource:
          description: Description not available
          items:
            description: Description not available
            type: object
          nullable: true
          type: array
        issueTracker:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasSoftwareImage:
          description: Description not available
          items:
            $ref: '#/components/schemas/SoftwareImage'
          maxItems: 1
          nullable: true
          type: array
        dateCreated:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        contributor:
          description: Description not available
          items:
            $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasInputVariable:
          description: Variable that is used as input for this model
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
        hasModelResultTable:
          description: Sample result table associated with a model configuration
          items:
            type: string
          nullable: true
          type: array
        hasPurpose:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasExecutableInstructions:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasSampleVisualization:
          description: Description not available
          items:
            $ref: '#/components/schemas/Visualization'
          nullable: true
          type: array
        hasCausalDiagram:
          description: Diagram associated to a model configuration
          items:
            $ref: '#/components/schemas/CausalDiagram'
          nullable: true
          type: array
        memoryRequirements:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        website:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        citation:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        processorRequirements:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        parameterization:
          description: Were there any simplifications made to processes to make the
            model more efficient
          items:
            type: string
          nullable: true
          type: array
        hasUsageNotes:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasSupportScriptLocation:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        readme:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        hasAssumption:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasParameter:
          description: Description not available
          items:
            $ref: '#/components/schemas/Parameter'
          nullable: true
          type: array
        operatingSystems:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasExecutableNotebook:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasEquation:
          description: Equations used in the model
          items:
            $ref: '#/components/schemas/Equation'
          nullable: true
          type: array
        usefulForCalculatingIndex:
          description: Description not available
          items:
            $ref: '#/components/schemas/NumericalIndex'
          nullable: true
          type: array
        hasInput:
          description: Description not available
          items:
            $ref: '#/components/schemas/DatasetSpecification'
          nullable: true
          type: array
        hasOutputVariable:
          description: Variable that is used as output for this model
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
      type: object
    SpatiallyDistributedGrid:
      description: Grid that represents a 2D or 3D space
      example:
        value:
          id: some_id
      properties:
        hasDimensionality:
          description: Description not available
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        hasFormat:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        pathLocation:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasFileStructure:
          description: Description not available
          items:
            description: Description not available
            type: object
          maxItems: 1
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        hasDataTransformation:
          description: Description not available
          items:
            $ref: '#/components/schemas/DataTransformation'
          nullable: true
          type: array
        hasPresentation:
          description: Description not available
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        hasFixedResource:
          description: Description not available
          items:
            $ref: '#/components/schemas/SampleResource'
          nullable: true
          type: array
        hasCoordinateSystem:
          description: Coordinate system used in a grid
          items:
            type: string
          maxItems: 1
          nullable: true
          type: array
        hasSpatialResolution:
          description: Spatial resolution of a grid (e.g., 50m)
          items:
            type: string
          nullable: true
          type: array
        isTransformedFrom:
          description: Description not available
          items:
            $ref: '#/components/schemas/DatasetSpecification'
          nullable: true
          type: array
        hasShape:
          description: 'Grids may be: rectangular, triangular, hexagonal, hybrid,
            unstructured, block structure, etc.'
          items:
            type: string
          nullable: true
          type: array
        hasDimension:
          description: Dimension of the grid (2D, 3D)
          items:
            type: string
          maxItems: 1
          nullable: true
          type: array
        hasDataTransformationSetup:
          description: Description not available
          items:
            $ref: '#/components/schemas/DataTransformationSetup'
          nullable: true
          type: array
        position:
          description: Description not available
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
      type: object
    ModelCategory:
      description: Class used to represent a category of a model (e.g., Hydrology,
        Agriculture, etc.)
      example:
        value:
          id: some_id
      properties:
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        parentCategory:
          description: Indicates this subcategory parent category
          items:
            $ref: '#/components/schemas/ModelCategory'
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
      type: object
    SampleExecution:
      description: A sample execution of a given software
      example:
        value:
          id: some_id
      properties:
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        hasExecutionCommand:
          description: Execution instructions on how to run the image
          items:
            type: string
          nullable: true
          type: array
      type: object
    TimeInterval:
      description: Time interval at which a model produces output. For example, a
        model may produce outputs for every simulated day, hour, etc.
      example:
        value:
          id: some_id
      properties:
        intervalUnit:
          description: Unit used in an interval (e.g., month)
          items:
            $ref: '#/components/schemas/Unit'
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        intervalValue:
          description: Value used in the time interval of a model (e.g., 1 month,
            5 days, 'harvest cycle')
          items:
            anyOf:
            - format: int32
              type: integer
            - type: string
          nullable: true
          type: array
      type: object
    ConfigurationSetup:
      description: Description not available
      example:
        value:
          id: some_id
      properties:
        hasDownloadInstructions:
          description: Instructions needed to download a software component. The difference
            with `hasDownloadURL` is that this property captures the human readable
            instructions required to download software. For example, sometimes an
            authentication is needed, users need to fill in a form, etc.
          items:
            type: string
          nullable: true
          type: array
        keywords:
          description: Keywords associated with a software component
          items:
            type: string
          nullable: true
          type: array
        hasDocumentation:
          description: Pointer to the documentation of the model
          items:
            type: string
          nullable: true
          type: array
        hasImplementationScriptLocation:
          description: Property that points to the main runnable script for the current
            function
          items:
            type: string
          nullable: true
          type: array
        softwareRequirements:
          description: Software requirements needed to install a software component
          items:
            type: string
          nullable: true
          type: array
        hasDownloadURL:
          description: Download URL where to obtain the source/executable of the software
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        hasInstallationInstructions:
          description: Instructions required to install this particular piece of software.
            Installation instructions usually are available in a human-readable manner.
          items:
            type: string
          nullable: true
          type: array
        compatibleVisualizationSoftware:
          description: Property that links a software component to other useful software
            that canbe used to visualize its outputs
          items:
            $ref: '#/components/schemas/Software'
          nullable: true
          type: array
        copyrightHolder:
          description: Copyright holder for a software component
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasFAQ:
          description: Frequently asked questions about a software
          items:
            type: string
          nullable: true
          type: array
        logo:
          description: Property that links to the image used as logo for a software
            component
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasContactPerson:
          description: Contact person responsible for a software component
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        tag:
          description: 'Tag used to annotate a version or a software configuration.
            This annotation is useful to show which version is the latest, or which
            version is deprecated. Supported tags are: "latest", "deprecated"'
          items:
            type: string
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        identifier:
          description: Identifier of the resource being described
          items:
            type: string
          nullable: true
          type: array
        hasSampleExecution:
          description: Property pointing to a sample execution of a software configuration
          items:
            $ref: '#/components/schemas/SampleExecution'
          nullable: true
          type: array
        hasSampleResult:
          description: Property designed to link a software configuration to a sample
            resource resulting from its execution
          items:
            $ref: '#/components/schemas/SampleResource'
          nullable: true
          type: array
        author:
          description: The creator of a software component
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        wasDerivedFromSetup:
          description: Property that links a setup to a previous version of that setup.
            This property is needed (for example) when creating snapshots of setups.
          items:
            $ref: '#/components/schemas/ConfigurationSetup'
          nullable: true
          type: array
        hasConstraint:
          description: 'Constraint or rule associated to a software configuration.
            For example: "This model accepts only monthly data", or "all inputs of
            this model configuration must share the same location". More structured
            restrictions, such as Jena rules or SWRL rules may also be captured with
            this property'
          items:
            $ref: '#/components/schemas/Constraint'
          nullable: true
          type: array
        hasBuildFile:
          description: A file (e.g., Dockerfile) with executable instructions indicating
            how a Software Image or a Software component is built
          items:
            type: string
          nullable: true
          type: array
        shortDescription:
          description: A summarized description of the resource
          items:
            type: string
          nullable: true
          type: array
        hasExecutionCommand:
          description: Execution instructions on how to run the image
          items:
            type: string
          nullable: true
          type: array
        datePublished:
          description: Date when a software component was published
          items:
            type: string
          nullable: true
          type: array
        license:
          description: License of a software component or its source code
          items:
            type: string
          nullable: true
          type: array
        hasSourceCode:
          description: Property designed to link a software with its software source
            code (which may reside in a code repository such as GitHub)
          items:
            $ref: '#/components/schemas/SourceCode'
          maxItems: 1
          nullable: true
          type: array
        hasSetup:
          description: Property used to define configurations with some fixed resources
            and values. The rationale of this property is to allow predefined configurations
          items:
            $ref: '#/components/schemas/ConfigurationSetup'
          nullable: true
          type: array
        hasExample:
          description: An example explaining a scenario where the software component
            was used in plain language.
          items:
            type: string
          nullable: true
          type: array
        publisher:
          description: Publisher organization or person responsible for a software
            component
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasOutput:
          description: Property that expresses what are the outputs of a model
          items:
            $ref: '#/components/schemas/DatasetSpecification'
          nullable: true
          type: array
        status:
          description: Data property to indicate the status of a configuration setups.
            For example, to indicate that a setup has been executed in a platform,
            that the setup should notbe shown to users (it's an auxiliary setup),
            etc.
          items:
            type: string
          nullable: true
          type: array
        doi:
          description: Digital Object Identifier associated with a software component
          items:
            type: string
          nullable: true
          type: array
        hasFunding:
          description: Property that links a software project to its funding information
          items:
            $ref: '#/components/schemas/FundingInformation'
          nullable: true
          type: array
        hasComponentLocation:
          description: Location of the aggregation of all the files needed to execute
            the component. Usually a zip file including the run script and support
            scripts, including specification files
          items:
            type: string
          nullable: true
          type: array
        supportDetails:
          description: Property to link details, such as mailing lists in case a contact
            person is not provided
          items:
            type: string
          nullable: true
          type: array
        hasVersion:
          description: Property designed to link a software component with its corresponding
            versions
          items:
            $ref: '#/components/schemas/SoftwareVersion'
          nullable: true
          type: array
        hasTypicalDataSource:
          description: Typical data sources that are used by a software component
          items:
            type: string
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        referencePublication:
          description: Main publication to cite for this software component
          items:
            type: string
          nullable: true
          type: array
        screenshot:
          description: Image illustrating a snapshot of the target software
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hadPrimarySource:
          description: Property to identify the original source of the information
            of the annotated resource. It could be a web page, an organization, a
            person, some experiment notes, etc.
          items:
            description: Property to identify the original source of the information
              of the annotated resource. It could be a web page, an organization,
              a person, some experiment notes, etc.
            type: object
          nullable: true
          type: array
        issueTracker:
          description: Pointer to the issue tracker of a software component
          items:
            type: string
          nullable: true
          type: array
        hasSoftwareImage:
          description: Function to link a function with its corresponding container
          items:
            $ref: '#/components/schemas/SoftwareImage'
          maxItems: 1
          nullable: true
          type: array
        dateCreated:
          description: Date when a software component was created
          items:
            type: string
          nullable: true
          type: array
        contributor:
          description: Contributor to a software component
          items:
            $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasPurpose:
          description: Objective or main functionality that can be achieved by running
            this software
          items:
            type: string
          nullable: true
          type: array
        hasExecutableInstructions:
          description: Instructions that indicate how a software component should
            be executed. The difference with `hasExecutionCommand` is that the execution
            instructions aim to be human-readable, and have explanations between the
            different commands and instructions
          items:
            type: string
          nullable: true
          type: array
        hasSampleVisualization:
          description: A typical sample visualization of the softwware outputs
          items:
            $ref: '#/components/schemas/Visualization'
          nullable: true
          type: array
        memoryRequirements:
          description: Memory requirements of a software
          items:
            type: string
          nullable: true
          type: array
        website:
          description: Website of the software
          items:
            type: string
          nullable: true
          type: array
        citation:
          description: How to cite this software
          items:
            type: string
          nullable: true
          type: array
        processorRequirements:
          description: Processor requirements of a software component
          items:
            type: string
          nullable: true
          type: array
        adjustableParameter:
          description: Parameter that can be adjusted in a configuration setup
          items:
            $ref: '#/components/schemas/Parameter'
          nullable: true
          type: array
        hasUsageNotes:
          description: Property that describes the usage considerations of a particular
            software. These notes capture the rationale of for that software configuration,
            along with an explanation for sample inputs, things to consider when running
            the model with data, etc.
          items:
            type: string
          nullable: true
          type: array
        hasSupportScriptLocation:
          description: Property that links to the location of scripts that may be
            used from the main runnable script.
          items:
            type: string
          nullable: true
          type: array
        readme:
          description: URl to the readme file of a software component
          items:
            type: string
          nullable: true
          type: array
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        hasAssumption:
          description: Assumptions of a software, e.g. the solver being used for a
            particular model, the source of the data (e.g., all data must have a given
            resolution), etc.
          items:
            type: string
          nullable: true
          type: array
        hasParameter:
          description: Property that indicates the parameters of a model configuration
          items:
            $ref: '#/components/schemas/Parameter'
          nullable: true
          type: array
        operatingSystems:
          description: Operating systems under which a software component can operate
          items:
            type: string
          nullable: true
          type: array
        hasExecutableNotebook:
          description: Property that links a software component with an executable
            notebook (e.g., Jupyter notebook) that illustrates how to use it in an
            executable manner.
          items:
            type: string
          nullable: true
          type: array
        usefulForCalculatingIndex:
          description: Property that indicates that a software component (or any of
            its outputs) can be used to calculate a particular index. The rationale
            for this property is that indices are usually calculated by applying post-processing
            steps to the outputs of a software component.
          items:
            $ref: '#/components/schemas/NumericalIndex'
          nullable: true
          type: array
        hasInput:
          description: Property that links a model configuration to the input types
            expected by it.
          items:
            $ref: '#/components/schemas/DatasetSpecification'
          nullable: true
          type: array
      type: object
    DatasetSpecification:
      description: Description not available
      example:
        value:
          id: some_id
      properties:
        hasDimensionality:
          description: Property to indicate dimensionality of the input or output
            of a dataset specification
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        hasFormat:
          description: Format followed by a file. For example, txt, nc, etc.
          items:
            type: string
          nullable: true
          type: array
        pathLocation:
          description: "Property that indicates the relative path of an input or output\
            \ with respect to the folder structure of the executable. \n\nFor example,\
            \ let's assume we have an input that has to exist in the folder `/datasets`\
            \ or the executable will not work. This property ensures that this knowledge\
            \ is captured for a given software component execution.\n\nIn this case\
            \ the property would capture this as follows:\n\n```\n:input_prep a sd:DatasetSpecification\
            \ .\n:input_prep rdfs:label \"precipitation file\" .\n:input_precip sd:pathLocation\
            \ \"/datasets/\".\n```"
          items:
            type: string
          nullable: true
          type: array
        hasFileStructure:
          description: Relates a dataset specification to the data structure definition
          items:
            description: Relates a dataset specification to the data structure definition
            type: object
          maxItems: 1
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        hasDataTransformation:
          description: Property that associates an input/output with their corresponding
            data transformation.
          items:
            $ref: '#/components/schemas/DataTransformation'
          nullable: true
          type: array
        hasPresentation:
          description: Property that links an instance of a dataset (or a dataset
            specification) to the presentation of a variable contained (or expected
            to be contained) on it.
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        hasFixedResource:
          description: Property that links a parameter or an input to a fixed value.
            For example, in a given configuration a parameter with the planting date
            for a model could be fixed to avoid the user changing it for that region.
          items:
            $ref: '#/components/schemas/SampleResource'
          nullable: true
          type: array
        isTransformedFrom:
          description: Property that links a dataset specification from a model configuration
            or setup to the output from a target data transformation. This occurs
            when a data transformation produces several outputs, but only one of them
            is the one needed for a model
          items:
            $ref: '#/components/schemas/DatasetSpecification'
          nullable: true
          type: array
        hasDataTransformationSetup:
          description: Property to link an input/output dataset to the specific data
            transformation (with URLs
          items:
            $ref: '#/components/schemas/DataTransformationSetup'
          nullable: true
          type: array
        position:
          description: Position of the parameter or input/output in the model configuration.
            This property is needed to know how to organize the I/O of the component
            on execution
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
      type: object
    FundingInformation:
      description: A class to represent the funding information of a software project
      example:
        value:
          id: some_id
      properties:
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        fundingSource:
          description: Link to the organization funding a software component
          items:
            $ref: '#/components/schemas/Organization'
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        fundingGrant:
          description: Grant number used for funding
          items:
            type: string
          nullable: true
          type: array
      type: object
    HybridModel:
      description: A model based on empirical observations and theory.
      example:
        value:
          id: some_id
      properties:
        hasDownloadInstructions:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        keywords:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasDocumentation:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasGrid:
          description: Grid information about the model
          items:
            $ref: '#/components/schemas/Grid'
          nullable: true
          type: array
        softwareRequirements:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasDownloadURL:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        hasInstallationInstructions:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        compatibleVisualizationSoftware:
          description: Description not available
          items:
            $ref: '#/components/schemas/Software'
          nullable: true
          type: array
        copyrightHolder:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasFAQ:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        logo:
          description: Description not available
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasContactPerson:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        limitations:
          description: Known restrictions (i.e. cases where the model is known not
            to be reliable or shouldn't be used)
          items:
            type: string
          nullable: true
          type: array
        identifier:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        author:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasBuildFile:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        shortDescription:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        datePublished:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        theoreticalBasis:
          description: What is the theory behind the processes described in the model
          items:
            type: string
          nullable: true
          type: array
        license:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasSourceCode:
          description: Description not available
          items:
            $ref: '#/components/schemas/SourceCode'
          maxItems: 1
          nullable: true
          type: array
        hasExplanationDiagram:
          description: Diagram used to explain the behavior of the model
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasExample:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        publisher:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        runtimeEstimation:
          description: An estimate of the time required to run example codes or other
            known configurations
          items:
            type: string
          nullable: true
          type: array
        doi:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasFunding:
          description: Description not available
          items:
            $ref: '#/components/schemas/FundingInformation'
          nullable: true
          type: array
        hasProcess:
          description: Property that indicates which physical processes (if any) are
            associated with a model
          items:
            $ref: '#/components/schemas/Process'
          nullable: true
          type: array
        supportDetails:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasVersion:
          description: Description not available
          items:
            $ref: '#/components/schemas/SoftwareVersion'
          nullable: true
          type: array
        hasTypicalDataSource:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        referencePublication:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        screenshot:
          description: Description not available
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasModelCategory:
          description: Category associated with a model (e.g., Hydrology, etc.)
          items:
            $ref: '#/components/schemas/ModelCategory'
          nullable: true
          type: array
        hadPrimarySource:
          description: Description not available
          items:
            description: Description not available
            type: object
          nullable: true
          type: array
        issueTracker:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        dateCreated:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        contributor:
          description: Description not available
          items:
            $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasInputVariable:
          description: Variable that is used as input for this model
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
        hasPurpose:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasExecutableInstructions:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasSampleVisualization:
          description: Description not available
          items:
            $ref: '#/components/schemas/Visualization'
          nullable: true
          type: array
        memoryRequirements:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        website:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        citation:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        processorRequirements:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        parameterization:
          description: Were there any simplifications made to processes to make the
            model more efficient
          items:
            type: string
          nullable: true
          type: array
        hasUsageNotes:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        readme:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        hasAssumption:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        operatingSystems:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasExecutableNotebook:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasEquation:
          description: Equations used in the model
          items:
            $ref: '#/components/schemas/Equation'
          nullable: true
          type: array
        usefulForCalculatingIndex:
          description: Description not available
          items:
            $ref: '#/components/schemas/NumericalIndex'
          nullable: true
          type: array
        hasOutputVariable:
          description: Variable that is used as output for this model
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
      type: object
    Equation:
      description: Information about the mathematical representation used in a model
        or model configuration
      example:
        value:
          id: some_id
      properties:
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
      type: object
    CausalDiagram:
      description: Diagram information with the processes and variables associated
        with a model configuration
      example:
        value:
          id: some_id
      properties:
        hasDiagramPart:
          description: Property that links a causal diagram with its constituent nodes
          items:
            anyOf:
            - $ref: '#/components/schemas/VariablePresentation'
            - $ref: '#/components/schemas/Process'
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
      type: object
    SoftwareConfiguration:
      description: Description not available
      example:
        value:
          id: some_id
      properties:
        hasDownloadInstructions:
          description: Instructions needed to download a software component. The difference
            with `hasDownloadURL` is that this property captures the human readable
            instructions required to download software. For example, sometimes an
            authentication is needed, users need to fill in a form, etc.
          items:
            type: string
          nullable: true
          type: array
        keywords:
          description: Keywords associated with a software component
          items:
            type: string
          nullable: true
          type: array
        hasDocumentation:
          description: Pointer to the documentation of the model
          items:
            type: string
          nullable: true
          type: array
        hasImplementationScriptLocation:
          description: Property that points to the main runnable script for the current
            function
          items:
            type: string
          nullable: true
          type: array
        softwareRequirements:
          description: Software requirements needed to install a software component
          items:
            type: string
          nullable: true
          type: array
        hasDownloadURL:
          description: Download URL where to obtain the source/executable of the software
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        hasInstallationInstructions:
          description: Instructions required to install this particular piece of software.
            Installation instructions usually are available in a human-readable manner.
          items:
            type: string
          nullable: true
          type: array
        compatibleVisualizationSoftware:
          description: Property that links a software component to other useful software
            that canbe used to visualize its outputs
          items:
            $ref: '#/components/schemas/Software'
          nullable: true
          type: array
        copyrightHolder:
          description: Copyright holder for a software component
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasFAQ:
          description: Frequently asked questions about a software
          items:
            type: string
          nullable: true
          type: array
        logo:
          description: Property that links to the image used as logo for a software
            component
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasContactPerson:
          description: Contact person responsible for a software component
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        tag:
          description: 'Tag used to annotate a version or a software configuration.
            This annotation is useful to show which version is the latest, or which
            version is deprecated. Supported tags are: "latest", "deprecated"'
          items:
            type: string
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        identifier:
          description: Identifier of the resource being described
          items:
            type: string
          nullable: true
          type: array
        hasSampleExecution:
          description: Property pointing to a sample execution of a software configuration
          items:
            $ref: '#/components/schemas/SampleExecution'
          nullable: true
          type: array
        hasSampleResult:
          description: Property designed to link a software configuration to a sample
            resource resulting from its execution
          items:
            $ref: '#/components/schemas/SampleResource'
          nullable: true
          type: array
        author:
          description: The creator of a software component
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasConstraint:
          description: 'Constraint or rule associated to a software configuration.
            For example: "This model accepts only monthly data", or "all inputs of
            this model configuration must share the same location". More structured
            restrictions, such as Jena rules or SWRL rules may also be captured with
            this property'
          items:
            $ref: '#/components/schemas/Constraint'
          nullable: true
          type: array
        hasBuildFile:
          description: A file (e.g., Dockerfile) with executable instructions indicating
            how a Software Image or a Software component is built
          items:
            type: string
          nullable: true
          type: array
        shortDescription:
          description: A summarized description of the resource
          items:
            type: string
          nullable: true
          type: array
        hasExecutionCommand:
          description: Execution instructions on how to run the image
          items:
            type: string
          nullable: true
          type: array
        datePublished:
          description: Date when a software component was published
          items:
            type: string
          nullable: true
          type: array
        license:
          description: License of a software component or its source code
          items:
            type: string
          nullable: true
          type: array
        hasSourceCode:
          description: Property designed to link a software with its software source
            code (which may reside in a code repository such as GitHub)
          items:
            $ref: '#/components/schemas/SourceCode'
          maxItems: 1
          nullable: true
          type: array
        hasSetup:
          description: Property used to define configurations with some fixed resources
            and values. The rationale of this property is to allow predefined configurations
          items:
            $ref: '#/components/schemas/ConfigurationSetup'
          nullable: true
          type: array
        hasExample:
          description: An example explaining a scenario where the software component
            was used in plain language.
          items:
            type: string
          nullable: true
          type: array
        publisher:
          description: Publisher organization or person responsible for a software
            component
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasOutput:
          description: Property that expresses what are the outputs of a model
          items:
            $ref: '#/components/schemas/DatasetSpecification'
          nullable: true
          type: array
        doi:
          description: Digital Object Identifier associated with a software component
          items:
            type: string
          nullable: true
          type: array
        hasFunding:
          description: Property that links a software project to its funding information
          items:
            $ref: '#/components/schemas/FundingInformation'
          nullable: true
          type: array
        hasComponentLocation:
          description: Location of the aggregation of all the files needed to execute
            the component. Usually a zip file including the run script and support
            scripts, including specification files
          items:
            type: string
          nullable: true
          type: array
        supportDetails:
          description: Property to link details, such as mailing lists in case a contact
            person is not provided
          items:
            type: string
          nullable: true
          type: array
        hasVersion:
          description: Property designed to link a software component with its corresponding
            versions
          items:
            $ref: '#/components/schemas/SoftwareVersion'
          nullable: true
          type: array
        hasTypicalDataSource:
          description: Typical data sources that are used by a software component
          items:
            type: string
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        referencePublication:
          description: Main publication to cite for this software component
          items:
            type: string
          nullable: true
          type: array
        screenshot:
          description: Image illustrating a snapshot of the target software
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hadPrimarySource:
          description: Property to identify the original source of the information
            of the annotated resource. It could be a web page, an organization, a
            person, some experiment notes, etc.
          items:
            description: Property to identify the original source of the information
              of the annotated resource. It could be a web page, an organization,
              a person, some experiment notes, etc.
            type: object
          nullable: true
          type: array
        issueTracker:
          description: Pointer to the issue tracker of a software component
          items:
            type: string
          nullable: true
          type: array
        hasSoftwareImage:
          description: Function to link a function with its corresponding container
          items:
            $ref: '#/components/schemas/SoftwareImage'
          maxItems: 1
          nullable: true
          type: array
        dateCreated:
          description: Date when a software component was created
          items:
            type: string
          nullable: true
          type: array
        contributor:
          description: Contributor to a software component
          items:
            $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasPurpose:
          description: Objective or main functionality that can be achieved by running
            this software
          items:
            type: string
          nullable: true
          type: array
        hasExecutableInstructions:
          description: Instructions that indicate how a software component should
            be executed. The difference with `hasExecutionCommand` is that the execution
            instructions aim to be human-readable, and have explanations between the
            different commands and instructions
          items:
            type: string
          nullable: true
          type: array
        hasSampleVisualization:
          description: A typical sample visualization of the softwware outputs
          items:
            $ref: '#/components/schemas/Visualization'
          nullable: true
          type: array
        memoryRequirements:
          description: Memory requirements of a software
          items:
            type: string
          nullable: true
          type: array
        website:
          description: Website of the software
          items:
            type: string
          nullable: true
          type: array
        citation:
          description: How to cite this software
          items:
            type: string
          nullable: true
          type: array
        processorRequirements:
          description: Processor requirements of a software component
          items:
            type: string
          nullable: true
          type: array
        hasUsageNotes:
          description: Property that describes the usage considerations of a particular
            software. These notes capture the rationale of for that software configuration,
            along with an explanation for sample inputs, things to consider when running
            the model with data, etc.
          items:
            type: string
          nullable: true
          type: array
        hasSupportScriptLocation:
          description: Property that links to the location of scripts that may be
            used from the main runnable script.
          items:
            type: string
          nullable: true
          type: array
        readme:
          description: URl to the readme file of a software component
          items:
            type: string
          nullable: true
          type: array
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        hasAssumption:
          description: Assumptions of a software, e.g. the solver being used for a
            particular model, the source of the data (e.g., all data must have a given
            resolution), etc.
          items:
            type: string
          nullable: true
          type: array
        hasParameter:
          description: Property that indicates the parameters of a model configuration
          items:
            $ref: '#/components/schemas/Parameter'
          nullable: true
          type: array
        operatingSystems:
          description: Operating systems under which a software component can operate
          items:
            type: string
          nullable: true
          type: array
        hasExecutableNotebook:
          description: Property that links a software component with an executable
            notebook (e.g., Jupyter notebook) that illustrates how to use it in an
            executable manner.
          items:
            type: string
          nullable: true
          type: array
        usefulForCalculatingIndex:
          description: Property that indicates that a software component (or any of
            its outputs) can be used to calculate a particular index. The rationale
            for this property is that indices are usually calculated by applying post-processing
            steps to the outputs of a software component.
          items:
            $ref: '#/components/schemas/NumericalIndex'
          nullable: true
          type: array
        hasInput:
          description: Property that links a model configuration to the input types
            expected by it.
          items:
            $ref: '#/components/schemas/DatasetSpecification'
          nullable: true
          type: array
      type: object
    SampleCollection:
      description: A collection of resources that are used as sample for running a
        sfoware component multiple times
      example:
        value:
          id: some_id
      properties:
        dataCatalogIdentifier:
          description: An identifier for resources with metadata entries in a data
            catalog
          items:
            type: string
          nullable: true
          type: array
        hasPart:
          description: Property designed to reference the elements included in a sample
            collection.
          items:
            $ref: '#/components/schemas/SampleResource'
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        value:
          description: Value associated to the described entity
          items:
            anyOf:
            - format: uri
              type: string
            - type: boolean
            - format: date-time
              type: string
            - format: float
              type: number
            - format: int32
              type: integer
            - type: string
          nullable: true
          type: array
      type: object
    PointBasedGrid:
      description: A grid that is based on a series if points (or a single point).
        Typically associated with point-based models
      example:
        value:
          id: some_id
      properties:
        hasDimensionality:
          description: Description not available
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        hasFormat:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        pathLocation:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasFileStructure:
          description: Description not available
          items:
            description: Description not available
            type: object
          maxItems: 1
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        hasDataTransformation:
          description: Description not available
          items:
            $ref: '#/components/schemas/DataTransformation'
          nullable: true
          type: array
        hasPresentation:
          description: Description not available
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        hasFixedResource:
          description: Description not available
          items:
            $ref: '#/components/schemas/SampleResource'
          nullable: true
          type: array
        hasCoordinateSystem:
          description: Coordinate system used in a grid
          items:
            type: string
          maxItems: 1
          nullable: true
          type: array
        hasSpatialResolution:
          description: Spatial resolution of a grid (e.g., 50m)
          items:
            type: string
          nullable: true
          type: array
        isTransformedFrom:
          description: Description not available
          items:
            $ref: '#/components/schemas/DatasetSpecification'
          nullable: true
          type: array
        hasShape:
          description: 'Grids may be: rectangular, triangular, hexagonal, hybrid,
            unstructured, block structure, etc.'
          items:
            type: string
          nullable: true
          type: array
        hasDimension:
          description: Dimension of the grid (2D, 3D)
          items:
            type: string
          maxItems: 1
          nullable: true
          type: array
        hasDataTransformationSetup:
          description: Description not available
          items:
            $ref: '#/components/schemas/DataTransformationSetup'
          nullable: true
          type: array
        position:
          description: Description not available
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
      type: object
    GeoCoordinates:
      description: Coordinate metadata of a region
      example:
        value:
          id: some_id
      properties:
        elevation:
          description: Elevation of a location (WGS84)
          items:
            type: string
          nullable: true
          type: array
        latitude:
          description: Latitude (coordinates) of a location (WGS84)
          items:
            type: string
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        longitude:
          description: Longitude (coordinates) of a location (WGS84)
          items:
            type: string
          nullable: true
          type: array
      type: object
    SpatialResolution:
      description: Description not available
      example:
        value:
          id: some_id
      properties:
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
      type: object
    SoftwareVersion:
      description: A software version is a specificf type of software that represents
        a particular set of functionalities. New functionalities and error fixes may
        occur between software versions
      example:
        value:
          id: some_id
      properties:
        hasDownloadInstructions:
          description: Instructions needed to download a software component. The difference
            with `hasDownloadURL` is that this property captures the human readable
            instructions required to download software. For example, sometimes an
            authentication is needed, users need to fill in a form, etc.
          items:
            type: string
          nullable: true
          type: array
        keywords:
          description: Keywords associated with a software component
          items:
            type: string
          nullable: true
          type: array
        hasDocumentation:
          description: Pointer to the documentation of the model
          items:
            type: string
          nullable: true
          type: array
        softwareRequirements:
          description: Software requirements needed to install a software component
          items:
            type: string
          nullable: true
          type: array
        hasDownloadURL:
          description: Download URL where to obtain the source/executable of the software
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        hasInstallationInstructions:
          description: Instructions required to install this particular piece of software.
            Installation instructions usually are available in a human-readable manner.
          items:
            type: string
          nullable: true
          type: array
        compatibleVisualizationSoftware:
          description: Property that links a software component to other useful software
            that canbe used to visualize its outputs
          items:
            $ref: '#/components/schemas/Software'
          nullable: true
          type: array
        copyrightHolder:
          description: Copyright holder for a software component
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasFAQ:
          description: Frequently asked questions about a software
          items:
            type: string
          nullable: true
          type: array
        logo:
          description: Property that links to the image used as logo for a software
            component
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasContactPerson:
          description: Contact person responsible for a software component
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        tag:
          description: 'Tag used to annotate a version or a software configuration.
            This annotation is useful to show which version is the latest, or which
            version is deprecated. Supported tags are: "latest", "deprecated"'
          items:
            type: string
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        identifier:
          description: Identifier of the resource being described
          items:
            type: string
          nullable: true
          type: array
        hasConfiguration:
          description: Property that links a model to one of its configurations. A
            model may have multiple configurations, each of which is unique in terms
            of the inputs and outputs it uses.
          items:
            $ref: '#/components/schemas/SoftwareConfiguration'
          nullable: true
          type: array
        author:
          description: The creator of a software component
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasBuildFile:
          description: A file (e.g., Dockerfile) with executable instructions indicating
            how a Software Image or a Software component is built
          items:
            type: string
          nullable: true
          type: array
        shortDescription:
          description: A summarized description of the resource
          items:
            type: string
          nullable: true
          type: array
        datePublished:
          description: Date when a software component was published
          items:
            type: string
          nullable: true
          type: array
        license:
          description: License of a software component or its source code
          items:
            type: string
          nullable: true
          type: array
        hasSourceCode:
          description: Property designed to link a software with its software source
            code (which may reside in a code repository such as GitHub)
          items:
            $ref: '#/components/schemas/SourceCode'
          maxItems: 1
          nullable: true
          type: array
        hasExample:
          description: An example explaining a scenario where the software component
            was used in plain language.
          items:
            type: string
          nullable: true
          type: array
        publisher:
          description: Publisher organization or person responsible for a software
            component
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        doi:
          description: Digital Object Identifier associated with a software component
          items:
            type: string
          nullable: true
          type: array
        hasFunding:
          description: Property that links a software project to its funding information
          items:
            $ref: '#/components/schemas/FundingInformation'
          nullable: true
          type: array
        supportDetails:
          description: Property to link details, such as mailing lists in case a contact
            person is not provided
          items:
            type: string
          nullable: true
          type: array
        hasVersion:
          description: Property designed to link a software component with its corresponding
            versions
          items:
            $ref: '#/components/schemas/SoftwareVersion'
          nullable: true
          type: array
        hasTypicalDataSource:
          description: Typical data sources that are used by a software component
          items:
            type: string
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        referencePublication:
          description: Main publication to cite for this software component
          items:
            type: string
          nullable: true
          type: array
        screenshot:
          description: Image illustrating a snapshot of the target software
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hadPrimarySource:
          description: Property to identify the original source of the information
            of the annotated resource. It could be a web page, an organization, a
            person, some experiment notes, etc.
          items:
            description: Property to identify the original source of the information
              of the annotated resource. It could be a web page, an organization,
              a person, some experiment notes, etc.
            type: object
          nullable: true
          type: array
        issueTracker:
          description: Pointer to the issue tracker of a software component
          items:
            type: string
          nullable: true
          type: array
        dateCreated:
          description: Date when a software component was created
          items:
            type: string
          nullable: true
          type: array
        contributor:
          description: Contributor to a software component
          items:
            $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasPurpose:
          description: Objective or main functionality that can be achieved by running
            this software
          items:
            type: string
          nullable: true
          type: array
        hasExecutableInstructions:
          description: Instructions that indicate how a software component should
            be executed. The difference with `hasExecutionCommand` is that the execution
            instructions aim to be human-readable, and have explanations between the
            different commands and instructions
          items:
            type: string
          nullable: true
          type: array
        hasSampleVisualization:
          description: A typical sample visualization of the softwware outputs
          items:
            $ref: '#/components/schemas/Visualization'
          nullable: true
          type: array
        memoryRequirements:
          description: Memory requirements of a software
          items:
            type: string
          nullable: true
          type: array
        website:
          description: Website of the software
          items:
            type: string
          nullable: true
          type: array
        citation:
          description: How to cite this software
          items:
            type: string
          nullable: true
          type: array
        processorRequirements:
          description: Processor requirements of a software component
          items:
            type: string
          nullable: true
          type: array
        hasUsageNotes:
          description: Property that describes the usage considerations of a particular
            software. These notes capture the rationale of for that software configuration,
            along with an explanation for sample inputs, things to consider when running
            the model with data, etc.
          items:
            type: string
          nullable: true
          type: array
        readme:
          description: URl to the readme file of a software component
          items:
            type: string
          nullable: true
          type: array
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        hasAssumption:
          description: Assumptions of a software, e.g. the solver being used for a
            particular model, the source of the data (e.g., all data must have a given
            resolution), etc.
          items:
            type: string
          nullable: true
          type: array
        operatingSystems:
          description: Operating systems under which a software component can operate
          items:
            type: string
          nullable: true
          type: array
        hasExecutableNotebook:
          description: Property that links a software component with an executable
            notebook (e.g., Jupyter notebook) that illustrates how to use it in an
            executable manner.
          items:
            type: string
          nullable: true
          type: array
        usefulForCalculatingIndex:
          description: Property that indicates that a software component (or any of
            its outputs) can be used to calculate a particular index. The rationale
            for this property is that indices are usually calculated by applying post-processing
            steps to the outputs of a software component.
          items:
            $ref: '#/components/schemas/NumericalIndex'
          nullable: true
          type: array
        hasVersionId:
          description: Identifier of the version of this software
          items:
            type: string
          nullable: true
          type: array
      type: object
    SoftwareImage:
      description: An image that virtualizes the functionality of a given software.
        For example, a Docker container.
      example:
        value:
          id: some_id
      properties:
        hasDownloadInstructions:
          description: Instructions needed to download a software component. The difference
            with `hasDownloadURL` is that this property captures the human readable
            instructions required to download software. For example, sometimes an
            authentication is needed, users need to fill in a form, etc.
          items:
            type: string
          nullable: true
          type: array
        keywords:
          description: Keywords associated with a software component
          items:
            type: string
          nullable: true
          type: array
        hasDocumentation:
          description: Pointer to the documentation of the model
          items:
            type: string
          nullable: true
          type: array
        softwareRequirements:
          description: Software requirements needed to install a software component
          items:
            type: string
          nullable: true
          type: array
        hasDownloadURL:
          description: Download URL where to obtain the source/executable of the software
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        hasInstallationInstructions:
          description: Instructions required to install this particular piece of software.
            Installation instructions usually are available in a human-readable manner.
          items:
            type: string
          nullable: true
          type: array
        compatibleVisualizationSoftware:
          description: Property that links a software component to other useful software
            that canbe used to visualize its outputs
          items:
            $ref: '#/components/schemas/Software'
          nullable: true
          type: array
        copyrightHolder:
          description: Copyright holder for a software component
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasFAQ:
          description: Frequently asked questions about a software
          items:
            type: string
          nullable: true
          type: array
        logo:
          description: Property that links to the image used as logo for a software
            component
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasContactPerson:
          description: Contact person responsible for a software component
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        identifier:
          description: Identifier of the resource being described
          items:
            type: string
          nullable: true
          type: array
        author:
          description: The creator of a software component
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasBuildFile:
          description: A file (e.g., Dockerfile) with executable instructions indicating
            how a Software Image or a Software component is built
          items:
            type: string
          nullable: true
          type: array
        shortDescription:
          description: A summarized description of the resource
          items:
            type: string
          nullable: true
          type: array
        hasExecutionCommand:
          description: Execution instructions on how to run the image
          items:
            type: string
          nullable: true
          type: array
        datePublished:
          description: Date when a software component was published
          items:
            type: string
          nullable: true
          type: array
        license:
          description: License of a software component or its source code
          items:
            type: string
          nullable: true
          type: array
        hasSourceCode:
          description: Property designed to link a software with its software source
            code (which may reside in a code repository such as GitHub)
          items:
            $ref: '#/components/schemas/SourceCode'
          maxItems: 1
          nullable: true
          type: array
        hasExample:
          description: An example explaining a scenario where the software component
            was used in plain language.
          items:
            type: string
          nullable: true
          type: array
        publisher:
          description: Publisher organization or person responsible for a software
            component
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        doi:
          description: Digital Object Identifier associated with a software component
          items:
            type: string
          nullable: true
          type: array
        hasFunding:
          description: Property that links a software project to its funding information
          items:
            $ref: '#/components/schemas/FundingInformation'
          nullable: true
          type: array
        supportDetails:
          description: Property to link details, such as mailing lists in case a contact
            person is not provided
          items:
            type: string
          nullable: true
          type: array
        hasVersion:
          description: Property designed to link a software component with its corresponding
            versions
          items:
            $ref: '#/components/schemas/SoftwareVersion'
          nullable: true
          type: array
        hasTypicalDataSource:
          description: Typical data sources that are used by a software component
          items:
            type: string
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        referencePublication:
          description: Main publication to cite for this software component
          items:
            type: string
          nullable: true
          type: array
        screenshot:
          description: Image illustrating a snapshot of the target software
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hadPrimarySource:
          description: Property to identify the original source of the information
            of the annotated resource. It could be a web page, an organization, a
            person, some experiment notes, etc.
          items:
            description: Property to identify the original source of the information
              of the annotated resource. It could be a web page, an organization,
              a person, some experiment notes, etc.
            type: object
          nullable: true
          type: array
        issueTracker:
          description: Pointer to the issue tracker of a software component
          items:
            type: string
          nullable: true
          type: array
        dateCreated:
          description: Date when a software component was created
          items:
            type: string
          nullable: true
          type: array
        contributor:
          description: Contributor to a software component
          items:
            $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        availableInRegistry:
          description: Property that indicates in which registry the software image
            being described can be found. For example, https://hub.docker.com
          items:
            type: string
          nullable: true
          type: array
        hasPurpose:
          description: Objective or main functionality that can be achieved by running
            this software
          items:
            type: string
          nullable: true
          type: array
        hasExecutableInstructions:
          description: Instructions that indicate how a software component should
            be executed. The difference with `hasExecutionCommand` is that the execution
            instructions aim to be human-readable, and have explanations between the
            different commands and instructions
          items:
            type: string
          nullable: true
          type: array
        hasSampleVisualization:
          description: A typical sample visualization of the softwware outputs
          items:
            $ref: '#/components/schemas/Visualization'
          nullable: true
          type: array
        memoryRequirements:
          description: Memory requirements of a software
          items:
            type: string
          nullable: true
          type: array
        website:
          description: Website of the software
          items:
            type: string
          nullable: true
          type: array
        citation:
          description: How to cite this software
          items:
            type: string
          nullable: true
          type: array
        processorRequirements:
          description: Processor requirements of a software component
          items:
            type: string
          nullable: true
          type: array
        hasUsageNotes:
          description: Property that describes the usage considerations of a particular
            software. These notes capture the rationale of for that software configuration,
            along with an explanation for sample inputs, things to consider when running
            the model with data, etc.
          items:
            type: string
          nullable: true
          type: array
        readme:
          description: URl to the readme file of a software component
          items:
            type: string
          nullable: true
          type: array
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        hasAssumption:
          description: Assumptions of a software, e.g. the solver being used for a
            particular model, the source of the data (e.g., all data must have a given
            resolution), etc.
          items:
            type: string
          nullable: true
          type: array
        operatingSystems:
          description: Operating systems under which a software component can operate
          items:
            type: string
          nullable: true
          type: array
        hasExecutableNotebook:
          description: Property that links a software component with an executable
            notebook (e.g., Jupyter notebook) that illustrates how to use it in an
            executable manner.
          items:
            type: string
          nullable: true
          type: array
        usefulForCalculatingIndex:
          description: Property that indicates that a software component (or any of
            its outputs) can be used to calculate a particular index. The rationale
            for this property is that indices are usually calculated by applying post-processing
            steps to the outputs of a software component.
          items:
            $ref: '#/components/schemas/NumericalIndex'
          nullable: true
          type: array
      type: object
    DataTransformation:
      description: Class that represents a software for performing data transformation.
      example:
        value:
          id: some_id
      properties:
        hasDownloadInstructions:
          description: Instructions needed to download a software component. The difference
            with `hasDownloadURL` is that this property captures the human readable
            instructions required to download software. For example, sometimes an
            authentication is needed, users need to fill in a form, etc.
          items:
            type: string
          nullable: true
          type: array
        keywords:
          description: Keywords associated with a software component
          items:
            type: string
          nullable: true
          type: array
        hasDocumentation:
          description: Pointer to the documentation of the model
          items:
            type: string
          nullable: true
          type: array
        hasImplementationScriptLocation:
          description: Property that points to the main runnable script for the current
            function
          items:
            type: string
          nullable: true
          type: array
        softwareRequirements:
          description: Software requirements needed to install a software component
          items:
            type: string
          nullable: true
          type: array
        hasDownloadURL:
          description: Download URL where to obtain the source/executable of the software
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        hasInstallationInstructions:
          description: Instructions required to install this particular piece of software.
            Installation instructions usually are available in a human-readable manner.
          items:
            type: string
          nullable: true
          type: array
        compatibleVisualizationSoftware:
          description: Property that links a software component to other useful software
            that canbe used to visualize its outputs
          items:
            $ref: '#/components/schemas/Software'
          nullable: true
          type: array
        copyrightHolder:
          description: Copyright holder for a software component
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasFAQ:
          description: Frequently asked questions about a software
          items:
            type: string
          nullable: true
          type: array
        logo:
          description: Property that links to the image used as logo for a software
            component
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasContactPerson:
          description: Contact person responsible for a software component
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        tag:
          description: 'Tag used to annotate a version or a software configuration.
            This annotation is useful to show which version is the latest, or which
            version is deprecated. Supported tags are: "latest", "deprecated"'
          items:
            type: string
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        identifier:
          description: Identifier of the resource being described
          items:
            type: string
          nullable: true
          type: array
        hasSampleExecution:
          description: Property pointing to a sample execution of a software configuration
          items:
            $ref: '#/components/schemas/SampleExecution'
          nullable: true
          type: array
        hasSampleResult:
          description: Property designed to link a software configuration to a sample
            resource resulting from its execution
          items:
            $ref: '#/components/schemas/SampleResource'
          nullable: true
          type: array
        author:
          description: The creator of a software component
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasConstraint:
          description: 'Constraint or rule associated to a software configuration.
            For example: "This model accepts only monthly data", or "all inputs of
            this model configuration must share the same location". More structured
            restrictions, such as Jena rules or SWRL rules may also be captured with
            this property'
          items:
            $ref: '#/components/schemas/Constraint'
          nullable: true
          type: array
        hasBuildFile:
          description: A file (e.g., Dockerfile) with executable instructions indicating
            how a Software Image or a Software component is built
          items:
            type: string
          nullable: true
          type: array
        shortDescription:
          description: A summarized description of the resource
          items:
            type: string
          nullable: true
          type: array
        hasExecutionCommand:
          description: Execution instructions on how to run the image
          items:
            type: string
          nullable: true
          type: array
        datePublished:
          description: Date when a software component was published
          items:
            type: string
          nullable: true
          type: array
        license:
          description: License of a software component or its source code
          items:
            type: string
          nullable: true
          type: array
        hasSourceCode:
          description: Property designed to link a software with its software source
            code (which may reside in a code repository such as GitHub)
          items:
            $ref: '#/components/schemas/SourceCode'
          maxItems: 1
          nullable: true
          type: array
        hasSetup:
          description: Property used to define configurations with some fixed resources
            and values. The rationale of this property is to allow predefined configurations
          items:
            $ref: '#/components/schemas/ConfigurationSetup'
          nullable: true
          type: array
        hasExample:
          description: An example explaining a scenario where the software component
            was used in plain language.
          items:
            type: string
          nullable: true
          type: array
        publisher:
          description: Publisher organization or person responsible for a software
            component
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasOutput:
          description: Property that expresses what are the outputs of a model
          items:
            $ref: '#/components/schemas/DatasetSpecification'
          nullable: true
          type: array
        doi:
          description: Digital Object Identifier associated with a software component
          items:
            type: string
          nullable: true
          type: array
        hasFunding:
          description: Property that links a software project to its funding information
          items:
            $ref: '#/components/schemas/FundingInformation'
          nullable: true
          type: array
        hasComponentLocation:
          description: Location of the aggregation of all the files needed to execute
            the component. Usually a zip file including the run script and support
            scripts, including specification files
          items:
            type: string
          nullable: true
          type: array
        supportDetails:
          description: Property to link details, such as mailing lists in case a contact
            person is not provided
          items:
            type: string
          nullable: true
          type: array
        hasVersion:
          description: Property designed to link a software component with its corresponding
            versions
          items:
            $ref: '#/components/schemas/SoftwareVersion'
          nullable: true
          type: array
        hasTypicalDataSource:
          description: Typical data sources that are used by a software component
          items:
            type: string
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        referencePublication:
          description: Main publication to cite for this software component
          items:
            type: string
          nullable: true
          type: array
        screenshot:
          description: Image illustrating a snapshot of the target software
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hadPrimarySource:
          description: Property to identify the original source of the information
            of the annotated resource. It could be a web page, an organization, a
            person, some experiment notes, etc.
          items:
            description: Property to identify the original source of the information
              of the annotated resource. It could be a web page, an organization,
              a person, some experiment notes, etc.
            type: object
          nullable: true
          type: array
        issueTracker:
          description: Pointer to the issue tracker of a software component
          items:
            type: string
          nullable: true
          type: array
        hasSoftwareImage:
          description: Function to link a function with its corresponding container
          items:
            $ref: '#/components/schemas/SoftwareImage'
          maxItems: 1
          nullable: true
          type: array
        dateCreated:
          description: Date when a software component was created
          items:
            type: string
          nullable: true
          type: array
        contributor:
          description: Contributor to a software component
          items:
            $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasPurpose:
          description: Objective or main functionality that can be achieved by running
            this software
          items:
            type: string
          nullable: true
          type: array
        hasExecutableInstructions:
          description: Instructions that indicate how a software component should
            be executed. The difference with `hasExecutionCommand` is that the execution
            instructions aim to be human-readable, and have explanations between the
            different commands and instructions
          items:
            type: string
          nullable: true
          type: array
        hasSampleVisualization:
          description: A typical sample visualization of the softwware outputs
          items:
            $ref: '#/components/schemas/Visualization'
          nullable: true
          type: array
        memoryRequirements:
          description: Memory requirements of a software
          items:
            type: string
          nullable: true
          type: array
        website:
          description: Website of the software
          items:
            type: string
          nullable: true
          type: array
        citation:
          description: How to cite this software
          items:
            type: string
          nullable: true
          type: array
        processorRequirements:
          description: Processor requirements of a software component
          items:
            type: string
          nullable: true
          type: array
        hasUsageNotes:
          description: Property that describes the usage considerations of a particular
            software. These notes capture the rationale of for that software configuration,
            along with an explanation for sample inputs, things to consider when running
            the model with data, etc.
          items:
            type: string
          nullable: true
          type: array
        hasSupportScriptLocation:
          description: Property that links to the location of scripts that may be
            used from the main runnable script.
          items:
            type: string
          nullable: true
          type: array
        readme:
          description: URl to the readme file of a software component
          items:
            type: string
          nullable: true
          type: array
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        hasAssumption:
          description: Assumptions of a software, e.g. the solver being used for a
            particular model, the source of the data (e.g., all data must have a given
            resolution), etc.
          items:
            type: string
          nullable: true
          type: array
        hasParameter:
          description: Property that indicates the parameters of a model configuration
          items:
            $ref: '#/components/schemas/Parameter'
          nullable: true
          type: array
        operatingSystems:
          description: Operating systems under which a software component can operate
          items:
            type: string
          nullable: true
          type: array
        hasExecutableNotebook:
          description: Property that links a software component with an executable
            notebook (e.g., Jupyter notebook) that illustrates how to use it in an
            executable manner.
          items:
            type: string
          nullable: true
          type: array
        usefulForCalculatingIndex:
          description: Property that indicates that a software component (or any of
            its outputs) can be used to calculate a particular index. The rationale
            for this property is that indices are usually calculated by applying post-processing
            steps to the outputs of a software component.
          items:
            $ref: '#/components/schemas/NumericalIndex'
          nullable: true
          type: array
        hasInput:
          description: Property that links a model configuration to the input types
            expected by it.
          items:
            $ref: '#/components/schemas/DatasetSpecification'
          nullable: true
          type: array
      type: object
    NumericalIndex:
      description: A number (such as a ratio) derived from a series of observations
        and used as an indicator or measure (https://www.merriam-webster.com/dictionary/index)
      example:
        value:
          id: some_id
      properties:
        hasStandardVariable:
          description: the standard name of a variable
          items:
            $ref: '#/components/schemas/StandardVariable'
          maxItems: 1
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
      type: object
    Model:
      description: A mathematical description of a process (e.g., hydrological, agricultural,
        social, etc.)
      example:
        value:
          id: some_id
      properties:
        hasDownloadInstructions:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        keywords:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasDocumentation:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasGrid:
          description: Grid information about the model
          items:
            $ref: '#/components/schemas/Grid'
          nullable: true
          type: array
        softwareRequirements:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasDownloadURL:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        hasInstallationInstructions:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        compatibleVisualizationSoftware:
          description: Description not available
          items:
            $ref: '#/components/schemas/Software'
          nullable: true
          type: array
        copyrightHolder:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasFAQ:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        logo:
          description: Description not available
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasContactPerson:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        limitations:
          description: Known restrictions (i.e. cases where the model is known not
            to be reliable or shouldn't be used)
          items:
            type: string
          nullable: true
          type: array
        identifier:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        author:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasBuildFile:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        shortDescription:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        datePublished:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        theoreticalBasis:
          description: What is the theory behind the processes described in the model
          items:
            type: string
          nullable: true
          type: array
        license:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasSourceCode:
          description: Description not available
          items:
            $ref: '#/components/schemas/SourceCode'
          maxItems: 1
          nullable: true
          type: array
        hasExplanationDiagram:
          description: Diagram used to explain the behavior of the model
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasExample:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        publisher:
          description: Description not available
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        runtimeEstimation:
          description: An estimate of the time required to run example codes or other
            known configurations
          items:
            type: string
          nullable: true
          type: array
        doi:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasFunding:
          description: Description not available
          items:
            $ref: '#/components/schemas/FundingInformation'
          nullable: true
          type: array
        hasProcess:
          description: Property that indicates which physical processes (if any) are
            associated with a model
          items:
            $ref: '#/components/schemas/Process'
          nullable: true
          type: array
        supportDetails:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasVersion:
          description: Description not available
          items:
            $ref: '#/components/schemas/SoftwareVersion'
          nullable: true
          type: array
        hasTypicalDataSource:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        referencePublication:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        screenshot:
          description: Description not available
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasModelCategory:
          description: Category associated with a model (e.g., Hydrology, etc.)
          items:
            $ref: '#/components/schemas/ModelCategory'
          nullable: true
          type: array
        hadPrimarySource:
          description: Description not available
          items:
            description: Description not available
            type: object
          nullable: true
          type: array
        issueTracker:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        dateCreated:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        contributor:
          description: Description not available
          items:
            $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasInputVariable:
          description: Variable that is used as input for this model
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
        hasPurpose:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasExecutableInstructions:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasSampleVisualization:
          description: Description not available
          items:
            $ref: '#/components/schemas/Visualization'
          nullable: true
          type: array
        memoryRequirements:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        website:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        citation:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        processorRequirements:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        parameterization:
          description: Were there any simplifications made to processes to make the
            model more efficient
          items:
            type: string
          nullable: true
          type: array
        hasUsageNotes:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        readme:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        hasAssumption:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        operatingSystems:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasExecutableNotebook:
          description: Description not available
          items:
            type: string
          nullable: true
          type: array
        hasEquation:
          description: Equations used in the model
          items:
            $ref: '#/components/schemas/Equation'
          nullable: true
          type: array
        usefulForCalculatingIndex:
          description: Description not available
          items:
            $ref: '#/components/schemas/NumericalIndex'
          nullable: true
          type: array
        hasOutputVariable:
          description: Variable that is used as output for this model
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
      type: object
    SampleResource:
      description: A sample resource associated with a software
      example:
        value:
          id: some_id
      properties:
        dataCatalogIdentifier:
          description: An identifier for resources with metadata entries in a data
            catalog
          items:
            type: string
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        value:
          description: Value associated to the described entity
          items:
            anyOf:
            - format: uri
              type: string
            - type: boolean
            - format: date-time
              type: string
            - format: float
              type: number
            - format: int32
              type: integer
            - type: string
          nullable: true
          type: array
      type: object
    Parameter:
      description: Description not available
      example:
        value:
          id: some_id
      properties:
        hasDefaultValue:
          description: Default accepted value of a variable presentation (or a parameter)
          items:
            anyOf:
            - format: uri
              type: string
            - type: boolean
            - format: date-time
              type: string
            - format: float
              type: number
            - format: int32
              type: integer
            - type: string
          nullable: true
          type: array
        hasMaximumAcceptedValue:
          description: Maximum accepted value of a variable presentation (or a parameter)
          items:
            anyOf:
            - format: date-time
              type: string
            - format: float
              type: number
            - format: int32
              type: integer
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        hasDataType:
          description: Property that indicates the data type of a parameter
          items:
            type: string
          nullable: true
          type: array
        hasFixedValue:
          description: Value of a parameter in a software setup.
          items:
            anyOf:
            - format: uri
              type: string
            - type: boolean
            - format: date-time
              type: string
            - format: float
              type: number
            - format: int32
              type: integer
            - type: string
          nullable: true
          type: array
        hasPresentation:
          description: Property that links an instance of a dataset (or a dataset
            specification) to the presentation of a variable contained (or expected
            to be contained) on it.
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        recommendedIncrement:
          description: Value that represents how a parameter should be incremented
            on each iteration of a software component execution. This value is important
            when preparing execution ensembles automatically, e.g., simulating crop
            production varying the parameter "fertilizer amount" in increments of
            10%.
          items:
            type: number
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        hasMinimumAcceptedValue:
          description: Minimum accepted value of a variable presentation (or a parameter)
          items:
            anyOf:
            - format: date-time
              type: string
            - format: float
              type: number
            - format: int32
              type: integer
          nullable: true
          type: array
        hasAcceptedValues:
          description: Property that constraints which values are accepted for a parameter.
            For example, the name of a crop can only be "Maize" or "Sorghum"
          items:
            type: string
          nullable: true
          type: array
        adjustsVariable:
          description: Property that links parameter with the variable they adjust.
            This property can be used when parameters quantify variables without directly
            representing them. For example, a "fertilizer percentage adjustment" parameter
            can quantify a "fertilizer price" variable
          items:
            $ref: '#/components/schemas/Variable'
          maxItems: 1
          nullable: true
          type: array
        relevantForIntervention:
          description: Description not available
          items:
            $ref: '#/components/schemas/Intervention'
          nullable: true
          type: array
        position:
          description: Position of the parameter or input/output in the model configuration.
            This property is needed to know how to organize the I/O of the component
            on execution
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        usesUnit:
          description: Property used to link a variable presentation or time interval
            to the unit they are represented in
          items:
            $ref: '#/components/schemas/Unit'
          maxItems: 1
          nullable: true
          type: array
        hasStepSize:
          description: 'Property that determines what are the increments (step size)
            that are commonly used to vary a parameter. This is commonly used for
            automatically setting up software tests. For example, if I want to set
            up a model and try 30 reasonable values on a parameter, I may use the
            default value and the step size to create the appropriate increments.
            If the step size is 0.1 and the default value is 0, then I will will be
            able to create setups: 0, 0.1, 0.2...2.9,3'
          items:
            type: number
          nullable: true
          type: array
      type: object
    Region:
      description: An area or division with some characteristics but not always fixed
        boundaries
      example:
        value:
          id: some_id
      properties:
        geo:
          description: Specific coordinates or shape associated with a region
          items:
            anyOf:
            - $ref: '#/components/schemas/GeoCoordinates'
            - $ref: '#/components/schemas/GeoShape'
          nullable: true
          type: array
        partOf:
          description: Indicates whether a region is part of another region
          items:
            $ref: '#/components/schemas/Region'
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
      type: object
    VariablePresentation:
      description: Description not available
      example:
        value:
          id: some_id
      properties:
        hasDefaultValue:
          description: Default accepted value of a variable presentation (or a parameter)
          items:
            anyOf:
            - format: uri
              type: string
            - type: boolean
            - format: date-time
              type: string
            - format: float
              type: number
            - format: int32
              type: integer
            - type: string
          nullable: true
          type: array
        hasShortName:
          description: A short name (e.g., temperature) capturing the high-level concept
            of the variable
          items:
            type: string
          nullable: true
          type: array
        hasMinimumAcceptedValue:
          description: Minimum accepted value of a variable presentation (or a parameter)
          items:
            anyOf:
            - format: date-time
              type: string
            - format: float
              type: number
            - format: int32
              type: integer
          nullable: true
          type: array
        hasStandardVariable:
          description: the standard name of a variable
          items:
            $ref: '#/components/schemas/StandardVariable'
          maxItems: 1
          nullable: true
          type: array
        hasMaximumAcceptedValue:
          description: Maximum accepted value of a variable presentation (or a parameter)
          items:
            anyOf:
            - format: date-time
              type: string
            - format: float
              type: number
            - format: int32
              type: integer
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        partOfDataset:
          description: Associates a presentation with a dataset where the presentation
            occurs
          items:
            $ref: '#/components/schemas/DatasetSpecification'
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        usesUnit:
          description: Property used to link a variable presentation or time interval
            to the unit they are represented in
          items:
            $ref: '#/components/schemas/Unit'
          maxItems: 1
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        hasLongName:
          description: Properties that relate the variable representation to its long
            name. The long name is useful for context (e.g., precipitation is less
            ambiguous than P) but not as precise as the standard name.
          items:
            type: string
          nullable: true
          type: array
      type: object
    Software:
      description: Description not available
      example:
        value:
          id: some_id
      properties:
        hasDownloadInstructions:
          description: Instructions needed to download a software component. The difference
            with `hasDownloadURL` is that this property captures the human readable
            instructions required to download software. For example, sometimes an
            authentication is needed, users need to fill in a form, etc.
          items:
            type: string
          nullable: true
          type: array
        hasFunding:
          description: Property that links a software project to its funding information
          items:
            $ref: '#/components/schemas/FundingInformation'
          nullable: true
          type: array
        keywords:
          description: Keywords associated with a software component
          items:
            type: string
          nullable: true
          type: array
        hasDocumentation:
          description: Pointer to the documentation of the model
          items:
            type: string
          nullable: true
          type: array
        supportDetails:
          description: Property to link details, such as mailing lists in case a contact
            person is not provided
          items:
            type: string
          nullable: true
          type: array
        softwareRequirements:
          description: Software requirements needed to install a software component
          items:
            type: string
          nullable: true
          type: array
        hasVersion:
          description: Property designed to link a software component with its corresponding
            versions
          items:
            $ref: '#/components/schemas/SoftwareVersion'
          nullable: true
          type: array
        hasTypicalDataSource:
          description: Typical data sources that are used by a software component
          items:
            type: string
          nullable: true
          type: array
        hasDownloadURL:
          description: Download URL where to obtain the source/executable of the software
          items:
            type: string
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        referencePublication:
          description: Main publication to cite for this software component
          items:
            type: string
          nullable: true
          type: array
        screenshot:
          description: Image illustrating a snapshot of the target software
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        hasInstallationInstructions:
          description: Instructions required to install this particular piece of software.
            Installation instructions usually are available in a human-readable manner.
          items:
            type: string
          nullable: true
          type: array
        hadPrimarySource:
          description: Property to identify the original source of the information
            of the annotated resource. It could be a web page, an organization, a
            person, some experiment notes, etc.
          items:
            description: Property to identify the original source of the information
              of the annotated resource. It could be a web page, an organization,
              a person, some experiment notes, etc.
            type: object
          nullable: true
          type: array
        issueTracker:
          description: Pointer to the issue tracker of a software component
          items:
            type: string
          nullable: true
          type: array
        dateCreated:
          description: Date when a software component was created
          items:
            type: string
          nullable: true
          type: array
        contributor:
          description: Contributor to a software component
          items:
            $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        compatibleVisualizationSoftware:
          description: Property that links a software component to other useful software
            that canbe used to visualize its outputs
          items:
            $ref: '#/components/schemas/Software'
          nullable: true
          type: array
        copyrightHolder:
          description: Copyright holder for a software component
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasFAQ:
          description: Frequently asked questions about a software
          items:
            type: string
          nullable: true
          type: array
        logo:
          description: Property that links to the image used as logo for a software
            component
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasContactPerson:
          description: Contact person responsible for a software component
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasPurpose:
          description: Objective or main functionality that can be achieved by running
            this software
          items:
            type: string
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        hasExecutableInstructions:
          description: Instructions that indicate how a software component should
            be executed. The difference with `hasExecutionCommand` is that the execution
            instructions aim to be human-readable, and have explanations between the
            different commands and instructions
          items:
            type: string
          nullable: true
          type: array
        hasSampleVisualization:
          description: A typical sample visualization of the softwware outputs
          items:
            $ref: '#/components/schemas/Visualization'
          nullable: true
          type: array
        identifier:
          description: Identifier of the resource being described
          items:
            type: string
          nullable: true
          type: array
        memoryRequirements:
          description: Memory requirements of a software
          items:
            type: string
          nullable: true
          type: array
        website:
          description: Website of the software
          items:
            type: string
          nullable: true
          type: array
        citation:
          description: How to cite this software
          items:
            type: string
          nullable: true
          type: array
        author:
          description: The creator of a software component
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        processorRequirements:
          description: Processor requirements of a software component
          items:
            type: string
          nullable: true
          type: array
        hasUsageNotes:
          description: Property that describes the usage considerations of a particular
            software. These notes capture the rationale of for that software configuration,
            along with an explanation for sample inputs, things to consider when running
            the model with data, etc.
          items:
            type: string
          nullable: true
          type: array
        readme:
          description: URl to the readme file of a software component
          items:
            type: string
          nullable: true
          type: array
        hasBuildFile:
          description: A file (e.g., Dockerfile) with executable instructions indicating
            how a Software Image or a Software component is built
          items:
            type: string
          nullable: true
          type: array
        shortDescription:
          description: A summarized description of the resource
          items:
            type: string
          nullable: true
          type: array
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        hasAssumption:
          description: Assumptions of a software, e.g. the solver being used for a
            particular model, the source of the data (e.g., all data must have a given
            resolution), etc.
          items:
            type: string
          nullable: true
          type: array
        datePublished:
          description: Date when a software component was published
          items:
            type: string
          nullable: true
          type: array
        operatingSystems:
          description: Operating systems under which a software component can operate
          items:
            type: string
          nullable: true
          type: array
        license:
          description: License of a software component or its source code
          items:
            type: string
          nullable: true
          type: array
        hasSourceCode:
          description: Property designed to link a software with its software source
            code (which may reside in a code repository such as GitHub)
          items:
            $ref: '#/components/schemas/SourceCode'
          maxItems: 1
          nullable: true
          type: array
        hasExecutableNotebook:
          description: Property that links a software component with an executable
            notebook (e.g., Jupyter notebook) that illustrates how to use it in an
            executable manner.
          items:
            type: string
          nullable: true
          type: array
        hasExample:
          description: An example explaining a scenario where the software component
            was used in plain language.
          items:
            type: string
          nullable: true
          type: array
        publisher:
          description: Publisher organization or person responsible for a software
            component
          items:
            anyOf:
            - $ref: '#/components/schemas/Organization'
            - $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        usefulForCalculatingIndex:
          description: Property that indicates that a software component (or any of
            its outputs) can be used to calculate a particular index. The rationale
            for this property is that indices are usually calculated by applying post-processing
            steps to the outputs of a software component.
          items:
            $ref: '#/components/schemas/NumericalIndex'
          nullable: true
          type: array
        doi:
          description: Digital Object Identifier associated with a software component
          items:
            type: string
          nullable: true
          type: array
      type: object
    Person:
      description: A human being (individual)
      example:
        value:
          id: some_id
      properties:
        identifier:
          description: Identifier of the resource being described
          items:
            type: string
          nullable: true
          type: array
        website:
          description: Website of the software
          items:
            type: string
          nullable: true
          type: array
        description:
          description: small description
          items:
            type: string
          nullable: true
          type: array
        id:
          description: identifier
          nullable: false
          type: string
        label:
          description: short description of the resource
          items:
            type: string
          nullable: true
          type: array
        type:
          description: type of the resource
          items:
            type: string
          nullable: true
          type: array
        email:
          description: Email of a person
          items:
            type: string
          nullable: true
          type: array
      type: object
  securitySchemes:
    BearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
      x-bearerInfoFunc: openapi_server.controllers.user_controller.decode_token
